!function(h,l,o,a){var i,s,n;function r(t,e){this.settings=null,this.options=h.extend({},r.Defaults,e),this.$element=h(t),this.drag=h.extend({},i),this.state=h.extend({},s),this.e=h.extend({},n),this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._invalidated={},this._pipe=[],h.each(r.Plugins,h.proxy(function(t,e){this._plugins[t[0].toLowerCase()+t.slice(1)]=new e(this)},this)),h.each(r.Pipe,h.proxy(function(t,e){this._pipe.push({filter:e.filter,run:h.proxy(e.run,this)})},this)),this.setup(),this.initialize()}function c(t){if(t.touches!==a)return{x:t.touches[0].pageX,y:t.touches[0].pageY};if(t.touches===a){if(t.pageX!==a)return{x:t.pageX,y:t.pageY};if(t.pageX===a)return{x:t.clientX,y:t.clientY}}}function t(t){var e,i,s=o.createElement("div"),n=t;for(e in n)if(i=n[e],void 0!==s.style[i])return s=null,[i,e];return[!1]}r.Defaults={items:3,loop:!(n={_onDragStart:null,_onDragMove:null,_onDragEnd:null,_transitionEnd:null,_resizer:null,_responsiveCall:null,_goToLoop:null,_checkVisibile:null}),center:!(s={isTouch:!(i={start:0,startX:0,startY:0,current:0,currentX:0,currentY:0,offsetX:0,offsetY:0,distance:null,startTime:0,endTime:0,updatedX:0,targetEl:null}),isScrolling:!1,isSwiping:!1,direction:!1,inMotion:!1}),mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:750,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:l,responsiveClass:!1,fallbackEasing:"swing",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",themeClass:"owl-theme",baseClass:"owl-carousel",itemClass:"owl-item",centerClass:"center",activeClass:"active"},r.Width={Default:"default",Inner:"inner",Outer:"outer"},r.Plugins={},r.Pipe=[{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){var t=this._clones;(this.$stage.children(".cloned").length!==t.length||!this.settings.loop&&0<t.length)&&(this.$stage.children(".cloned").remove(),this._clones=[])}},{filter:["items","settings"],run:function(){var t,e,i=this._clones,s=this._items,n=this.settings.loop?i.length-Math.max(2*this.settings.items,4):0;for(t=0,e=Math.abs(n/2);t<e;t++)0<n?(this.$stage.children().eq(s.length+i.length-1).remove(),i.pop(),this.$stage.children().eq(0).remove(),i.pop()):(i.push(i.length/2),this.$stage.append(s[i[i.length-1]].clone().addClass("cloned")),i.push(s.length-1-(i.length-1)/2),this.$stage.prepend(s[i[i.length-1]].clone().addClass("cloned")))}},{filter:["width","items","settings"],run:function(){var t,e,i,s=this.settings.rtl?1:-1,n=(this.width()/this.settings.items).toFixed(3),o=0;for(this._coordinates=[],e=0,i=this._clones.length+this._items.length;e<i;e++)t=this._mergers[this.relative(e)],t=this.settings.mergeFit&&Math.min(t,this.settings.items)||t,o+=(this.settings.autoWidth?this._items[this.relative(e)].width()+this.settings.margin:n*t)*s,this._coordinates.push(o)}},{filter:["width","items","settings"],run:function(){var t,e,i=(this.width()/this.settings.items).toFixed(3),s={width:Math.abs(this._coordinates[this._coordinates.length-1])+2*this.settings.stagePadding,"padding-left":this.settings.stagePadding||"","padding-right":this.settings.stagePadding||""};if(this.$stage.css(s),(s={width:this.settings.autoWidth?"auto":i-this.settings.margin})[this.settings.rtl?"margin-left":"margin-right"]=this.settings.margin,!this.settings.autoWidth&&0<h.grep(this._mergers,function(t){return 1<t}).length)for(t=0,e=this._coordinates.length;t<e;t++)s.width=Math.abs(this._coordinates[t])-Math.abs(this._coordinates[t-1]||0)-this.settings.margin,this.$stage.children().eq(t).css(s);else this.$stage.children().css(s)}},{filter:["width","items","settings"],run:function(t){t.current&&this.reset(this.$stage.children().index(t.current))}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,i,s,n=this.settings.rtl?1:-1,o=2*this.settings.stagePadding,r=this.coordinates(this.current())+o,a=r+this.width()*n,h=[];for(i=0,s=this._coordinates.length;i<s;i++)t=this._coordinates[i-1]||0,e=Math.abs(this._coordinates[i])+o*n,(this.op(t,"<=",r)&&this.op(t,">",a)||this.op(e,"<",r)&&this.op(e,">",a))&&h.push(i);this.$stage.children("."+this.settings.activeClass).removeClass(this.settings.activeClass),this.$stage.children(":eq("+h.join("), :eq(")+")").addClass(this.settings.activeClass),this.settings.center&&(this.$stage.children("."+this.settings.centerClass).removeClass(this.settings.centerClass),this.$stage.children().eq(this.current()).addClass(this.settings.centerClass))}}],r.prototype.initialize=function(){var t,e,i;if((this.trigger("initialize"),this.$element.addClass(this.settings.baseClass).addClass(this.settings.themeClass).toggleClass("owl-rtl",this.settings.rtl),this.browserSupport(),this.settings.autoWidth&&!0!==this.state.imagesLoaded)&&(t=this.$element.find("img"),e=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:a,i=this.$element.children(e).width(),t.length&&i<=0))return this.preloadAutoWidthImages(t),!1;this.$element.addClass("owl-loading"),this.$stage=h("<"+this.settings.stageElement+' class="owl-stage"/>').wrap('<div class="owl-stage-outer">'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this._width=this.$element.width(),this.refresh(),this.$element.removeClass("owl-loading").addClass("owl-loaded"),this.eventsCall(),this.internalEvents(),this.addTriggerableEvents(),this.trigger("initialized")},r.prototype.setup=function(){var e=this.viewport(),t=this.options.responsive,i=-1,s=null;t?(h.each(t,function(t){t<=e&&i<t&&(i=Number(t))}),delete(s=h.extend({},this.options,t[i])).responsive,s.responsiveClass&&this.$element.attr("class",function(t,e){return e.replace(/\b owl-responsive-\S+/g,"")}).addClass("owl-responsive-"+i)):s=h.extend({},this.options),null!==this.settings&&this._breakpoint===i||(this.trigger("change",{property:{name:"settings",value:s}}),this._breakpoint=i,this.settings=s,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}}))},r.prototype.optionsLogic=function(){this.$element.toggleClass("owl-center",this.settings.center),this.settings.loop&&this._items.length<this.settings.items&&(this.settings.loop=!1),this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},r.prototype.prepare=function(t){var e=this.trigger("prepare",{content:t});return e.data||(e.data=h("<"+this.settings.itemElement+"/>").addClass(this.settings.itemClass).append(t)),this.trigger("prepared",{content:e.data}),e.data},r.prototype.update=function(){for(var t=0,e=this._pipe.length,i=h.proxy(function(t){return this[t]},this._invalidated),s={};t<e;)(this._invalidated.all||0<h.grep(this._pipe[t].filter,i).length)&&this._pipe[t].run(s),t++;this._invalidated={}},r.prototype.width=function(t){switch(t=t||r.Width.Default){case r.Width.Inner:case r.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},r.prototype.refresh=function(){if(0===this._items.length)return!1;(new Date).getTime();this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$stage.addClass("owl-refresh"),this.update(),this.$stage.removeClass("owl-refresh"),this.state.orientation=l.orientation,this.watchVisibility(),this.trigger("refreshed")},r.prototype.eventsCall=function(){this.e._onDragStart=h.proxy(function(t){this.onDragStart(t)},this),this.e._onDragMove=h.proxy(function(t){this.onDragMove(t)},this),this.e._onDragEnd=h.proxy(function(t){this.onDragEnd(t)},this),this.e._onResize=h.proxy(function(t){this.onResize(t)},this),this.e._transitionEnd=h.proxy(function(t){this.transitionEnd(t)},this),this.e._preventClick=h.proxy(function(t){this.preventClick(t)},this)},r.prototype.onThrottledResize=function(){l.clearTimeout(this.resizeTimer),this.resizeTimer=l.setTimeout(this.e._onResize,this.settings.responsiveRefreshRate)},r.prototype.onResize=function(){return!!this._items.length&&(this._width!==this.$element.width()&&(!this.trigger("resize").isDefaultPrevented()&&(this._width=this.$element.width(),this.invalidate("width"),this.refresh(),void this.trigger("resized"))))},r.prototype.eventsRouter=function(t){var e=t.type;"mousedown"===e||"touchstart"===e?this.onDragStart(t):"mousemove"===e||"touchmove"===e?this.onDragMove(t):"mouseup"===e||"touchend"===e?this.onDragEnd(t):"touchcancel"===e&&this.onDragEnd(t)},r.prototype.internalEvents=function(){"ontouchstart"in l||navigator.msMaxTouchPoints;var t=l.navigator.msPointerEnabled;this.settings.mouseDrag?(this.$stage.on("mousedown",h.proxy(function(t){this.eventsRouter(t)},this)),this.$stage.on("dragstart",function(){return!1}),this.$stage.get(0).onselectstart=function(){return!1}):this.$element.addClass("owl-text-select-on"),this.settings.touchDrag&&!t&&this.$stage.on("touchstart touchcancel",h.proxy(function(t){this.eventsRouter(t)},this)),this.transitionEndVendor&&this.on(this.$stage.get(0),this.transitionEndVendor,this.e._transitionEnd,!1),!1!==this.settings.responsive&&this.on(l,"resize",h.proxy(this.onThrottledResize,this))},r.prototype.onDragStart=function(t){var e,i,s,n;if(3===(e=t.originalEvent||t||l.event).which||this.state.isTouch)return!1;if("mousedown"===e.type&&this.$stage.addClass("owl-grab"),this.trigger("drag"),this.drag.startTime=(new Date).getTime(),this.speed(0),this.state.isTouch=!0,this.state.isScrolling=!1,this.state.isSwiping=!1,this.drag.distance=0,i=c(e).x,s=c(e).y,this.drag.offsetX=this.$stage.position().left,this.drag.offsetY=this.$stage.position().top,this.settings.rtl&&(this.drag.offsetX=this.$stage.position().left+this.$stage.width()-this.width()+this.settings.margin),this.state.inMotion&&this.support3d)n=this.getTransformProperty(),this.drag.offsetX=n,this.animate(n),this.state.inMotion=!0;else if(this.state.inMotion&&!this.support3d)return this.state.inMotion=!1;this.drag.startX=i-this.drag.offsetX,this.drag.startY=s-this.drag.offsetY,this.drag.start=i-this.drag.startX,this.drag.targetEl=e.target||e.srcElement,this.drag.updatedX=this.drag.start,"IMG"!==this.drag.targetEl.tagName&&"A"!==this.drag.targetEl.tagName||(this.drag.targetEl.draggable=!1),h(o).on("mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents",h.proxy(function(t){this.eventsRouter(t)},this))},r.prototype.onDragMove=function(t){var e,i,s,n,o,r;this.state.isTouch&&(this.state.isScrolling||(i=c(e=t.originalEvent||t||l.event).x,s=c(e).y,this.drag.currentX=i-this.drag.startX,this.drag.currentY=s-this.drag.startY,this.drag.distance=this.drag.currentX-this.drag.offsetX,this.drag.distance<0?this.state.direction=this.settings.rtl?"right":"left":0<this.drag.distance&&(this.state.direction=this.settings.rtl?"left":"right"),this.settings.loop?this.op(this.drag.currentX,">",this.coordinates(this.minimum()))&&"right"===this.state.direction?this.drag.currentX-=(this.settings.center&&this.coordinates(0))-this.coordinates(this._items.length):this.op(this.drag.currentX,"<",this.coordinates(this.maximum()))&&"left"===this.state.direction&&(this.drag.currentX+=(this.settings.center&&this.coordinates(0))-this.coordinates(this._items.length)):(n=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),o=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),r=this.settings.pullDrag?this.drag.distance/5:0,this.drag.currentX=Math.max(Math.min(this.drag.currentX,n+r),o+r)),(8<this.drag.distance||this.drag.distance<-8)&&(e.preventDefault!==a?e.preventDefault():e.returnValue=!1,this.state.isSwiping=!0),this.drag.updatedX=this.drag.currentX,(16<this.drag.currentY||this.drag.currentY<-16)&&!1===this.state.isSwiping&&(this.state.isScrolling=!0,this.drag.updatedX=this.drag.start),this.animate(this.drag.updatedX)))},r.prototype.onDragEnd=function(t){var e,i;if(this.state.isTouch){if("mouseup"===t.type&&this.$stage.removeClass("owl-grab"),this.trigger("dragged"),this.drag.targetEl.removeAttribute("draggable"),this.state.isTouch=!1,this.state.isScrolling=!1,this.state.isSwiping=!1,0===this.drag.distance&&!0!==this.state.inMotion)return this.state.inMotion=!1;this.drag.endTime=(new Date).getTime(),e=this.drag.endTime-this.drag.startTime,(3<Math.abs(this.drag.distance)||300<e)&&this.removeClick(this.drag.targetEl),i=this.closest(this.drag.updatedX),this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(i),this.invalidate("position"),this.update(),this.settings.pullDrag||this.drag.updatedX!==this.coordinates(i)||this.transitionEnd(),this.drag.distance=0,h(o).off(".owl.dragEvents")}},r.prototype.removeClick=function(t){this.drag.targetEl=t,h(t).on("click.preventClick",this.e._preventClick),l.setTimeout(function(){h(t).off("click.preventClick")},300)},r.prototype.preventClick=function(t){t.preventDefault?t.preventDefault():t.returnValue=!1,t.stopPropagation&&t.stopPropagation(),h(t.target).off("click.preventClick")},r.prototype.getTransformProperty=function(){var t;return!0!==(16===(t=(t=l.getComputedStyle(this.$stage.get(0),null).getPropertyValue(this.vendorName+"transform")).replace(/matrix(3d)?\(|\)/g,"").split(",")).length)?t[4]:t[12]},r.prototype.closest=function(i){var s=-1,n=this.width(),o=this.coordinates();return this.settings.freeDrag||h.each(o,h.proxy(function(t,e){return e-30<i&&i<e+30?s=t:this.op(i,"<",e)&&this.op(i,">",o[t+1]||e-n)&&(s="left"===this.state.direction?t+1:t),-1===s},this)),this.settings.loop||(this.op(i,">",o[this.minimum()])?s=i=this.minimum():this.op(i,"<",o[this.maximum()])&&(s=i=this.maximum())),s},r.prototype.animate=function(t){this.trigger("translate"),this.state.inMotion=0<this.speed(),this.support3d?this.$stage.css({transform:"translate3d("+t+"px,0px, 0px)",transition:this.speed()/1e3+"s"}):this.state.isTouch?this.$stage.css({left:t+"px"}):this.$stage.animate({left:t},this.speed()/1e3,this.settings.fallbackEasing,h.proxy(function(){this.state.inMotion&&this.transitionEnd()},this))},r.prototype.current=function(t){if(t===a)return this._current;if(0===this._items.length)return a;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==a&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},r.prototype.invalidate=function(t){this._invalidated[t]=!0},r.prototype.reset=function(t){(t=this.normalize(t))!==a&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},r.prototype.normalize=function(t,e){var i=e?this._items.length:this._items.length+this._clones.length;return!h.isNumeric(t)||i<1?a:t=this._clones.length?(t%i+i)%i:Math.max(this.minimum(e),Math.min(this.maximum(e),t))},r.prototype.relative=function(t){return t=this.normalize(t),t-=this._clones.length/2,this.normalize(t,!0)},r.prototype.maximum=function(t){var e,i,s,n=0,o=this.settings;if(t)return this._items.length-1;if(!o.loop&&o.center)e=this._items.length-1;else if(o.loop||o.center)if(o.loop||o.center)e=this._items.length+o.items;else{if(!o.autoWidth&&!o.merge)throw"Can not detect maximum absolute position.";for(revert=o.rtl?1:-1,i=this.$stage.width()-this.$element.width();(s=this.coordinates(n))&&!(s*revert>=i);)e=++n}else e=this._items.length-o.items;return e},r.prototype.minimum=function(t){return t?0:this._clones.length/2},r.prototype.items=function(t){return t===a?this._items.slice():(t=this.normalize(t,!0),this._items[t])},r.prototype.mergers=function(t){return t===a?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},r.prototype.clones=function(i){var e=this._clones.length/2,s=e+this._items.length,n=function(t){return t%2==0?s+t/2:e-(t+1)/2};return i===a?h.map(this._clones,function(t,e){return n(e)}):h.map(this._clones,function(t,e){return t===i?n(e):null})},r.prototype.speed=function(t){return t!==a&&(this._speed=t),this._speed},r.prototype.coordinates=function(t){var e=null;return t===a?h.map(this._coordinates,h.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(e=this._coordinates[t],e+=(this.width()-e+(this._coordinates[t-1]||0))/2*(this.settings.rtl?-1:1)):e=this._coordinates[t-1]||0,e)},r.prototype.duration=function(t,e,i){return Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(i||this.settings.smartSpeed)},r.prototype.to=function(t,e){if(this.settings.loop){var i=t-this.relative(this.current()),s=this.current(),n=this.current(),o=this.current()+i,r=n-o<0,a=this._clones.length+this._items.length;o<this.settings.items&&!1===r?(s=n+this._items.length,this.reset(s)):o>=a-this.settings.items&&!0===r&&(s=n-this._items.length,this.reset(s)),l.clearTimeout(this.e._goToLoop),this.e._goToLoop=l.setTimeout(h.proxy(function(){this.speed(this.duration(this.current(),s+i,e)),this.current(s+i),this.update()},this),30)}else this.speed(this.duration(this.current(),t,e)),this.current(t),this.update()},r.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},r.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},r.prototype.transitionEnd=function(t){if(t!==a&&(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)!==this.$stage.get(0)))return!1;this.state.inMotion=!1,this.trigger("translated")},r.prototype.viewport=function(){var t;if(this.options.responsiveBaseElement!==l)t=h(this.options.responsiveBaseElement).width();else if(l.innerWidth)t=l.innerWidth;else{if(!o.documentElement||!o.documentElement.clientWidth)throw"Can not detect viewport width.";t=o.documentElement.clientWidth}return t},r.prototype.replace=function(t){this.$stage.empty(),this._items=[],t&&(t=t instanceof jQuery?t:h(t)),this.settings.nestedItemSelector&&(t=t.find("."+this.settings.nestedItemSelector)),t.filter(function(){return 1===this.nodeType}).each(h.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").andSelf("[data-merge]").attr("data-merge")||1)},this)),this.reset(h.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},r.prototype.add=function(t,e){e=e===a?this._items.length:this.normalize(e,!0),this.trigger("add",{content:t,position:e}),0===this._items.length||e===this._items.length?(this.$stage.append(t),this._items.push(t),this._mergers.push(1*t.find("[data-merge]").andSelf("[data-merge]").attr("data-merge")||1)):(this._items[e].before(t),this._items.splice(e,0,t),this._mergers.splice(e,0,1*t.find("[data-merge]").andSelf("[data-merge]").attr("data-merge")||1)),this.invalidate("items"),this.trigger("added",{content:t,position:e})},r.prototype.remove=function(t){(t=this.normalize(t,!0))!==a&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},r.prototype.addTriggerableEvents=function(){var i=h.proxy(function(e,i){return h.proxy(function(t){t.relatedTarget!==this&&(this.suppress([i]),e.apply(this,[].slice.call(arguments,1)),this.release([i]))},this)},this);h.each({next:this.next,prev:this.prev,to:this.to,destroy:this.destroy,refresh:this.refresh,replace:this.replace,add:this.add,remove:this.remove},h.proxy(function(t,e){this.$element.on(t+".owl.carousel",i(e,t+".owl.carousel"))},this))},r.prototype.watchVisibility=function(){function t(t){return 0<t.offsetWidth&&0<t.offsetHeight}t(this.$element.get(0))||(this.$element.addClass("owl-hidden"),l.clearInterval(this.e._checkVisibile),this.e._checkVisibile=l.setInterval(h.proxy(function(){t(this.$element.get(0))&&(this.$element.removeClass("owl-hidden"),this.refresh(),l.clearInterval(this.e._checkVisibile))},this),500))},r.prototype.preloadAutoWidthImages=function(i){var s,n,o,r;s=0,n=this,i.each(function(t,e){o=h(e),(r=new Image).onload=function(){s++,o.attr("src",r.src),o.css("opacity",1),s>=i.length&&(n.state.imagesLoaded=!0,n.initialize())},r.src=o.attr("src")||o.attr("data-src")||o.attr("data-src-retina")})},r.prototype.destroy=function(){for(var t in this.$element.hasClass(this.settings.themeClass)&&this.$element.removeClass(this.settings.themeClass),!1!==this.settings.responsive&&h(l).off("resize.owl.carousel"),this.transitionEndVendor&&this.off(this.$stage.get(0),this.transitionEndVendor,this.e._transitionEnd),this._plugins)this._plugins[t].destroy();(this.settings.mouseDrag||this.settings.touchDrag)&&(this.$stage.off("mousedown touchstart touchcancel"),h(o).off(".owl.dragEvents"),this.$stage.get(0).onselectstart=function(){},this.$stage.off("dragstart",function(){return!1})),this.$element.off(".owl"),this.$stage.children(".cloned").remove(),this.e=null,this.$element.removeData("owlCarousel"),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.unwrap()},r.prototype.op=function(t,e,i){var s=this.settings.rtl;switch(e){case"<":return s?i<t:t<i;case">":return s?t<i:i<t;case">=":return s?t<=i:i<=t;case"<=":return s?i<=t:t<=i}},r.prototype.on=function(t,e,i,s){t.addEventListener?t.addEventListener(e,i,s):t.attachEvent&&t.attachEvent("on"+e,i)},r.prototype.off=function(t,e,i,s){t.removeEventListener?t.removeEventListener(e,i,s):t.detachEvent&&t.detachEvent("on"+e,i)},r.prototype.trigger=function(t,e,i){var s={item:{count:this._items.length,index:this.current()}},n=h.camelCase(h.grep(["on",t,i],function(t){return t}).join("-").toLowerCase()),o=h.Event([t,"owl",i||"carousel"].join(".").toLowerCase(),h.extend({relatedTarget:this},s,e));return this._supress[t]||(h.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(o)}),this.$element.trigger(o),this.settings&&"function"==typeof this.settings[n]&&this.settings[n].apply(this,o)),o},r.prototype.suppress=function(t){h.each(t,h.proxy(function(t,e){this._supress[e]=!0},this))},r.prototype.release=function(t){h.each(t,h.proxy(function(t,e){delete this._supress[e]},this))},r.prototype.browserSupport=function(){if(this.support3d=t(["perspective","webkitPerspective","MozPerspective","OPerspective","MsPerspective"])[0],this.support3d){this.transformVendor=t(["transform","WebkitTransform","MozTransform","OTransform","msTransform"])[0];this.transitionEndVendor=["transitionend","webkitTransitionEnd","transitionend","oTransitionEnd"][t(["transition","WebkitTransition","MozTransition","OTransition"])[1]],this.vendorName=this.transformVendor.replace(/Transform/i,""),this.vendorName=""!==this.vendorName?"-"+this.vendorName.toLowerCase()+"-":""}this.state.orientation=l.orientation},h.fn.owlCarousel=function(t){return this.each(function(){h(this).data("owlCarousel")||h(this).data("owlCarousel",new r(this,t))})},h.fn.owlCarousel.Constructor=r}(window.Zepto||window.jQuery,window,document),function(a,o,t,e){var i=function(t){this._core=t,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel":a.proxy(function(t){if(t.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(t.property&&"position"==t.property.name||"initialized"==t.type))for(var e=this._core.settings,i=e.center&&Math.ceil(e.items/2)||e.items,s=e.center&&-1*i||0,n=(t.property&&t.property.value||this._core.current())+s,o=this._core.clones().length,r=a.proxy(function(t,e){this.load(e)},this);s++<i;)this.load(o/2+this._core.relative(n)),o&&a.each(this._core.clones(this._core.relative(n++)),r)},this)},this._core.options=a.extend({},i.Defaults,this._core.options),this._core.$element.on(this._handlers)};i.Defaults={lazyLoad:!1},i.prototype.load=function(t){var e=this._core.$stage.children().eq(t),i=e&&e.find(".owl-lazy");!i||-1<a.inArray(e.get(0),this._loaded)||(i.each(a.proxy(function(t,e){var i,s=a(e),n=1<o.devicePixelRatio&&s.attr("data-src-retina")||s.attr("data-src");this._core.trigger("load",{element:s,url:n},"lazy"),s.is("img")?s.one("load.owl.lazy",a.proxy(function(){s.css("opacity",1),this._core.trigger("loaded",{element:s,url:n},"lazy")},this)).attr("src",n):((i=new Image).onload=a.proxy(function(){s.css({"background-image":"url("+n+")",opacity:"1"}),this._core.trigger("loaded",{element:s,url:n},"lazy")},this),i.src=n)},this)),this._loaded.push(e.get(0)))},i.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=i}(window.Zepto||window.jQuery,window,document),function(e,t,i,s){var n=function(t){this._core=t,this._handlers={"initialized.owl.carousel":e.proxy(function(){this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":e.proxy(function(t){this._core.settings.autoHeight&&"position"==t.property.name&&this.update()},this),"loaded.owl.lazy":e.proxy(function(t){this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass)===this._core.$stage.children().eq(this._core.current())&&this.update()},this)},this._core.options=e.extend({},n.Defaults,this._core.options),this._core.$element.on(this._handlers)};n.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},n.prototype.update=function(){this._core.$stage.parent().height(this._core.$stage.children().eq(this._core.current()).height()).addClass(this._core.settings.autoHeightClass)},n.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},e.fn.owlCarousel.Constructor.Plugins.AutoHeight=n}(window.Zepto||window.jQuery,window,document),function(c,e,i,t){var s=function(t){this._core=t,this._videos={},this._playing=null,this._fullscreen=!1,this._handlers={"resize.owl.carousel":c.proxy(function(t){this._core.settings.video&&!this.isInFullScreen()&&t.preventDefault()},this),"refresh.owl.carousel changed.owl.carousel":c.proxy(function(t){this._playing&&this.stop()},this),"prepared.owl.carousel":c.proxy(function(t){var e=c(t.content).find(".owl-video");e.length&&(e.css("display","none"),this.fetch(e,c(t.content)))},this)},this._core.options=c.extend({},s.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",c.proxy(function(t){this.play(t)},this))};s.Defaults={video:!1,videoHeight:!1,videoWidth:!1},s.prototype.fetch=function(t,e){var i=t.attr("data-vimeo-id")?"vimeo":"youtube",s=t.attr("data-vimeo-id")||t.attr("data-youtube-id"),n=t.attr("data-width")||this._core.settings.videoWidth,o=t.attr("data-height")||this._core.settings.videoHeight,r=t.attr("href");if(!r)throw new Error("Missing video URL.");if(-1<(s=r.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/))[3].indexOf("youtu"))i="youtube";else{if(!(-1<s[3].indexOf("vimeo")))throw new Error("Video URL not supported.");i="vimeo"}s=s[6],this._videos[r]={type:i,id:s,width:n,height:o},e.attr("data-video",r),this.thumbnail(t,this._videos[r])},s.prototype.thumbnail=function(e,t){var i,s,n=t.width&&t.height?'style="width:'+t.width+"px;height:"+t.height+'px;"':"",o=e.find("img"),r="src",a="",h=this._core.settings,l=function(t){'<div class="owl-video-play-icon"></div>',i=h.lazyLoad?'<div class="owl-video-tn '+a+'" '+r+'="'+t+'"></div>':'<div class="owl-video-tn" style="opacity:1;background-image:url('+t+')"></div>',e.after(i),e.after('<div class="owl-video-play-icon"></div>')};if(e.wrap('<div class="owl-video-wrapper"'+n+"></div>"),this._core.settings.lazyLoad&&(r="data-src",a="owl-lazy"),o.length)return l(o.attr(r)),o.remove(),!1;"youtube"===t.type?(s="http://img.youtube.com/vi/"+t.id+"/hqdefault.jpg",l(s)):"vimeo"===t.type&&c.ajax({type:"GET",url:"http://vimeo.com/api/v2/video/"+t.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){s=t[0].thumbnail_large,l(s)}})},s.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null},s.prototype.play=function(t){this._core.trigger("play",null,"video"),this._playing&&this.stop();var e,i,s=c(t.target||t.srcElement),n=s.closest("."+this._core.settings.itemClass),o=this._videos[n.attr("data-video")],r=o.width||"100%",a=o.height||this._core.$stage.height();"youtube"===o.type?e='<iframe width="'+r+'" height="'+a+'" src="http://www.youtube.com/embed/'+o.id+"?autoplay=1&v="+o.id+'" frameborder="0" allowfullscreen></iframe>':"vimeo"===o.type&&(e='<iframe src="http://player.vimeo.com/video/'+o.id+'?autoplay=1" width="'+r+'" height="'+a+'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'),n.addClass("owl-video-playing"),this._playing=n,i=c('<div style="height:'+a+"px; width:"+r+'px" class="owl-video-frame">'+e+"</div>"),s.after(i)},s.prototype.isInFullScreen=function(){var t=i.fullscreenElement||i.mozFullScreenElement||i.webkitFullscreenElement;return t&&c(t).parent().hasClass("owl-video-frame")&&(this._core.speed(0),this._fullscreen=!0),!(t&&this._fullscreen&&this._playing)&&(this._fullscreen?this._fullscreen=!1:!this._playing||this._core.state.orientation===e.orientation||(this._core.state.orientation=e.orientation,!1))},s.prototype.destroy=function(){var t,e;for(t in this._core.$element.off("click.owl.video"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},c.fn.owlCarousel.Constructor.Plugins.Video=s}(window.Zepto||window.jQuery,window,document),function(r,t,e,i){var s=function(t){this.core=t,this.core.options=r.extend({},s.Defaults,this.core.options),this.swapping=!0,this.previous=void 0,this.next=void 0,this.handlers={"change.owl.carousel":r.proxy(function(t){"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":r.proxy(function(t){this.swapping="translated"==t.type},this),"translate.owl.carousel":r.proxy(function(t){this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};s.Defaults={animateOut:!1,animateIn:!1},s.prototype.swap=function(){if(1===this.core.settings.items&&this.core.support3d){this.core.speed(0);var t,e=r.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),s=this.core.$stage.children().eq(this.next),n=this.core.settings.animateIn,o=this.core.settings.animateOut;this.core.current()!==this.previous&&(o&&(t=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.css({left:t+"px"}).addClass("animated owl-animated-out").addClass(o).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",e)),n&&s.addClass("animated owl-animated-in").addClass(n).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",e))}},s.prototype.clear=function(t){r(t.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.transitionEnd()},s.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},r.fn.owlCarousel.Constructor.Plugins.Animate=s}(window.Zepto||window.jQuery,window,document),function(e,i,s,t){var n=function(t){this.core=t,this.core.options=e.extend({},n.Defaults,this.core.options),this.handlers={"translated.owl.carousel refreshed.owl.carousel":e.proxy(function(){this.autoplay()},this),"play.owl.autoplay":e.proxy(function(t,e,i){this.play(e,i)},this),"stop.owl.autoplay":e.proxy(function(){this.stop()},this),"mouseover.owl.autoplay":e.proxy(function(){this.core.settings.autoplayHoverPause&&this.pause()},this),"mouseleave.owl.autoplay":e.proxy(function(){this.core.settings.autoplayHoverPause&&this.autoplay()},this)},this.core.$element.on(this.handlers)};n.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},n.prototype.autoplay=function(){this.core.settings.autoplay&&!this.core.state.videoPlay?(i.clearInterval(this.interval),this.interval=i.setInterval(e.proxy(function(){this.play()},this),this.core.settings.autoplayTimeout)):i.clearInterval(this.interval)},n.prototype.play=function(t,e){!0!==s.hidden&&(this.core.state.isTouch||this.core.state.isScrolling||this.core.state.isSwiping||this.core.state.inMotion||(!1!==this.core.settings.autoplay?this.core.next(this.core.settings.autoplaySpeed):i.clearInterval(this.interval)))},n.prototype.stop=function(){i.clearInterval(this.interval)},n.prototype.pause=function(){i.clearInterval(this.interval)},n.prototype.destroy=function(){var t,e;for(t in i.clearInterval(this.interval),this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},e.fn.owlCarousel.Constructor.Plugins.autoplay=n}(window.Zepto||window.jQuery,window,document),function(o,t,e,i){"use strict";var s=function(t){this._core=t,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":o.proxy(function(t){this._core.settings.dotsData&&this._templates.push(o(t.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"))},this),"add.owl.carousel":o.proxy(function(t){this._core.settings.dotsData&&this._templates.splice(t.position,0,o(t.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"))},this),"remove.owl.carousel prepared.owl.carousel":o.proxy(function(t){this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"change.owl.carousel":o.proxy(function(t){if("position"==t.property.name&&!this._core.state.revert&&!this._core.settings.loop&&this._core.settings.navRewind){var e=this._core.current(),i=this._core.maximum(),s=this._core.minimum();t.data=t.property.value>i?i<=e?s:i:t.property.value<s?i:t.property.value}},this),"changed.owl.carousel":o.proxy(function(t){"position"==t.property.name&&this.draw()},this),"refreshed.owl.carousel":o.proxy(function(){this._initialized||(this.initialize(),this._initialized=!0),this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation")},this)},this._core.options=o.extend({},s.Defaults,this._core.options),this.$element.on(this._handlers)};s.Defaults={nav:!1,navRewind:!0,navText:["prev","next"],navSpeed:!1,navElement:"div",navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotData:!1,dotsSpeed:!1,dotsContainer:!1,controlsClass:"owl-controls"},s.prototype.initialize=function(){var t,e,i=this._core.settings;for(e in i.dotsData||(this._templates=[o("<div>").addClass(i.dotClass).append(o("<span>")).prop("outerHTML")]),i.navContainer&&i.dotsContainer||(this._controls.$container=o("<div>").addClass(i.controlsClass).appendTo(this.$element)),this._controls.$indicators=i.dotsContainer?o(i.dotsContainer):o("<div>").hide().addClass(i.dotsClass).appendTo(this._controls.$container),this._controls.$indicators.on("click","div",o.proxy(function(t){var e=o(t.target).parent().is(this._controls.$indicators)?o(t.target).index():o(t.target).parent().index();t.preventDefault(),this.to(e,i.dotsSpeed)},this)),t=i.navContainer?o(i.navContainer):o("<div>").addClass(i.navContainerClass).prependTo(this._controls.$container),this._controls.$next=o("<"+i.navElement+">"),this._controls.$previous=this._controls.$next.clone(),this._controls.$previous.addClass(i.navClass[0]).html(i.navText[0]).hide().prependTo(t).on("click",o.proxy(function(t){this.prev(i.navSpeed)},this)),this._controls.$next.addClass(i.navClass[1]).html(i.navText[1]).hide().appendTo(t).on("click",o.proxy(function(t){this.next(i.navSpeed)},this)),this._overrides)this._core[e]=o.proxy(this[e],this)},s.prototype.destroy=function(){var t,e,i,s;for(t in this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)this._controls[e].remove();for(s in this.overides)this._core[s]=this._overrides[s];for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},s.prototype.update=function(){var t,e,i=this._core.settings,s=this._core.clones().length/2,n=s+this._core.items().length,o=i.center||i.autoWidth||i.dotData?1:i.dotsEach||i.items;if("page"!==i.slideBy&&(i.slideBy=Math.min(i.slideBy,i.items)),i.dots||"page"==i.slideBy)for(this._pages=[],t=s,e=0;t<n;t++)(o<=e||0===e)&&(this._pages.push({start:t-s,end:t-s+o-1}),e=0,0),e+=this._core.mergers(this._core.relative(t))},s.prototype.draw=function(){var t,e,i="",s=this._core.settings,n=(this._core.$stage.children(),this._core.relative(this._core.current()));if(!s.nav||s.loop||s.navRewind||(this._controls.$previous.toggleClass("disabled",n<=0),this._controls.$next.toggleClass("disabled",n>=this._core.maximum())),this._controls.$previous.toggle(s.nav),this._controls.$next.toggle(s.nav),s.dots){if(t=this._pages.length-this._controls.$indicators.children().length,s.dotData&&0!==t){for(e=0;e<this._controls.$indicators.children().length;e++)i+=this._templates[this._core.relative(e)];this._controls.$indicators.html(i)}else 0<t?(i=new Array(t+1).join(this._templates[0]),this._controls.$indicators.append(i)):t<0&&this._controls.$indicators.children().slice(t).remove();this._controls.$indicators.find(".active").removeClass("active"),this._controls.$indicators.children().eq(o.inArray(this.current(),this._pages)).addClass("active")}this._controls.$indicators.toggle(s.dots)},s.prototype.onTrigger=function(t){var e=this._core.settings;t.page={index:o.inArray(this.current(),this._pages),count:this._pages.length,size:e&&(e.center||e.autoWidth||e.dotData?1:e.dotsEach||e.items)}},s.prototype.current=function(){var e=this._core.relative(this._core.current());return o.grep(this._pages,function(t){return t.start<=e&&t.end>=e}).pop()},s.prototype.getPosition=function(t){var e,i,s=this._core.settings;return"page"==s.slideBy?(e=o.inArray(this.current(),this._pages),i=this._pages.length,t?++e:--e,e=this._pages[(e%i+i)%i].start):(e=this._core.relative(this._core.current()),i=this._core.items().length,t?e+=s.slideBy:e-=s.slideBy),e},s.prototype.next=function(t){o.proxy(this._overrides.to,this._core)(this.getPosition(!0),t)},s.prototype.prev=function(t){o.proxy(this._overrides.to,this._core)(this.getPosition(!1),t)},s.prototype.to=function(t,e,i){var s;i?o.proxy(this._overrides.to,this._core)(t,e):(s=this._pages.length,o.proxy(this._overrides.to,this._core)(this._pages[(t%s+s)%s].start,e))},o.fn.owlCarousel.Constructor.Plugins.Navigation=s}(window.Zepto||window.jQuery,window,document),function(i,s,t,e){"use strict";var n=function(t){this._core=t,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":i.proxy(function(){"URLHash"==this._core.settings.startPosition&&i(s).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":i.proxy(function(t){var e=i(t.content).find("[data-hash]").andSelf("[data-hash]").attr("data-hash");this._hashes[e]=t.content},this)},this._core.options=i.extend({},n.Defaults,this._core.options),this.$element.on(this._handlers),i(s).on("hashchange.owl.navigation",i.proxy(function(){var t=s.location.hash.substring(1),e=this._core.$stage.children(),i=this._hashes[t]&&e.index(this._hashes[t])||0;if(!t)return!1;this._core.to(i,!1,!0)},this))};n.Defaults={URLhashListener:!1},n.prototype.destroy=function(){var t,e;for(t in i(s).off("hashchange.owl.navigation"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},i.fn.owlCarousel.Constructor.Plugins.Hash=n}(window.Zepto||window.jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm93bC5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwiZG9jdW1lbnQiLCJ1bmRlZmluZWQiLCJkcmFnIiwic3RhdGUiLCJlIiwiT3dsIiwiZWxlbWVudCIsIm9wdGlvbnMiLCJ0aGlzIiwic2V0dGluZ3MiLCJleHRlbmQiLCJEZWZhdWx0cyIsIiRlbGVtZW50IiwiX3BsdWdpbnMiLCJfc3VwcmVzcyIsIl9jdXJyZW50IiwiX3NwZWVkIiwiX2Nvb3JkaW5hdGVzIiwiX2JyZWFrcG9pbnQiLCJfd2lkdGgiLCJfaXRlbXMiLCJfY2xvbmVzIiwiX21lcmdlcnMiLCJfaW52YWxpZGF0ZWQiLCJfcGlwZSIsImVhY2giLCJQbHVnaW5zIiwicHJveHkiLCJrZXkiLCJwbHVnaW4iLCJ0b0xvd2VyQ2FzZSIsInNsaWNlIiwiUGlwZSIsInByaW9yaXR5Iiwid29ya2VyIiwicHVzaCIsImZpbHRlciIsInJ1biIsInNldHVwIiwiaW5pdGlhbGl6ZSIsImdldFRvdWNoZXMiLCJldmVudCIsInRvdWNoZXMiLCJ4IiwicGFnZVgiLCJ5IiwicGFnZVkiLCJjbGllbnRYIiwiY2xpZW50WSIsImlzU3R5bGVTdXBwb3J0ZWQiLCJhcnJheSIsInAiLCJzIiwiZmFrZSIsImNyZWF0ZUVsZW1lbnQiLCJsaXN0Iiwic3R5bGUiLCJpdGVtcyIsImxvb3AiLCJfb25EcmFnU3RhcnQiLCJfb25EcmFnTW92ZSIsIl9vbkRyYWdFbmQiLCJfdHJhbnNpdGlvbkVuZCIsIl9yZXNpemVyIiwiX3Jlc3BvbnNpdmVDYWxsIiwiX2dvVG9Mb29wIiwiX2NoZWNrVmlzaWJpbGUiLCJjZW50ZXIiLCJpc1RvdWNoIiwic3RhcnQiLCJzdGFydFgiLCJzdGFydFkiLCJjdXJyZW50IiwiY3VycmVudFgiLCJjdXJyZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwiZGlzdGFuY2UiLCJzdGFydFRpbWUiLCJlbmRUaW1lIiwidXBkYXRlZFgiLCJ0YXJnZXRFbCIsImlzU2Nyb2xsaW5nIiwiaXNTd2lwaW5nIiwiZGlyZWN0aW9uIiwiaW5Nb3Rpb24iLCJtb3VzZURyYWciLCJ0b3VjaERyYWciLCJwdWxsRHJhZyIsImZyZWVEcmFnIiwibWFyZ2luIiwic3RhZ2VQYWRkaW5nIiwibWVyZ2UiLCJtZXJnZUZpdCIsImF1dG9XaWR0aCIsInN0YXJ0UG9zaXRpb24iLCJydGwiLCJzbWFydFNwZWVkIiwiZmx1aWRTcGVlZCIsImRyYWdFbmRTcGVlZCIsInJlc3BvbnNpdmUiLCJyZXNwb25zaXZlUmVmcmVzaFJhdGUiLCJyZXNwb25zaXZlQmFzZUVsZW1lbnQiLCJyZXNwb25zaXZlQ2xhc3MiLCJmYWxsYmFja0Vhc2luZyIsImluZm8iLCJuZXN0ZWRJdGVtU2VsZWN0b3IiLCJpdGVtRWxlbWVudCIsInN0YWdlRWxlbWVudCIsInRoZW1lQ2xhc3MiLCJiYXNlQ2xhc3MiLCJpdGVtQ2xhc3MiLCJjZW50ZXJDbGFzcyIsImFjdGl2ZUNsYXNzIiwiV2lkdGgiLCJEZWZhdWx0IiwiSW5uZXIiLCJPdXRlciIsImNhY2hlIiwicmVsYXRpdmUiLCJjYWNoZWQiLCIkc3RhZ2UiLCJjaGlsZHJlbiIsImxlbmd0aCIsInJlbW92ZSIsImkiLCJuIiwiY2xvbmVzIiwiZGVsdGEiLCJNYXRoIiwibWF4IiwiYWJzIiwiZXEiLCJwb3AiLCJhcHBlbmQiLCJjbG9uZSIsImFkZENsYXNzIiwicHJlcGVuZCIsIndpZHRoIiwidG9GaXhlZCIsImNvb3JkaW5hdGUiLCJtaW4iLCJjc3MiLCJwYWRkaW5nLWxlZnQiLCJwYWRkaW5nLXJpZ2h0IiwiZ3JlcCIsInYiLCJyZXNldCIsImluZGV4IiwiYW5pbWF0ZSIsImNvb3JkaW5hdGVzIiwiaW5uZXIiLCJvdXRlciIsInBhZGRpbmciLCJiZWdpbiIsImVuZCIsIm1hdGNoZXMiLCJvcCIsInJlbW92ZUNsYXNzIiwiam9pbiIsInByb3RvdHlwZSIsImltZ3MiLCJuZXN0ZWRTZWxlY3RvciIsInRyaWdnZXIiLCJ0b2dnbGVDbGFzcyIsImJyb3dzZXJTdXBwb3J0IiwiaW1hZ2VzTG9hZGVkIiwiZmluZCIsInByZWxvYWRBdXRvV2lkdGhJbWFnZXMiLCJ3cmFwIiwicGFyZW50IiwicmVwbGFjZSIsIm5vdCIsInJlZnJlc2giLCJldmVudHNDYWxsIiwiaW50ZXJuYWxFdmVudHMiLCJhZGRUcmlnZ2VyYWJsZUV2ZW50cyIsInZpZXdwb3J0Iiwib3ZlcndyaXRlcyIsIm1hdGNoIiwiYnJlYWtwb2ludCIsIk51bWJlciIsImF0dHIiLCJjIiwicHJvcGVydHkiLCJuYW1lIiwidmFsdWUiLCJpbnZhbGlkYXRlIiwib3B0aW9uc0xvZ2ljIiwicHJlcGFyZSIsIml0ZW0iLCJjb250ZW50IiwiZGF0YSIsInVwZGF0ZSIsImFsbCIsImRpbWVuc2lvbiIsIkRhdGUiLCJnZXRUaW1lIiwib3JpZW50YXRpb24iLCJ3YXRjaFZpc2liaWxpdHkiLCJvbkRyYWdTdGFydCIsIm9uRHJhZ01vdmUiLCJvbkRyYWdFbmQiLCJfb25SZXNpemUiLCJvblJlc2l6ZSIsInRyYW5zaXRpb25FbmQiLCJfcHJldmVudENsaWNrIiwicHJldmVudENsaWNrIiwib25UaHJvdHRsZWRSZXNpemUiLCJjbGVhclRpbWVvdXQiLCJyZXNpemVUaW1lciIsInNldFRpbWVvdXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJldmVudHNSb3V0ZXIiLCJ0eXBlIiwibmF2aWdhdG9yIiwiaXNUb3VjaElFIiwibXNQb2ludGVyRW5hYmxlZCIsIm9uIiwiZ2V0Iiwib25zZWxlY3RzdGFydCIsInRyYW5zaXRpb25FbmRWZW5kb3IiLCJldiIsImFuaW1hdGVkUG9zIiwib3JpZ2luYWxFdmVudCIsIndoaWNoIiwic3BlZWQiLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJzdXBwb3J0M2QiLCJnZXRUcmFuc2Zvcm1Qcm9wZXJ0eSIsInRhcmdldCIsInNyY0VsZW1lbnQiLCJ0YWdOYW1lIiwiZHJhZ2dhYmxlIiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsInB1bGwiLCJtaW5pbXVtIiwibWF4aW11bSIsInByZXZlbnREZWZhdWx0IiwicmV0dXJuVmFsdWUiLCJjb21wYXJlVGltZXMiLCJjbG9zZXN0IiwicmVtb3ZlQXR0cmlidXRlIiwicmVtb3ZlQ2xpY2siLCJvZmYiLCJzdG9wUHJvcGFnYXRpb24iLCJ0cmFuc2Zvcm0iLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInZlbmRvck5hbWUiLCJzcGxpdCIsInRyYW5zaXRpb24iLCJub3JtYWxpemUiLCJwYXJ0Iiwic3VwcHJlc3MiLCJyZWxlYXNlIiwiaXNOdW1lcmljIiwicmV2ZXJ0IiwibWVyZ2VycyIsIm9kZCIsImV2ZW4iLCJtYXAiLCJkdXJhdGlvbiIsImZyb20iLCJ0byIsImZhY3RvciIsImJlZm9yZSIsImFmdGVyIiwibmV4dCIsInByZXYiLCJvcmlnaW5hbFRhcmdldCIsImlubmVyV2lkdGgiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImVtcHR5IiwialF1ZXJ5Iiwibm9kZVR5cGUiLCJhbmRTZWxmIiwiYWRkIiwic3BsaWNlIiwiaGFuZGxlciIsImNhbGxiYWNrIiwicmVsYXRlZFRhcmdldCIsImFwcGx5IiwiY2FsbCIsImFyZ3VtZW50cyIsImRlc3Ryb3kiLCJpc0VsVmlzaWJsZSIsImVsIiwib2Zmc2V0V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJsb2FkZWQiLCJ0aGF0IiwiJGVsIiwiaW1nIiwiSW1hZ2UiLCJvbmxvYWQiLCJzcmMiLCJoYXNDbGFzcyIsInJlbW92ZURhdGEiLCJjb250ZW50cyIsInVud3JhcCIsImEiLCJvIiwiYiIsImxpc3RlbmVyIiwiY2FwdHVyZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsIm5hbWVzcGFjZSIsInN0YXR1cyIsImNvdW50IiwiY2FtZWxDYXNlIiwiRXZlbnQiLCJvblRyaWdnZXIiLCJldmVudHMiLCJ0cmFuc2Zvcm1WZW5kb3IiLCJmbiIsIm93bENhcm91c2VsIiwiQ29uc3RydWN0b3IiLCJaZXB0byIsIkxhenkiLCJjYXJvdXNlbCIsIl9jb3JlIiwiX2xvYWRlZCIsIl9oYW5kbGVycyIsImluaXRpYWxpemVkLm93bC5jYXJvdXNlbCBjaGFuZ2Uub3dsLmNhcm91c2VsIiwibGF6eUxvYWQiLCJjZWlsIiwibG9hZCIsIiRpdGVtIiwiJGVsZW1lbnRzIiwiaW5BcnJheSIsImltYWdlIiwidXJsIiwiZGV2aWNlUGl4ZWxSYXRpbyIsImlzIiwib25lIiwiYmFja2dyb3VuZC1pbWFnZSIsIm9wYWNpdHkiLCJoYW5kbGVycyIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJBdXRvSGVpZ2h0IiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIiwiYXV0b0hlaWdodCIsImNoYW5nZWQub3dsLmNhcm91c2VsIiwibG9hZGVkLm93bC5sYXp5IiwiYXV0b0hlaWdodENsYXNzIiwiaGVpZ2h0IiwiVmlkZW8iLCJfdmlkZW9zIiwiX3BsYXlpbmciLCJfZnVsbHNjcmVlbiIsInJlc2l6ZS5vd2wuY2Fyb3VzZWwiLCJ2aWRlbyIsImlzSW5GdWxsU2NyZWVuIiwicmVmcmVzaC5vd2wuY2Fyb3VzZWwgY2hhbmdlZC5vd2wuY2Fyb3VzZWwiLCJzdG9wIiwicHJlcGFyZWQub3dsLmNhcm91c2VsIiwiZmV0Y2giLCJwbGF5IiwidmlkZW9IZWlnaHQiLCJ2aWRlb1dpZHRoIiwiaWQiLCJFcnJvciIsImluZGV4T2YiLCJ0aHVtYm5haWwiLCJ0bkxpbmsiLCJwYXRoIiwiZGltZW5zaW9ucyIsImN1c3RvbVRuIiwic3JjVHlwZSIsImxhenlDbGFzcyIsImNyZWF0ZSIsImFqYXgiLCJqc29ucCIsImRhdGFUeXBlIiwic3VjY2VzcyIsInRodW1ibmFpbF9sYXJnZSIsImh0bWwiLCJmdWxsc2NyZWVuRWxlbWVudCIsIm1vekZ1bGxTY3JlZW5FbGVtZW50Iiwid2Via2l0RnVsbHNjcmVlbkVsZW1lbnQiLCJBbmltYXRlIiwic2NvcGUiLCJjb3JlIiwic3dhcHBpbmciLCJwcmV2aW91cyIsImNoYW5nZS5vd2wuY2Fyb3VzZWwiLCJkcmFnLm93bC5jYXJvdXNlbCBkcmFnZ2VkLm93bC5jYXJvdXNlbCB0cmFuc2xhdGVkLm93bC5jYXJvdXNlbCIsInRyYW5zbGF0ZS5vd2wuY2Fyb3VzZWwiLCJhbmltYXRlT3V0IiwiYW5pbWF0ZUluIiwic3dhcCIsImNsZWFyIiwiaW5jb21pbmciLCJvdXRnb2luZyIsIkF1dG9wbGF5IiwidHJhbnNsYXRlZC5vd2wuY2Fyb3VzZWwgcmVmcmVzaGVkLm93bC5jYXJvdXNlbCIsImF1dG9wbGF5IiwicGxheS5vd2wuYXV0b3BsYXkiLCJ0Iiwic3RvcC5vd2wuYXV0b3BsYXkiLCJtb3VzZW92ZXIub3dsLmF1dG9wbGF5IiwiYXV0b3BsYXlIb3ZlclBhdXNlIiwicGF1c2UiLCJtb3VzZWxlYXZlLm93bC5hdXRvcGxheSIsImF1dG9wbGF5VGltZW91dCIsImF1dG9wbGF5U3BlZWQiLCJ2aWRlb1BsYXkiLCJpbnRlcnZhbCIsInRpbWVvdXQiLCJoaWRkZW4iLCJOYXZpZ2F0aW9uIiwiX2luaXRpYWxpemVkIiwiX3BhZ2VzIiwiX2NvbnRyb2xzIiwiX3RlbXBsYXRlcyIsIl9vdmVycmlkZXMiLCJkb3RzRGF0YSIsImFkZC5vd2wuY2Fyb3VzZWwiLCJyZW1vdmUub3dsLmNhcm91c2VsIHByZXBhcmVkLm93bC5jYXJvdXNlbCIsIm5hdlJld2luZCIsImRyYXciLCJyZWZyZXNoZWQub3dsLmNhcm91c2VsIiwibmF2IiwibmF2VGV4dCIsIm5hdlNwZWVkIiwibmF2RWxlbWVudCIsIm5hdkNvbnRhaW5lciIsIm5hdkNvbnRhaW5lckNsYXNzIiwibmF2Q2xhc3MiLCJzbGlkZUJ5IiwiZG90Q2xhc3MiLCJkb3RzQ2xhc3MiLCJkb3RzIiwiZG90c0VhY2giLCJkb3REYXRhIiwiZG90c1NwZWVkIiwiZG90c0NvbnRhaW5lciIsImNvbnRyb2xzQ2xhc3MiLCIkY29udGFpbmVyIiwib3ZlcnJpZGUiLCJwcm9wIiwiYXBwZW5kVG8iLCIkaW5kaWNhdG9ycyIsImhpZGUiLCJwcmVwZW5kVG8iLCIkbmV4dCIsIiRwcmV2aW91cyIsImNvbnRyb2wiLCJvdmVyaWRlcyIsImoiLCJsb3dlciIsInVwcGVyIiwic2l6ZSIsImRpZmZlcmVuY2UiLCJ0b2dnbGUiLCJBcnJheSIsInBhZ2UiLCJnZXRQb3NpdGlvbiIsInN1Y2Nlc3NvciIsInN0YW5kYXJkIiwiSGFzaCIsIl9oYXNoZXMiLCJoYXNoIiwibG9jYXRpb24iLCJzdWJzdHJpbmciLCJVUkxoYXNoTGlzdGVuZXIiXSwibWFwcGluZ3MiOiJDQVdDLFNBQVVBLEVBQUdDLEVBQVFDLEVBQVVDLEdBRS9CLElBQUlDLEVBQU1DLEVBQU9DLEVBd0RqQixTQUFTQyxFQUFJQyxFQUFTQyxHQU1yQkMsS0FBS0MsU0FBVyxLQU1oQkQsS0FBS0QsUUFBVVQsRUFBRVksT0FBTyxHQUFJTCxFQUFJTSxTQUFVSixHQU0xQ0MsS0FBS0ksU0FBV2QsRUFBRVEsR0FLbEJFLEtBQUtOLEtBQU9KLEVBQUVZLE9BQU8sR0FBSVIsR0FNekJNLEtBQUtMLE1BQVFMLEVBQUVZLE9BQU8sR0FBSVAsR0FNMUJLLEtBQUtKLEVBQUlOLEVBQUVZLE9BQU8sR0FBSU4sR0FNdEJJLEtBQUtLLFNBQVcsR0FNaEJMLEtBQUtNLFNBQVcsR0FNaEJOLEtBQUtPLFNBQVcsS0FNaEJQLEtBQUtRLE9BQVMsS0FPZFIsS0FBS1MsYUFBZSxHQU9wQlQsS0FBS1UsWUFBYyxLQUtuQlYsS0FBS1csT0FBUyxLQU1kWCxLQUFLWSxPQUFTLEdBTWRaLEtBQUthLFFBQVUsR0FPZmIsS0FBS2MsU0FBVyxHQU1oQmQsS0FBS2UsYUFBZSxHQU1wQmYsS0FBS2dCLE1BQVEsR0FFYjFCLEVBQUUyQixLQUFLcEIsRUFBSXFCLFFBQVM1QixFQUFFNkIsTUFBTSxTQUFTQyxFQUFLQyxHQUN6Q3JCLEtBQUtLLFNBQVNlLEVBQUksR0FBR0UsY0FBZ0JGLEVBQUlHLE1BQU0sSUFDNUMsSUFBSUYsRUFBT3JCLE9BQ1pBLE9BRUhWLEVBQUUyQixLQUFLcEIsRUFBSTJCLEtBQU1sQyxFQUFFNkIsTUFBTSxTQUFTTSxFQUFVQyxHQUMzQzFCLEtBQUtnQixNQUFNVyxLQUFL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QUFFc1UsR0FBR0MsWUFBWUMsWUFBWTVTLFFBQVE2YixLQUFPQSxFQTNGNUMsQ0E2RkV4ZCxPQUFPd1UsT0FBU3hVLE9BQU91UixPQUFRdlIsT0FBUUMiLCJmaWxlIjoib3dsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE93bCBjYXJvdXNlbFxyXG4gKiBAdmVyc2lvbiAyLjAuMFxyXG4gKiBAYXV0aG9yIEJhcnRvc3ogV29qY2llY2hvd3NraVxyXG4gKiBAbGljZW5zZSBUaGUgTUlUIExpY2Vuc2UgKE1JVClcclxuICogQHRvZG8gTGF6eSBMb2FkIEljb25cclxuICogQHRvZG8gcHJldmVudCBhbmltYXRpb25lbmQgYnVibGluZ1xyXG4gKiBAdG9kbyBpdGVtc1NjYWxlVXBcclxuICogQHRvZG8gVGVzdCBaZXB0b1xyXG4gKiBAdG9kbyBzdGFnZVBhZGRpbmcgY2FsY3VsYXRlIHdyb25nIGFjdGl2ZSBjbGFzc2VzXHJcbiAqL1xyXG47KGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xyXG5cclxuXHR2YXIgZHJhZywgc3RhdGUsIGU7XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRlbXBsYXRlIGZvciBzdGF0dXMgaW5mb3JtYXRpb24gYWJvdXQgZHJhZyBhbmQgdG91Y2ggZXZlbnRzLlxyXG5cdCAqIEBwcml2YXRlXHJcblx0ICovXHJcblx0ZHJhZyA9IHtcclxuXHRcdHN0YXJ0OiAwLFxyXG5cdFx0c3RhcnRYOiAwLFxyXG5cdFx0c3RhcnRZOiAwLFxyXG5cdFx0Y3VycmVudDogMCxcclxuXHRcdGN1cnJlbnRYOiAwLFxyXG5cdFx0Y3VycmVudFk6IDAsXHJcblx0XHRvZmZzZXRYOiAwLFxyXG5cdFx0b2Zmc2V0WTogMCxcclxuXHRcdGRpc3RhbmNlOiBudWxsLFxyXG5cdFx0c3RhcnRUaW1lOiAwLFxyXG5cdFx0ZW5kVGltZTogMCxcclxuXHRcdHVwZGF0ZWRYOiAwLFxyXG5cdFx0dGFyZ2V0RWw6IG51bGxcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBUZW1wbGF0ZSBmb3Igc29tZSBzdGF0dXMgaW5mb3JtYXRpb25zLlxyXG5cdCAqIEBwcml2YXRlXHJcblx0ICovXHJcblx0c3RhdGUgPSB7XHJcblx0XHRpc1RvdWNoOiBmYWxzZSxcclxuXHRcdGlzU2Nyb2xsaW5nOiBmYWxzZSxcclxuXHRcdGlzU3dpcGluZzogZmFsc2UsXHJcblx0XHRkaXJlY3Rpb246IGZhbHNlLFxyXG5cdFx0aW5Nb3Rpb246IGZhbHNlXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogRXZlbnQgZnVuY3Rpb25zIHJlZmVyZW5jZXMuXHJcblx0ICogQHByaXZhdGVcclxuXHQgKi9cclxuXHRlID0ge1xyXG5cdFx0X29uRHJhZ1N0YXJ0OiBudWxsLFxyXG5cdFx0X29uRHJhZ01vdmU6IG51bGwsXHJcblx0XHRfb25EcmFnRW5kOiBudWxsLFxyXG5cdFx0X3RyYW5zaXRpb25FbmQ6IG51bGwsXHJcblx0XHRfcmVzaXplcjogbnVsbCxcclxuXHRcdF9yZXNwb25zaXZlQ2FsbDogbnVsbCxcclxuXHRcdF9nb1RvTG9vcDogbnVsbCxcclxuXHRcdF9jaGVja1Zpc2liaWxlOiBudWxsXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQ3JlYXRlcyBhIGNhcm91c2VsLlxyXG5cdCAqIEBjbGFzcyBUaGUgT3dsIENhcm91c2VsLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge0hUTUxFbGVtZW50fGpRdWVyeX0gZWxlbWVudCAtIFRoZSBlbGVtZW50IHRvIGNyZWF0ZSB0aGUgY2Fyb3VzZWwgZm9yLlxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBUaGUgb3B0aW9uc1xyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIE93bChlbGVtZW50LCBvcHRpb25zKSB7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBDdXJyZW50IHNldHRpbmdzIGZvciB0aGUgY2Fyb3VzZWwuXHJcblx0XHQgKiBAcHVibGljXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuc2V0dGluZ3MgPSBudWxsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQ3VycmVudCBvcHRpb25zIHNldCBieSB0aGUgY2FsbGVyIGluY2x1ZGluZyBkZWZhdWx0cy5cclxuXHRcdCAqIEBwdWJsaWNcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIE93bC5EZWZhdWx0cywgb3B0aW9ucyk7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBQbHVnaW4gZWxlbWVudC5cclxuXHRcdCAqIEBwdWJsaWNcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBDYWNoZXMgaW5mb3JtYXRpb25zIGFib3V0IGRyYWcgYW5kIHRvdWNoIGV2ZW50cy5cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5kcmFnID0gJC5leHRlbmQoe30sIGRyYWcpO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQ2FjaGVzIHNvbWUgc3RhdHVzIGluZm9ybWF0aW9ucy5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5zdGF0ZSA9ICQuZXh0ZW5kKHt9LCBzdGF0ZSk7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdG9kbyBNdXN0IGJlIGRvY3VtZW50ZWRcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5lID0gJC5leHRlbmQoe30sIGUpO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogUmVmZXJlbmNlcyB0byB0aGUgcnVubmluZyBwbHVnaW5zIG9mIHRoaXMgY2Fyb3VzZWwuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX3BsdWdpbnMgPSB7fTtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEN1cnJlbnRseSBzdXBwcmVzc2VkIGV2ZW50cyB0byBwcmV2ZW50IHRoZW0gZnJvbSBiZWVpbmcgcmV0cmlnZ2VyZWQuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX3N1cHJlc3MgPSB7fTtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEFic29sdXRlIGN1cnJlbnQgcG9zaXRpb24uXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2N1cnJlbnQgPSBudWxsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQW5pbWF0aW9uIHNwZWVkIGluIG1pbGxpc2Vjb25kcy5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fc3BlZWQgPSBudWxsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQ29vcmRpbmF0ZXMgb2YgYWxsIGl0ZW1zIGluIHBpeGVsLlxyXG5cdFx0ICogQHRvZG8gVGhlIG5hbWUgb2YgdGhpcyBtZW1iZXIgaXMgbWlzc2xlYWRpbmcuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2Nvb3JkaW5hdGVzID0gW107XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBDdXJyZW50IGJyZWFrcG9pbnQuXHJcblx0XHQgKiBAdG9kbyBSZWFsIG1lZGlhIHF1ZXJpZXMgd291bGQgYmUgbmljZS5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fYnJlYWtwb2ludCA9IG51bGw7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBDdXJyZW50IHdpZHRoIG9mIHRoZSBwbHVnaW4gZWxlbWVudC5cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fd2lkdGggPSBudWxsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQWxsIHJlYWwgaXRlbXMuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2l0ZW1zID0gW107XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBBbGwgY2xvbmVkIGl0ZW1zLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl9jbG9uZXMgPSBbXTtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIE1lcmdlIHZhbHVlcyBvZiBhbGwgaXRlbXMuXHJcblx0XHQgKiBAdG9kbyBNYXliZSB0aGlzIGNvdWxkIGJlIHBhcnQgb2YgYSBwbHVnaW4uXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX21lcmdlcnMgPSBbXTtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEludmFsaWRhdGVkIHBhcnRzIHdpdGhpbiB0aGUgdXBkYXRlIHByb2Nlc3MuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2ludmFsaWRhdGVkID0ge307XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBPcmRlcmVkIGxpc3Qgb2Ygd29ya2VycyBmb3IgdGhlIHVwZGF0ZSBwcm9jZXNzLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl9waXBlID0gW107XHJcblxyXG5cdFx0JC5lYWNoKE93bC5QbHVnaW5zLCAkLnByb3h5KGZ1bmN0aW9uKGtleSwgcGx1Z2luKSB7XHJcblx0XHRcdHRoaXMuX3BsdWdpbnNba2V5WzBdLnRvTG93ZXJDYXNlKCkgKyBrZXkuc2xpY2UoMSldXHJcblx0XHRcdFx0PSBuZXcgcGx1Z2luKHRoaXMpO1xyXG5cdFx0fSwgdGhpcykpO1xyXG5cclxuXHRcdCQuZWFjaChPd2wuUGlwZSwgJC5wcm94eShmdW5jdGlvbihwcmlvcml0eSwgd29ya2VyKSB7XHJcblx0XHRcdHRoaXMuX3BpcGUucHVzaCh7XHJcblx0XHRcdFx0J2ZpbHRlcic6IHdvcmtlci5maWx0ZXIsXHJcblx0XHRcdFx0J3J1bic6ICQucHJveHkod29ya2VyLnJ1biwgdGhpcylcclxuXHRcdFx0fSk7XHJcblx0XHR9LCB0aGlzKSk7XHJcblxyXG5cdFx0dGhpcy5zZXR1cCgpO1xyXG5cdFx0dGhpcy5pbml0aWFsaXplKCk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMgZm9yIHRoZSBjYXJvdXNlbC5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0T3dsLkRlZmF1bHRzID0ge1xyXG5cdFx0aXRlbXM6IDMsXHJcblx0XHRsb29wOiBmYWxzZSxcclxuXHRcdGNlbnRlcjogZmFsc2UsXHJcblxyXG5cdFx0bW91c2VEcmFnOiB0cnVlLFxyXG5cdFx0dG91Y2hEcmFnOiB0cnVlLFxyXG5cdFx0cHVsbERyYWc6IHRydWUsXHJcblx0XHRmcmVlRHJhZzogZmFsc2UsXHJcblxyXG5cdFx0bWFyZ2luOiAwLFxyXG5cdFx0c3RhZ2VQYWRkaW5nOiAwLFxyXG5cclxuXHRcdG1lcmdlOiBmYWxzZSxcclxuXHRcdG1lcmdlRml0OiB0cnVlLFxyXG5cdFx0YXV0b1dpZHRoOiBmYWxzZSxcclxuXHJcblx0XHRzdGFydFBvc2l0aW9uOiAwLFxyXG5cdFx0cnRsOiBmYWxzZSxcclxuXHJcblx0XHRzbWFydFNwZWVkOiA3NTAsXHJcblx0XHRmbHVpZFNwZWVkOiBmYWxzZSxcclxuXHRcdGRyYWdFbmRTcGVlZDogZmFsc2UsXHJcblxyXG5cdFx0cmVzcG9uc2l2ZToge30sXHJcblx0XHRyZXNwb25zaXZlUmVmcmVzaFJhdGU6IDIwMCxcclxuXHRcdHJlc3BvbnNpdmVCYXNlRWxlbWVudDogd2luZG93LFxyXG5cdFx0cmVzcG9uc2l2ZUNsYXNzOiBmYWxzZSxcclxuXHJcblx0XHRmYWxsYmFja0Vhc2luZzogJ3N3aW5nJyxcclxuXHJcblx0XHRpbmZvOiBmYWxzZSxcclxuXHJcblx0XHRuZXN0ZWRJdGVtU2VsZWN0b3I6IGZhbHNlLFxyXG5cdFx0aXRlbUVsZW1lbnQ6ICdkaXYnLFxyXG5cdFx0c3RhZ2VFbGVtZW50OiAnZGl2JyxcclxuXHJcblx0XHQvLyBDbGFzc2VzIGFuZCBOYW1lc1xyXG5cdFx0dGhlbWVDbGFzczogJ293bC10aGVtZScsXHJcblx0XHRiYXNlQ2xhc3M6ICdvd2wtY2Fyb3VzZWwnLFxyXG5cdFx0aXRlbUNsYXNzOiAnb3dsLWl0ZW0nLFxyXG5cdFx0Y2VudGVyQ2xhc3M6ICdjZW50ZXInLFxyXG5cdFx0YWN0aXZlQ2xhc3M6ICdhY3RpdmUnXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogRW51bWVyYXRpb24gZm9yIHdpZHRoLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcmVhZG9ubHlcclxuXHQgKiBAZW51bSB7U3RyaW5nfVxyXG5cdCAqL1xyXG5cdE93bC5XaWR0aCA9IHtcclxuXHRcdERlZmF1bHQ6ICdkZWZhdWx0JyxcclxuXHRcdElubmVyOiAnaW5uZXInLFxyXG5cdFx0T3V0ZXI6ICdvdXRlcidcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDb250YWlucyBhbGwgcmVnaXN0ZXJlZCBwbHVnaW5zLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRPd2wuUGx1Z2lucyA9IHt9O1xyXG5cclxuXHQvKipcclxuXHQgKiBVcGRhdGUgcGlwZS5cclxuXHQgKi9cclxuXHRPd2wuUGlwZSA9IFsge1xyXG5cdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdpdGVtcycsICdzZXR0aW5ncycgXSxcclxuXHRcdHJ1bjogZnVuY3Rpb24oY2FjaGUpIHtcclxuXHRcdFx0Y2FjaGUuY3VycmVudCA9IHRoaXMuX2l0ZW1zICYmIHRoaXMuX2l0ZW1zW3RoaXMucmVsYXRpdmUodGhpcy5fY3VycmVudCldO1xyXG5cdFx0fVxyXG5cdH0sIHtcclxuXHRcdGZpbHRlcjogWyAnaXRlbXMnLCAnc2V0dGluZ3MnIF0sXHJcblx0XHRydW46IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgY2FjaGVkID0gdGhpcy5fY2xvbmVzLFxyXG5cdFx0XHRcdGNsb25lcyA9IHRoaXMuJHN0YWdlLmNoaWxkcmVuKCcuY2xvbmVkJyk7XHJcblxyXG5cdFx0XHRpZiAoY2xvbmVzLmxlbmd0aCAhPT0gY2FjaGVkLmxlbmd0aCB8fCAoIXRoaXMuc2V0dGluZ3MubG9vcCAmJiBjYWNoZWQubGVuZ3RoID4gMCkpIHtcclxuXHRcdFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbignLmNsb25lZCcpLnJlbW92ZSgpO1xyXG5cdFx0XHRcdHRoaXMuX2Nsb25lcyA9IFtdO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSwge1xyXG5cdFx0ZmlsdGVyOiBbICdpdGVtcycsICdzZXR0aW5ncycgXSxcclxuXHRcdHJ1bjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciBpLCBuLFxyXG5cdFx0XHRcdGNsb25lcyA9IHRoaXMuX2Nsb25lcyxcclxuXHRcdFx0XHRpdGVtcyA9IHRoaXMuX2l0ZW1zLFxyXG5cdFx0XHRcdGRlbHRhID0gdGhpcy5zZXR0aW5ncy5sb29wID8gY2xvbmVzLmxlbmd0aCAtIE1hdGgubWF4KHRoaXMuc2V0dGluZ3MuaXRlbXMgKiAyLCA0KSA6IDA7XHJcblxyXG5cdFx0XHRmb3IgKGkgPSAwLCBuID0gTWF0aC5hYnMoZGVsdGEgLyAyKTsgaSA8IG47IGkrKykge1xyXG5cdFx0XHRcdGlmIChkZWx0YSA+IDApIHtcclxuXHRcdFx0XHRcdHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuZXEoaXRlbXMubGVuZ3RoICsgY2xvbmVzLmxlbmd0aCAtIDEpLnJlbW92ZSgpO1xyXG5cdFx0XHRcdFx0Y2xvbmVzLnBvcCgpO1xyXG5cdFx0XHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5lcSgwKS5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdGNsb25lcy5wb3AoKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y2xvbmVzLnB1c2goY2xvbmVzLmxlbmd0aCAvIDIpO1xyXG5cdFx0XHRcdFx0dGhpcy4kc3RhZ2UuYXBwZW5kKGl0ZW1zW2Nsb25lc1tjbG9uZXMubGVuZ3RoIC0gMV1dLmNsb25lKCkuYWRkQ2xhc3MoJ2Nsb25lZCcpKTtcclxuXHRcdFx0XHRcdGNsb25lcy5wdXNoKGl0ZW1zLmxlbmd0aCAtIDEgLSAoY2xvbmVzLmxlbmd0aCAtIDEpIC8gMik7XHJcblx0XHRcdFx0XHR0aGlzLiRzdGFnZS5wcmVwZW5kKGl0ZW1zW2Nsb25lc1tjbG9uZXMubGVuZ3RoIC0gMV1dLmNsb25lKCkuYWRkQ2xhc3MoJ2Nsb25lZCcpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9LCB7XHJcblx0XHRmaWx0ZXI6IFsgJ3dpZHRoJywgJ2l0ZW1zJywgJ3NldHRpbmdzJyBdLFxyXG5cdFx0cnVuOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIHJ0bCA9ICh0aGlzLnNldHRpbmdzLnJ0bCA/IDEgOiAtMSksXHJcblx0XHRcdFx0d2lkdGggPSAodGhpcy53aWR0aCgpIC8gdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKSxcclxuXHRcdFx0XHRjb29yZGluYXRlID0gMCwgbWVyZ2UsIGksIG47XHJcblxyXG5cdFx0XHR0aGlzLl9jb29yZGluYXRlcyA9IFtdO1xyXG5cdFx0XHRmb3IgKGkgPSAwLCBuID0gdGhpcy5fY2xvbmVzLmxlbmd0aCArIHRoaXMuX2l0ZW1zLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG5cdFx0XHRcdG1lcmdlID0gdGhpcy5fbWVyZ2Vyc1t0aGlzLnJlbGF0aXZlKGkpXTtcclxuXHRcdFx0XHRtZXJnZSA9ICh0aGlzLnNldHRpbmdzLm1lcmdlRml0ICYmIE1hdGgubWluKG1lcmdlLCB0aGlzLnNldHRpbmdzLml0ZW1zKSkgfHwgbWVyZ2U7XHJcblx0XHRcdFx0Y29vcmRpbmF0ZSArPSAodGhpcy5zZXR0aW5ncy5hdXRvV2lkdGggPyB0aGlzLl9pdGVtc1t0aGlzLnJlbGF0aXZlKGkpXS53aWR0aCgpICsgdGhpcy5zZXR0aW5ncy5tYXJnaW4gOiB3aWR0aCAqIG1lcmdlKSAqIHJ0bDtcclxuXHJcblx0XHRcdFx0dGhpcy5fY29vcmRpbmF0ZXMucHVzaChjb29yZGluYXRlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0sIHtcclxuXHRcdGZpbHRlcjogWyAnd2lkdGgnLCAnaXRlbXMnLCAnc2V0dGluZ3MnIF0sXHJcblx0XHRydW46IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgaSwgbiwgd2lkdGggPSAodGhpcy53aWR0aCgpIC8gdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKSwgY3NzID0ge1xyXG5cdFx0XHRcdCd3aWR0aCc6IE1hdGguYWJzKHRoaXMuX2Nvb3JkaW5hdGVzW3RoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aCAtIDFdKSArIHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nICogMixcclxuXHRcdFx0XHQncGFkZGluZy1sZWZ0JzogdGhpcy5zZXR0aW5ncy5zdGFnZVBhZGRpbmcgfHwgJycsXHJcblx0XHRcdFx0J3BhZGRpbmctcmlnaHQnOiB0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyB8fCAnJ1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0dGhpcy4kc3RhZ2UuY3NzKGNzcyk7XHJcblxyXG5cdFx0XHRjc3MgPSB7ICd3aWR0aCc6IHRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoID8gJ2F1dG8nIDogd2lkdGggLSB0aGlzLnNldHRpbmdzLm1hcmdpbiB9O1xyXG5cdFx0XHRjc3NbdGhpcy5zZXR0aW5ncy5ydGwgPyAnbWFyZ2luLWxlZnQnIDogJ21hcmdpbi1yaWdodCddID0gdGhpcy5zZXR0aW5ncy5tYXJnaW47XHJcblxyXG5cdFx0XHRpZiAoIXRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoICYmICQuZ3JlcCh0aGlzLl9tZXJnZXJzLCBmdW5jdGlvbih2KSB7IHJldHVybiB2ID4gMSB9KS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0Zm9yIChpID0gMCwgbiA9IHRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG5cdFx0XHRcdFx0Y3NzLndpZHRoID0gTWF0aC5hYnModGhpcy5fY29vcmRpbmF0ZXNbaV0pIC0gTWF0aC5hYnModGhpcy5fY29vcmRpbmF0ZXNbaSAtIDFdIHx8IDApIC0gdGhpcy5zZXR0aW5ncy5tYXJnaW47XHJcblx0XHRcdFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmVxKGkpLmNzcyhjc3MpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNzcyhjc3MpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSwge1xyXG5cdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdpdGVtcycsICdzZXR0aW5ncycgXSxcclxuXHRcdHJ1bjogZnVuY3Rpb24oY2FjaGUpIHtcclxuXHRcdFx0Y2FjaGUuY3VycmVudCAmJiB0aGlzLnJlc2V0KHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuaW5kZXgoY2FjaGUuY3VycmVudCkpO1xyXG5cdFx0fVxyXG5cdH0sIHtcclxuXHRcdGZpbHRlcjogWyAncG9zaXRpb24nIF0sXHJcblx0XHRydW46IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR0aGlzLmFuaW1hdGUodGhpcy5jb29yZGluYXRlcyh0aGlzLl9jdXJyZW50KSk7XHJcblx0XHR9XHJcblx0fSwge1xyXG5cdFx0ZmlsdGVyOiBbICd3aWR0aCcsICdwb3NpdGlvbicsICdpdGVtcycsICdzZXR0aW5ncycgXSxcclxuXHRcdHJ1bjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciBydGwgPSB0aGlzLnNldHRpbmdzLnJ0bCA/IDEgOiAtMSxcclxuXHRcdFx0XHRwYWRkaW5nID0gdGhpcy5zZXR0aW5ncy5zdGFnZVBhZGRpbmcgKiAyLFxyXG5cdFx0XHRcdGJlZ2luID0gdGhpcy5jb29yZGluYXRlcyh0aGlzLmN1cnJlbnQoKSkgKyBwYWRkaW5nLFxyXG5cdFx0XHRcdGVuZCA9IGJlZ2luICsgdGhpcy53aWR0aCgpICogcnRsLFxyXG5cdFx0XHRcdGlubmVyLCBvdXRlciwgbWF0Y2hlcyA9IFtdLCBpLCBuO1xyXG5cclxuXHRcdFx0Zm9yIChpID0gMCwgbiA9IHRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG5cdFx0XHRcdGlubmVyID0gdGhpcy5fY29vcmRpbmF0ZXNbaSAtIDFdIHx8IDA7XHJcblx0XHRcdFx0b3V0ZXIgPSBNYXRoLmFicyh0aGlzLl9jb29yZGluYXRlc1tpXSkgKyBwYWRkaW5nICogcnRsO1xyXG5cclxuXHRcdFx0XHRpZiAoKHRoaXMub3AoaW5uZXIsICc8PScsIGJlZ2luKSAmJiAodGhpcy5vcChpbm5lciwgJz4nLCBlbmQpKSlcclxuXHRcdFx0XHRcdHx8ICh0aGlzLm9wKG91dGVyLCAnPCcsIGJlZ2luKSAmJiB0aGlzLm9wKG91dGVyLCAnPicsIGVuZCkpKSB7XHJcblx0XHRcdFx0XHRtYXRjaGVzLnB1c2goaSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbignLicgKyB0aGlzLnNldHRpbmdzLmFjdGl2ZUNsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmFjdGl2ZUNsYXNzKTtcclxuXHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oJzplcSgnICsgbWF0Y2hlcy5qb2luKCcpLCA6ZXEoJykgKyAnKScpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpO1xyXG5cclxuXHRcdFx0aWYgKHRoaXMuc2V0dGluZ3MuY2VudGVyKSB7XHJcblx0XHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oJy4nICsgdGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcyk7XHJcblx0XHRcdFx0dGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLmN1cnJlbnQoKSkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9IF07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEluaXRpYWxpemVzIHRoZSBjYXJvdXNlbC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24oKSB7XHJcblx0XHR0aGlzLnRyaWdnZXIoJ2luaXRpYWxpemUnKTtcclxuXHJcblx0XHR0aGlzLiRlbGVtZW50XHJcblx0XHRcdC5hZGRDbGFzcyh0aGlzLnNldHRpbmdzLmJhc2VDbGFzcylcclxuXHRcdFx0LmFkZENsYXNzKHRoaXMuc2V0dGluZ3MudGhlbWVDbGFzcylcclxuXHRcdFx0LnRvZ2dsZUNsYXNzKCdvd2wtcnRsJywgdGhpcy5zZXR0aW5ncy5ydGwpO1xyXG5cclxuXHRcdC8vIGNoZWNrIHN1cHBvcnRcclxuXHRcdHRoaXMuYnJvd3NlclN1cHBvcnQoKTtcclxuXHJcblx0XHRpZiAodGhpcy5zZXR0aW5ncy5hdXRvV2lkdGggJiYgdGhpcy5zdGF0ZS5pbWFnZXNMb2FkZWQgIT09IHRydWUpIHtcclxuXHRcdFx0dmFyIGltZ3MsIG5lc3RlZFNlbGVjdG9yLCB3aWR0aDtcclxuXHRcdFx0aW1ncyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnaW1nJyk7XHJcblx0XHRcdG5lc3RlZFNlbGVjdG9yID0gdGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IgPyAnLicgKyB0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvciA6IHVuZGVmaW5lZDtcclxuXHRcdFx0d2lkdGggPSB0aGlzLiRlbGVtZW50LmNoaWxkcmVuKG5lc3RlZFNlbGVjdG9yKS53aWR0aCgpO1xyXG5cclxuXHRcdFx0aWYgKGltZ3MubGVuZ3RoICYmIHdpZHRoIDw9IDApIHtcclxuXHRcdFx0XHR0aGlzLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMoaW1ncyk7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy4kZWxlbWVudC5hZGRDbGFzcygnb3dsLWxvYWRpbmcnKTtcclxuXHJcblx0XHQvLyBjcmVhdGUgc3RhZ2VcclxuXHRcdHRoaXMuJHN0YWdlID0gJCgnPCcgKyB0aGlzLnNldHRpbmdzLnN0YWdlRWxlbWVudCArICcgY2xhc3M9XCJvd2wtc3RhZ2VcIi8+JylcclxuXHRcdFx0LndyYXAoJzxkaXYgY2xhc3M9XCJvd2wtc3RhZ2Utb3V0ZXJcIj4nKTtcclxuXHJcblx0XHQvLyBhcHBlbmQgc3RhZ2VcclxuXHRcdHRoaXMuJGVsZW1lbnQuYXBwZW5kKHRoaXMuJHN0YWdlLnBhcmVudCgpKTtcclxuXHJcblx0XHQvLyBhcHBlbmQgY29udGVudFxyXG5cdFx0dGhpcy5yZXBsYWNlKHRoaXMuJGVsZW1lbnQuY2hpbGRyZW4oKS5ub3QodGhpcy4kc3RhZ2UucGFyZW50KCkpKTtcclxuXHJcblx0XHQvLyBzZXQgdmlldyB3aWR0aFxyXG5cdFx0dGhpcy5fd2lkdGggPSB0aGlzLiRlbGVtZW50LndpZHRoKCk7XHJcblxyXG5cdFx0Ly8gdXBkYXRlIHZpZXdcclxuXHRcdHRoaXMucmVmcmVzaCgpO1xyXG5cclxuXHRcdHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ293bC1sb2FkaW5nJykuYWRkQ2xhc3MoJ293bC1sb2FkZWQnKTtcclxuXHJcblx0XHQvLyBhdHRhY2ggZ2VuZXJpYyBldmVudHNcclxuXHRcdHRoaXMuZXZlbnRzQ2FsbCgpO1xyXG5cclxuXHRcdC8vIGF0dGFjaCBnZW5lcmljIGV2ZW50c1xyXG5cdFx0dGhpcy5pbnRlcm5hbEV2ZW50cygpO1xyXG5cclxuXHRcdC8vIGF0dGFjaCBjdXN0b20gY29udHJvbCBldmVudHNcclxuXHRcdHRoaXMuYWRkVHJpZ2dlcmFibGVFdmVudHMoKTtcclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ2luaXRpYWxpemVkJyk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogU2V0dXBzIHRoZSBjdXJyZW50IHNldHRpbmdzLlxyXG5cdCAqIEB0b2RvIFJlbW92ZSByZXNwb25zaXZlIGNsYXNzZXMuIFdoeSBzaG91bGQgYWRhcHRpdmUgZGVzaWducyBiZSBicm91Z2h0IGludG8gSUU4P1xyXG5cdCAqIEB0b2RvIFN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgYnkgdXNpbmcgYG1hdGNoTWVkaWFgIHdvdWxkIGJlIG5pY2UuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuc2V0dXAgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciB2aWV3cG9ydCA9IHRoaXMudmlld3BvcnQoKSxcclxuXHRcdFx0b3ZlcndyaXRlcyA9IHRoaXMub3B0aW9ucy5yZXNwb25zaXZlLFxyXG5cdFx0XHRtYXRjaCA9IC0xLFxyXG5cdFx0XHRzZXR0aW5ncyA9IG51bGw7XHJcblxyXG5cdFx0aWYgKCFvdmVyd3JpdGVzKSB7XHJcblx0XHRcdHNldHRpbmdzID0gJC5leHRlbmQoe30sIHRoaXMub3B0aW9ucyk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQkLmVhY2gob3ZlcndyaXRlcywgZnVuY3Rpb24oYnJlYWtwb2ludCkge1xyXG5cdFx0XHRcdGlmIChicmVha3BvaW50IDw9IHZpZXdwb3J0ICYmIGJyZWFrcG9pbnQgPiBtYXRjaCkge1xyXG5cdFx0XHRcdFx0bWF0Y2ggPSBOdW1iZXIoYnJlYWtwb2ludCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHNldHRpbmdzID0gJC5leHRlbmQoe30sIHRoaXMub3B0aW9ucywgb3ZlcndyaXRlc1ttYXRjaF0pO1xyXG5cdFx0XHRkZWxldGUgc2V0dGluZ3MucmVzcG9uc2l2ZTtcclxuXHJcblx0XHRcdC8vIHJlc3BvbnNpdmUgY2xhc3NcclxuXHRcdFx0aWYgKHNldHRpbmdzLnJlc3BvbnNpdmVDbGFzcykge1xyXG5cdFx0XHRcdHRoaXMuJGVsZW1lbnQuYXR0cignY2xhc3MnLCBmdW5jdGlvbihpLCBjKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gYy5yZXBsYWNlKC9cXGIgb3dsLXJlc3BvbnNpdmUtXFxTKy9nLCAnJyk7XHJcblx0XHRcdFx0fSkuYWRkQ2xhc3MoJ293bC1yZXNwb25zaXZlLScgKyBtYXRjaCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5zZXR0aW5ncyA9PT0gbnVsbCB8fCB0aGlzLl9icmVha3BvaW50ICE9PSBtYXRjaCkge1xyXG5cdFx0XHR0aGlzLnRyaWdnZXIoJ2NoYW5nZScsIHsgcHJvcGVydHk6IHsgbmFtZTogJ3NldHRpbmdzJywgdmFsdWU6IHNldHRpbmdzIH0gfSk7XHJcblx0XHRcdHRoaXMuX2JyZWFrcG9pbnQgPSBtYXRjaDtcclxuXHRcdFx0dGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xyXG5cdFx0XHR0aGlzLmludmFsaWRhdGUoJ3NldHRpbmdzJyk7XHJcblx0XHRcdHRoaXMudHJpZ2dlcignY2hhbmdlZCcsIHsgcHJvcGVydHk6IHsgbmFtZTogJ3NldHRpbmdzJywgdmFsdWU6IHRoaXMuc2V0dGluZ3MgfSB9KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBVcGRhdGVzIG9wdGlvbiBsb2dpYyBpZiBuZWNlc3NlcnkuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUub3B0aW9uc0xvZ2ljID0gZnVuY3Rpb24oKSB7XHJcblx0XHQvLyBUb2dnbGUgQ2VudGVyIGNsYXNzXHJcblx0XHR0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKCdvd2wtY2VudGVyJywgdGhpcy5zZXR0aW5ncy5jZW50ZXIpO1xyXG5cclxuXHRcdC8vIGlmIGl0ZW1zIG51bWJlciBpcyBsZXNzIHRoYW4gaW4gYm9keVxyXG5cdFx0aWYgKHRoaXMuc2V0dGluZ3MubG9vcCAmJiB0aGlzLl9pdGVtcy5sZW5ndGggPCB0aGlzLnNldHRpbmdzLml0ZW1zKSB7XHJcblx0XHRcdHRoaXMuc2V0dGluZ3MubG9vcCA9IGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCkge1xyXG5cdFx0XHR0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyA9IGZhbHNlO1xyXG5cdFx0XHR0aGlzLnNldHRpbmdzLm1lcmdlID0gZmFsc2U7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogUHJlcGFyZXMgYW4gaXRlbSBiZWZvcmUgYWRkLlxyXG5cdCAqIEB0b2RvIFJlbmFtZSBldmVudCBwYXJhbWV0ZXIgYGNvbnRlbnRgIHRvIGBpdGVtYC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHJldHVybnMge2pRdWVyeXxIVE1MRWxlbWVudH0gLSBUaGUgaXRlbSBjb250YWluZXIuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5wcmVwYXJlID0gZnVuY3Rpb24oaXRlbSkge1xyXG5cdFx0dmFyIGV2ZW50ID0gdGhpcy50cmlnZ2VyKCdwcmVwYXJlJywgeyBjb250ZW50OiBpdGVtIH0pO1xyXG5cclxuXHRcdGlmICghZXZlbnQuZGF0YSkge1xyXG5cdFx0XHRldmVudC5kYXRhID0gJCgnPCcgKyB0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50ICsgJy8+JylcclxuXHRcdFx0XHQuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5pdGVtQ2xhc3MpLmFwcGVuZChpdGVtKVxyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMudHJpZ2dlcigncHJlcGFyZWQnLCB7IGNvbnRlbnQ6IGV2ZW50LmRhdGEgfSk7XHJcblxyXG5cdFx0cmV0dXJuIGV2ZW50LmRhdGE7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogVXBkYXRlcyB0aGUgdmlldy5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBpID0gMCxcclxuXHRcdFx0biA9IHRoaXMuX3BpcGUubGVuZ3RoLFxyXG5cdFx0XHRmaWx0ZXIgPSAkLnByb3h5KGZ1bmN0aW9uKHApIHsgcmV0dXJuIHRoaXNbcF0gfSwgdGhpcy5faW52YWxpZGF0ZWQpLFxyXG5cdFx0XHRjYWNoZSA9IHt9O1xyXG5cclxuXHRcdHdoaWxlIChpIDwgbikge1xyXG5cdFx0XHRpZiAodGhpcy5faW52YWxpZGF0ZWQuYWxsIHx8ICQuZ3JlcCh0aGlzLl9waXBlW2ldLmZpbHRlciwgZmlsdGVyKS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0dGhpcy5fcGlwZVtpXS5ydW4oY2FjaGUpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGkrKztcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLl9pbnZhbGlkYXRlZCA9IHt9O1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEdldHMgdGhlIHdpZHRoIG9mIHRoZSB2aWV3LlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge093bC5XaWR0aH0gW2RpbWVuc2lvbj1Pd2wuV2lkdGguRGVmYXVsdF0gLSBUaGUgZGltZW5zaW9uIHRvIHJldHVybi5cclxuXHQgKiBAcmV0dXJucyB7TnVtYmVyfSAtIFRoZSB3aWR0aCBvZiB0aGUgdmlldyBpbiBwaXhlbC5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLndpZHRoID0gZnVuY3Rpb24oZGltZW5zaW9uKSB7XHJcblx0XHRkaW1lbnNpb24gPSBkaW1lbnNpb24gfHwgT3dsLldpZHRoLkRlZmF1bHQ7XHJcblx0XHRzd2l0Y2ggKGRpbWVuc2lvbikge1xyXG5cdFx0XHRjYXNlIE93bC5XaWR0aC5Jbm5lcjpcclxuXHRcdFx0Y2FzZSBPd2wuV2lkdGguT3V0ZXI6XHJcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3dpZHRoO1xyXG5cdFx0XHRkZWZhdWx0OlxyXG5cdFx0XHRcdHJldHVybiB0aGlzLl93aWR0aCAtIHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nICogMiArIHRoaXMuc2V0dGluZ3MubWFyZ2luO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFJlZnJlc2hlcyB0aGUgY2Fyb3VzZWwgcHJpbWFyaWx5IGZvciBhZGFwdGl2ZSBwdXJwb3Nlcy5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24oKSB7XHJcblx0XHRpZiAodGhpcy5faXRlbXMubGVuZ3RoID09PSAwKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ3JlZnJlc2gnKTtcclxuXHJcblx0XHR0aGlzLnNldHVwKCk7XHJcblxyXG5cdFx0dGhpcy5vcHRpb25zTG9naWMoKTtcclxuXHJcblx0XHQvLyBoaWRlIGFuZCBzaG93IG1ldGhvZHMgaGVscHMgaGVyZSB0byBzZXQgYSBwcm9wZXIgd2lkdGhzLFxyXG5cdFx0Ly8gdGhpcyBwcmV2ZW50cyBzY3JvbGxiYXIgdG8gYmUgY2FsY3VsYXRlZCBpbiBzdGFnZSB3aWR0aFxyXG5cdFx0dGhpcy4kc3RhZ2UuYWRkQ2xhc3MoJ293bC1yZWZyZXNoJyk7XHJcblxyXG5cdFx0dGhpcy51cGRhdGUoKTtcclxuXHJcblx0XHR0aGlzLiRzdGFnZS5yZW1vdmVDbGFzcygnb3dsLXJlZnJlc2gnKTtcclxuXHJcblx0XHR0aGlzLnN0YXRlLm9yaWVudGF0aW9uID0gd2luZG93Lm9yaWVudGF0aW9uO1xyXG5cclxuXHRcdHRoaXMud2F0Y2hWaXNpYmlsaXR5KCk7XHJcblxyXG5cdFx0dGhpcy50cmlnZ2VyKCdyZWZyZXNoZWQnKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTYXZlIGludGVybmFsIGV2ZW50IHJlZmVyZW5jZXMgYW5kIGFkZCBldmVudCBiYXNlZCBmdW5jdGlvbnMuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuZXZlbnRzQ2FsbCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8gU2F2ZSBldmVudHMgcmVmZXJlbmNlc1xyXG5cdFx0dGhpcy5lLl9vbkRyYWdTdGFydCA9ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHR0aGlzLm9uRHJhZ1N0YXJ0KGUpO1xyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHR0aGlzLmUuX29uRHJhZ01vdmUgPSAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0dGhpcy5vbkRyYWdNb3ZlKGUpO1xyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHR0aGlzLmUuX29uRHJhZ0VuZCA9ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHR0aGlzLm9uRHJhZ0VuZChlKTtcclxuXHRcdH0sIHRoaXMpO1xyXG5cdFx0dGhpcy5lLl9vblJlc2l6ZSA9ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHR0aGlzLm9uUmVzaXplKGUpO1xyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHR0aGlzLmUuX3RyYW5zaXRpb25FbmQgPSAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0dGhpcy50cmFuc2l0aW9uRW5kKGUpO1xyXG5cdFx0fSwgdGhpcyk7XHJcblx0XHR0aGlzLmUuX3ByZXZlbnRDbGljayA9ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHR0aGlzLnByZXZlbnRDbGljayhlKTtcclxuXHRcdH0sIHRoaXMpO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyB3aW5kb3cgYHJlc2l6ZWAgZXZlbnQuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUub25UaHJvdHRsZWRSZXNpemUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lcik7XHJcblx0XHR0aGlzLnJlc2l6ZVRpbWVyID0gd2luZG93LnNldFRpbWVvdXQodGhpcy5lLl9vblJlc2l6ZSwgdGhpcy5zZXR0aW5ncy5yZXNwb25zaXZlUmVmcmVzaFJhdGUpO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyB3aW5kb3cgYHJlc2l6ZWAgZXZlbnQuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUub25SZXNpemUgPSBmdW5jdGlvbigpIHtcclxuXHRcdGlmICghdGhpcy5faXRlbXMubGVuZ3RoKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5fd2lkdGggPT09IHRoaXMuJGVsZW1lbnQud2lkdGgoKSkge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHRoaXMudHJpZ2dlcigncmVzaXplJykuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuX3dpZHRoID0gdGhpcy4kZWxlbWVudC53aWR0aCgpO1xyXG5cclxuXHRcdHRoaXMuaW52YWxpZGF0ZSgnd2lkdGgnKTtcclxuXHJcblx0XHR0aGlzLnJlZnJlc2goKTtcclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ3Jlc2l6ZWQnKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDaGVja3MgZm9yIHRvdWNoL21vdXNlIGRyYWcgZXZlbnQgdHlwZSBhbmQgYWRkIHJ1biBldmVudCBoYW5kbGVycy5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5ldmVudHNSb3V0ZXIgPSBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0dmFyIHR5cGUgPSBldmVudC50eXBlO1xyXG5cclxuXHRcdGlmICh0eXBlID09PSBcIm1vdXNlZG93blwiIHx8IHR5cGUgPT09IFwidG91Y2hzdGFydFwiKSB7XHJcblx0XHRcdHRoaXMub25EcmFnU3RhcnQoZXZlbnQpO1xyXG5cdFx0fSBlbHNlIGlmICh0eXBlID09PSBcIm1vdXNlbW92ZVwiIHx8IHR5cGUgPT09IFwidG91Y2htb3ZlXCIpIHtcclxuXHRcdFx0dGhpcy5vbkRyYWdNb3ZlKGV2ZW50KTtcclxuXHRcdH0gZWxzZSBpZiAodHlwZSA9PT0gXCJtb3VzZXVwXCIgfHwgdHlwZSA9PT0gXCJ0b3VjaGVuZFwiKSB7XHJcblx0XHRcdHRoaXMub25EcmFnRW5kKGV2ZW50KTtcclxuXHRcdH0gZWxzZSBpZiAodHlwZSA9PT0gXCJ0b3VjaGNhbmNlbFwiKSB7XHJcblx0XHRcdHRoaXMub25EcmFnRW5kKGV2ZW50KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDaGVja3MgZm9yIHRvdWNoL21vdXNlIGRyYWcgb3B0aW9ucyBhbmQgYWRkIG5lY2Vzc2VyeSBldmVudCBoYW5kbGVycy5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5pbnRlcm5hbEV2ZW50cyA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGlzVG91Y2ggPSBpc1RvdWNoU3VwcG9ydCgpLFxyXG5cdFx0XHRpc1RvdWNoSUUgPSBpc1RvdWNoU3VwcG9ydElFKCk7XHJcblxyXG5cdFx0aWYgKHRoaXMuc2V0dGluZ3MubW91c2VEcmFnKXtcclxuXHRcdFx0dGhpcy4kc3RhZ2Uub24oJ21vdXNlZG93bicsICQucHJveHkoZnVuY3Rpb24oZXZlbnQpIHsgdGhpcy5ldmVudHNSb3V0ZXIoZXZlbnQpIH0sIHRoaXMpKTtcclxuXHRcdFx0dGhpcy4kc3RhZ2Uub24oJ2RyYWdzdGFydCcsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2UgfSk7XHJcblx0XHRcdHRoaXMuJHN0YWdlLmdldCgwKS5vbnNlbGVjdHN0YXJ0ID0gZnVuY3Rpb24oKSB7IHJldHVybiBmYWxzZSB9O1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy4kZWxlbWVudC5hZGRDbGFzcygnb3dsLXRleHQtc2VsZWN0LW9uJyk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHRoaXMuc2V0dGluZ3MudG91Y2hEcmFnICYmICFpc1RvdWNoSUUpe1xyXG5cdFx0XHR0aGlzLiRzdGFnZS5vbigndG91Y2hzdGFydCB0b3VjaGNhbmNlbCcsICQucHJveHkoZnVuY3Rpb24oZXZlbnQpIHsgdGhpcy5ldmVudHNSb3V0ZXIoZXZlbnQpIH0sIHRoaXMpKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBjYXRjaCB0cmFuc2l0aW9uRW5kIGV2ZW50XHJcblx0XHRpZiAodGhpcy50cmFuc2l0aW9uRW5kVmVuZG9yKSB7XHJcblx0XHRcdHRoaXMub24odGhpcy4kc3RhZ2UuZ2V0KDApLCB0aGlzLnRyYW5zaXRpb25FbmRWZW5kb3IsIHRoaXMuZS5fdHJhbnNpdGlvbkVuZCwgZmFsc2UpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIHJlc3BvbnNpdmVcclxuXHRcdGlmICh0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUgIT09IGZhbHNlKSB7XHJcblx0XHRcdHRoaXMub24od2luZG93LCAncmVzaXplJywgJC5wcm94eSh0aGlzLm9uVGhyb3R0bGVkUmVzaXplLCB0aGlzKSk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogSGFuZGxlcyB0b3VjaHN0YXJ0L21vdXNlZG93biBldmVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnQgLSBUaGUgZXZlbnQgYXJndW1lbnRzLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUub25EcmFnU3RhcnQgPSBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0dmFyIGV2LCBpc1RvdWNoRXZlbnQsIHBhZ2VYLCBwYWdlWSwgYW5pbWF0ZWRQb3M7XHJcblxyXG5cdFx0ZXYgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcclxuXHJcblx0XHQvLyBwcmV2ZW50IHJpZ2h0IGNsaWNrXHJcblx0XHRpZiAoZXYud2hpY2ggPT09IDMgfHwgdGhpcy5zdGF0ZS5pc1RvdWNoKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoZXYudHlwZSA9PT0gJ21vdXNlZG93bicpIHtcclxuXHRcdFx0dGhpcy4kc3RhZ2UuYWRkQ2xhc3MoJ293bC1ncmFiJyk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy50cmlnZ2VyKCdkcmFnJyk7XHJcblx0XHR0aGlzLmRyYWcuc3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcblx0XHR0aGlzLnNwZWVkKDApO1xyXG5cdFx0dGhpcy5zdGF0ZS5pc1RvdWNoID0gdHJ1ZTtcclxuXHRcdHRoaXMuc3RhdGUuaXNTY3JvbGxpbmcgPSBmYWxzZTtcclxuXHRcdHRoaXMuc3RhdGUuaXNTd2lwaW5nID0gZmFsc2U7XHJcblx0XHR0aGlzLmRyYWcuZGlzdGFuY2UgPSAwO1xyXG5cclxuXHRcdHBhZ2VYID0gZ2V0VG91Y2hlcyhldikueDtcclxuXHRcdHBhZ2VZID0gZ2V0VG91Y2hlcyhldikueTtcclxuXHJcblx0XHQvLyBnZXQgc3RhZ2UgcG9zaXRpb24gbGVmdFxyXG5cdFx0dGhpcy5kcmFnLm9mZnNldFggPSB0aGlzLiRzdGFnZS5wb3NpdGlvbigpLmxlZnQ7XHJcblx0XHR0aGlzLmRyYWcub2Zmc2V0WSA9IHRoaXMuJHN0YWdlLnBvc2l0aW9uKCkudG9wO1xyXG5cclxuXHRcdGlmICh0aGlzLnNldHRpbmdzLnJ0bCkge1xyXG5cdFx0XHR0aGlzLmRyYWcub2Zmc2V0WCA9IHRoaXMuJHN0YWdlLnBvc2l0aW9uKCkubGVmdCArIHRoaXMuJHN0YWdlLndpZHRoKCkgLSB0aGlzLndpZHRoKClcclxuXHRcdFx0XHQrIHRoaXMuc2V0dGluZ3MubWFyZ2luO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGNhdGNoIHBvc2l0aW9uIC8vIGllIHRvIGZpeFxyXG5cdFx0aWYgKHRoaXMuc3RhdGUuaW5Nb3Rpb24gJiYgdGhpcy5zdXBwb3J0M2QpIHtcclxuXHRcdFx0YW5pbWF0ZWRQb3MgPSB0aGlzLmdldFRyYW5zZm9ybVByb3BlcnR5KCk7XHJcblx0XHRcdHRoaXMuZHJhZy5vZmZzZXRYID0gYW5pbWF0ZWRQb3M7XHJcblx0XHRcdHRoaXMuYW5pbWF0ZShhbmltYXRlZFBvcyk7XHJcblx0XHRcdHRoaXMuc3RhdGUuaW5Nb3Rpb24gPSB0cnVlO1xyXG5cdFx0fSBlbHNlIGlmICh0aGlzLnN0YXRlLmluTW90aW9uICYmICF0aGlzLnN1cHBvcnQzZCkge1xyXG5cdFx0XHR0aGlzLnN0YXRlLmluTW90aW9uID0gZmFsc2U7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLmRyYWcuc3RhcnRYID0gcGFnZVggLSB0aGlzLmRyYWcub2Zmc2V0WDtcclxuXHRcdHRoaXMuZHJhZy5zdGFydFkgPSBwYWdlWSAtIHRoaXMuZHJhZy5vZmZzZXRZO1xyXG5cclxuXHRcdHRoaXMuZHJhZy5zdGFydCA9IHBhZ2VYIC0gdGhpcy5kcmFnLnN0YXJ0WDtcclxuXHRcdHRoaXMuZHJhZy50YXJnZXRFbCA9IGV2LnRhcmdldCB8fCBldi5zcmNFbGVtZW50O1xyXG5cdFx0dGhpcy5kcmFnLnVwZGF0ZWRYID0gdGhpcy5kcmFnLnN0YXJ0O1xyXG5cclxuXHRcdC8vIHRvIGRvL2NoZWNrXHJcblx0XHQvLyBwcmV2ZW50IGxpbmtzIGFuZCBpbWFnZXMgZHJhZ2dpbmc7XHJcblx0XHRpZiAodGhpcy5kcmFnLnRhcmdldEVsLnRhZ05hbWUgPT09IFwiSU1HXCIgfHwgdGhpcy5kcmFnLnRhcmdldEVsLnRhZ05hbWUgPT09IFwiQVwiKSB7XHJcblx0XHRcdHRoaXMuZHJhZy50YXJnZXRFbC5kcmFnZ2FibGUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHQkKGRvY3VtZW50KS5vbignbW91c2Vtb3ZlLm93bC5kcmFnRXZlbnRzIG1vdXNldXAub3dsLmRyYWdFdmVudHMgdG91Y2htb3ZlLm93bC5kcmFnRXZlbnRzIHRvdWNoZW5kLm93bC5kcmFnRXZlbnRzJywgJC5wcm94eShmdW5jdGlvbihldmVudCkge3RoaXMuZXZlbnRzUm91dGVyKGV2ZW50KX0sdGhpcykpO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEhhbmRsZXMgdGhlIHRvdWNobW92ZS9tb3VzZW1vdmUgZXZlbnRzLlxyXG5cdCAqIEB0b2RvIFNpbXBsaWZ5XHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IC0gVGhlIGV2ZW50IGFyZ3VtZW50cy5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLm9uRHJhZ01vdmUgPSBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0dmFyIGV2LCBpc1RvdWNoRXZlbnQsIHBhZ2VYLCBwYWdlWSwgbWluVmFsdWUsIG1heFZhbHVlLCBwdWxsO1xyXG5cclxuXHRcdGlmICghdGhpcy5zdGF0ZS5pc1RvdWNoKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5zdGF0ZS5pc1Njcm9sbGluZykge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0ZXYgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcclxuXHJcblx0XHRwYWdlWCA9IGdldFRvdWNoZXMoZXYpLng7XHJcblx0XHRwYWdlWSA9IGdldFRvdWNoZXMoZXYpLnk7XHJcblxyXG5cdFx0Ly8gRHJhZyBEaXJlY3Rpb25cclxuXHRcdHRoaXMuZHJhZy5jdXJyZW50WCA9IHBhZ2VYIC0gdGhpcy5kcmFnLnN0YXJ0WDtcclxuXHRcdHRoaXMuZHJhZy5jdXJyZW50WSA9IHBhZ2VZIC0gdGhpcy5kcmFnLnN0YXJ0WTtcclxuXHRcdHRoaXMuZHJhZy5kaXN0YW5jZSA9IHRoaXMuZHJhZy5jdXJyZW50WCAtIHRoaXMuZHJhZy5vZmZzZXRYO1xyXG5cclxuXHRcdC8vIENoZWNrIG1vdmUgZGlyZWN0aW9uXHJcblx0XHRpZiAodGhpcy5kcmFnLmRpc3RhbmNlIDwgMCkge1xyXG5cdFx0XHR0aGlzLnN0YXRlLmRpcmVjdGlvbiA9IHRoaXMuc2V0dGluZ3MucnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcclxuXHRcdH0gZWxzZSBpZiAodGhpcy5kcmFnLmRpc3RhbmNlID4gMCkge1xyXG5cdFx0XHR0aGlzLnN0YXRlLmRpcmVjdGlvbiA9IHRoaXMuc2V0dGluZ3MucnRsID8gJ2xlZnQnIDogJ3JpZ2h0JztcclxuXHRcdH1cclxuXHRcdC8vIExvb3BcclxuXHRcdGlmICh0aGlzLnNldHRpbmdzLmxvb3ApIHtcclxuXHRcdFx0aWYgKHRoaXMub3AodGhpcy5kcmFnLmN1cnJlbnRYLCAnPicsIHRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpKSAmJiB0aGlzLnN0YXRlLmRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xyXG5cdFx0XHRcdHRoaXMuZHJhZy5jdXJyZW50WCAtPSAodGhpcy5zZXR0aW5ncy5jZW50ZXIgJiYgdGhpcy5jb29yZGluYXRlcygwKSkgLSB0aGlzLmNvb3JkaW5hdGVzKHRoaXMuX2l0ZW1zLmxlbmd0aCk7XHJcblx0XHRcdH0gZWxzZSBpZiAodGhpcy5vcCh0aGlzLmRyYWcuY3VycmVudFgsICc8JywgdGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSkpICYmIHRoaXMuc3RhdGUuZGlyZWN0aW9uID09PSAnbGVmdCcpIHtcclxuXHRcdFx0XHR0aGlzLmRyYWcuY3VycmVudFggKz0gKHRoaXMuc2V0dGluZ3MuY2VudGVyICYmIHRoaXMuY29vcmRpbmF0ZXMoMCkpIC0gdGhpcy5jb29yZGluYXRlcyh0aGlzLl9pdGVtcy5sZW5ndGgpO1xyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvLyBwdWxsXHJcblx0XHRcdG1pblZhbHVlID0gdGhpcy5zZXR0aW5ncy5ydGwgPyB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWF4aW11bSgpKSA6IHRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpO1xyXG5cdFx0XHRtYXhWYWx1ZSA9IHRoaXMuc2V0dGluZ3MucnRsID8gdGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSkgOiB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWF4aW11bSgpKTtcclxuXHRcdFx0cHVsbCA9IHRoaXMuc2V0dGluZ3MucHVsbERyYWcgPyB0aGlzLmRyYWcuZGlzdGFuY2UgLyA1IDogMDtcclxuXHRcdFx0dGhpcy5kcmFnLmN1cnJlbnRYID0gTWF0aC5tYXgoTWF0aC5taW4odGhpcy5kcmFnLmN1cnJlbnRYLCBtaW5WYWx1ZSArIHB1bGwpLCBtYXhWYWx1ZSArIHB1bGwpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIExvY2sgYnJvd3NlciBpZiBzd2lwaW5nIGhvcml6b250YWxcclxuXHJcblx0XHRpZiAoKHRoaXMuZHJhZy5kaXN0YW5jZSA+IDggfHwgdGhpcy5kcmFnLmRpc3RhbmNlIDwgLTgpKSB7XHJcblx0XHRcdGlmIChldi5wcmV2ZW50RGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0ZXYucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRldi5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMuc3RhdGUuaXNTd2lwaW5nID0gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLmRyYWcudXBkYXRlZFggPSB0aGlzLmRyYWcuY3VycmVudFg7XHJcblxyXG5cdFx0Ly8gTG9jayBPd2wgaWYgc2Nyb2xsaW5nXHJcblx0XHRpZiAoKHRoaXMuZHJhZy5jdXJyZW50WSA+IDE2IHx8IHRoaXMuZHJhZy5jdXJyZW50WSA8IC0xNikgJiYgdGhpcy5zdGF0ZS5pc1N3aXBpbmcgPT09IGZhbHNlKSB7XHJcblx0XHRcdHRoaXMuc3RhdGUuaXNTY3JvbGxpbmcgPSB0cnVlO1xyXG5cdFx0XHR0aGlzLmRyYWcudXBkYXRlZFggPSB0aGlzLmRyYWcuc3RhcnQ7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5hbmltYXRlKHRoaXMuZHJhZy51cGRhdGVkWCk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogSGFuZGxlcyB0aGUgdG91Y2hlbmQvbW91c2V1cCBldmVudHMuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUub25EcmFnRW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdHZhciBjb21wYXJlVGltZXMsIGRpc3RhbmNlQWJzLCBjbG9zZXN0O1xyXG5cclxuXHRcdGlmICghdGhpcy5zdGF0ZS5pc1RvdWNoKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoZXZlbnQudHlwZSA9PT0gJ21vdXNldXAnKSB7XHJcblx0XHRcdHRoaXMuJHN0YWdlLnJlbW92ZUNsYXNzKCdvd2wtZ3JhYicpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMudHJpZ2dlcignZHJhZ2dlZCcpO1xyXG5cclxuXHRcdC8vIHByZXZlbnQgbGlua3MgYW5kIGltYWdlcyBkcmFnZ2luZztcclxuXHRcdHRoaXMuZHJhZy50YXJnZXRFbC5yZW1vdmVBdHRyaWJ1dGUoXCJkcmFnZ2FibGVcIik7XHJcblxyXG5cdFx0Ly8gcmVtb3ZlIGRyYWcgZXZlbnQgbGlzdGVuZXJzXHJcblxyXG5cdFx0dGhpcy5zdGF0ZS5pc1RvdWNoID0gZmFsc2U7XHJcblx0XHR0aGlzLnN0YXRlLmlzU2Nyb2xsaW5nID0gZmFsc2U7XHJcblx0XHR0aGlzLnN0YXRlLmlzU3dpcGluZyA9IGZhbHNlO1xyXG5cclxuXHRcdC8vIHRvIGNoZWNrXHJcblx0XHRpZiAodGhpcy5kcmFnLmRpc3RhbmNlID09PSAwICYmIHRoaXMuc3RhdGUuaW5Nb3Rpb24gIT09IHRydWUpIHtcclxuXHRcdFx0dGhpcy5zdGF0ZS5pbk1vdGlvbiA9IGZhbHNlO1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gcHJldmVudCBjbGlja3Mgd2hpbGUgc2Nyb2xsaW5nXHJcblxyXG5cdFx0dGhpcy5kcmFnLmVuZFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuXHRcdGNvbXBhcmVUaW1lcyA9IHRoaXMuZHJhZy5lbmRUaW1lIC0gdGhpcy5kcmFnLnN0YXJ0VGltZTtcclxuXHRcdGRpc3RhbmNlQWJzID0gTWF0aC5hYnModGhpcy5kcmFnLmRpc3RhbmNlKTtcclxuXHJcblx0XHQvLyB0byB0ZXN0XHJcblx0XHRpZiAoZGlzdGFuY2VBYnMgPiAzIHx8IGNvbXBhcmVUaW1lcyA+IDMwMCkge1xyXG5cdFx0XHR0aGlzLnJlbW92ZUNsaWNrKHRoaXMuZHJhZy50YXJnZXRFbCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Y2xvc2VzdCA9IHRoaXMuY2xvc2VzdCh0aGlzLmRyYWcudXBkYXRlZFgpO1xyXG5cclxuXHRcdHRoaXMuc3BlZWQodGhpcy5zZXR0aW5ncy5kcmFnRW5kU3BlZWQgfHwgdGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKTtcclxuXHRcdHRoaXMuY3VycmVudChjbG9zZXN0KTtcclxuXHRcdHRoaXMuaW52YWxpZGF0ZSgncG9zaXRpb24nKTtcclxuXHRcdHRoaXMudXBkYXRlKCk7XHJcblxyXG5cdFx0Ly8gaWYgcHVsbERyYWcgaXMgb2ZmIHRoZW4gZmlyZSB0cmFuc2l0aW9uRW5kIGV2ZW50IG1hbnVhbGx5IHdoZW4gc3RpY2tcclxuXHRcdC8vIHRvIGJvcmRlclxyXG5cdFx0aWYgKCF0aGlzLnNldHRpbmdzLnB1bGxEcmFnICYmIHRoaXMuZHJhZy51cGRhdGVkWCA9PT0gdGhpcy5jb29yZGluYXRlcyhjbG9zZXN0KSkge1xyXG5cdFx0XHR0aGlzLnRyYW5zaXRpb25FbmQoKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLmRyYWcuZGlzdGFuY2UgPSAwO1xyXG5cclxuXHRcdCQoZG9jdW1lbnQpLm9mZignLm93bC5kcmFnRXZlbnRzJyk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQXR0YWNoZXMgYHByZXZlbnRDbGlja2AgdG8gZGlzYWJsZSBsaW5rIHdoaWxlIHN3aXBwaW5nLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBbdGFyZ2V0XSAtIFRoZSB0YXJnZXQgb2YgdGhlIGBjbGlja2AgZXZlbnQuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5yZW1vdmVDbGljayA9IGZ1bmN0aW9uKHRhcmdldCkge1xyXG5cdFx0dGhpcy5kcmFnLnRhcmdldEVsID0gdGFyZ2V0O1xyXG5cdFx0JCh0YXJnZXQpLm9uKCdjbGljay5wcmV2ZW50Q2xpY2snLCB0aGlzLmUuX3ByZXZlbnRDbGljayk7XHJcblx0XHQvLyB0byBtYWtlIHN1cmUgY2xpY2sgaXMgcmVtb3ZlZDpcclxuXHRcdHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHQkKHRhcmdldCkub2ZmKCdjbGljay5wcmV2ZW50Q2xpY2snKTtcclxuXHRcdH0sIDMwMCk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogU3VwcHJlc3NlcyBjbGljayBldmVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtFdmVudH0gZXYgLSBUaGUgZXZlbnQgYXJndW1lbnRzLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUucHJldmVudENsaWNrID0gZnVuY3Rpb24oZXYpIHtcclxuXHRcdGlmIChldi5wcmV2ZW50RGVmYXVsdCkge1xyXG5cdFx0XHRldi5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0ZXYucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHRcdGlmIChldi5zdG9wUHJvcGFnYXRpb24pIHtcclxuXHRcdFx0ZXYuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHR9XHJcblx0XHQkKGV2LnRhcmdldCkub2ZmKCdjbGljay5wcmV2ZW50Q2xpY2snKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDYXRjaGVzIHN0YWdlIHBvc2l0aW9uIHdoaWxlIGFuaW1hdGUgKG9ubHkgQ1NTMykuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEByZXR1cm5zXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5nZXRUcmFuc2Zvcm1Qcm9wZXJ0eSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIHRyYW5zZm9ybSwgbWF0cml4M2Q7XHJcblxyXG5cdFx0dHJhbnNmb3JtID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy4kc3RhZ2UuZ2V0KDApLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHRoaXMudmVuZG9yTmFtZSArICd0cmFuc2Zvcm0nKTtcclxuXHRcdC8vIHZhciB0cmFuc2Zvcm0gPSB0aGlzLiRzdGFnZS5jc3ModGhpcy52ZW5kb3JOYW1lICsgJ3RyYW5zZm9ybScpXHJcblx0XHR0cmFuc2Zvcm0gPSB0cmFuc2Zvcm0ucmVwbGFjZSgvbWF0cml4KDNkKT9cXCh8XFwpL2csICcnKS5zcGxpdCgnLCcpO1xyXG5cdFx0bWF0cml4M2QgPSB0cmFuc2Zvcm0ubGVuZ3RoID09PSAxNjtcclxuXHJcblx0XHRyZXR1cm4gbWF0cml4M2QgIT09IHRydWUgPyB0cmFuc2Zvcm1bNF0gOiB0cmFuc2Zvcm1bMTJdO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEdldHMgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGNsb3Nlc3QgaXRlbSBmb3IgYSBjb29yZGluYXRlLlxyXG5cdCAqIEB0b2RvIFNldHRpbmcgYGZyZWVEcmFnYCBtYWtlcyBgY2xvc2VzdGAgbm90IHJldXNhYmxlLiBTZWUgIzE2NS5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IGNvb3JkaW5hdGUgLSBUaGUgY29vcmRpbmF0ZSBpbiBwaXhlbC5cclxuXHQgKiBAcmV0dXJuIHtOdW1iZXJ9IC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjbG9zZXN0IGl0ZW0uXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5jbG9zZXN0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZSkge1xyXG5cdFx0dmFyIHBvc2l0aW9uID0gLTEsIHB1bGwgPSAzMCwgd2lkdGggPSB0aGlzLndpZHRoKCksIGNvb3JkaW5hdGVzID0gdGhpcy5jb29yZGluYXRlcygpO1xyXG5cclxuXHRcdGlmICghdGhpcy5zZXR0aW5ncy5mcmVlRHJhZykge1xyXG5cdFx0XHQvLyBjaGVjayBjbG9zZXN0IGl0ZW1cclxuXHRcdFx0JC5lYWNoKGNvb3JkaW5hdGVzLCAkLnByb3h5KGZ1bmN0aW9uKGluZGV4LCB2YWx1ZSkge1xyXG5cdFx0XHRcdGlmIChjb29yZGluYXRlID4gdmFsdWUgLSBwdWxsICYmIGNvb3JkaW5hdGUgPCB2YWx1ZSArIHB1bGwpIHtcclxuXHRcdFx0XHRcdHBvc2l0aW9uID0gaW5kZXg7XHJcblx0XHRcdFx0fSBlbHNlIGlmICh0aGlzLm9wKGNvb3JkaW5hdGUsICc8JywgdmFsdWUpXHJcblx0XHRcdFx0XHQmJiB0aGlzLm9wKGNvb3JkaW5hdGUsICc+JywgY29vcmRpbmF0ZXNbaW5kZXggKyAxXSB8fCB2YWx1ZSAtIHdpZHRoKSkge1xyXG5cdFx0XHRcdFx0cG9zaXRpb24gPSB0aGlzLnN0YXRlLmRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gaW5kZXggKyAxIDogaW5kZXg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiBwb3NpdGlvbiA9PT0gLTE7XHJcblx0XHRcdH0sIHRoaXMpKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIXRoaXMuc2V0dGluZ3MubG9vcCkge1xyXG5cdFx0XHQvLyBub24gbG9vcCBib3VuZHJpZXNcclxuXHRcdFx0aWYgKHRoaXMub3AoY29vcmRpbmF0ZSwgJz4nLCBjb29yZGluYXRlc1t0aGlzLm1pbmltdW0oKV0pKSB7XHJcblx0XHRcdFx0cG9zaXRpb24gPSBjb29yZGluYXRlID0gdGhpcy5taW5pbXVtKCk7XHJcblx0XHRcdH0gZWxzZSBpZiAodGhpcy5vcChjb29yZGluYXRlLCAnPCcsIGNvb3JkaW5hdGVzW3RoaXMubWF4aW11bSgpXSkpIHtcclxuXHRcdFx0XHRwb3NpdGlvbiA9IGNvb3JkaW5hdGUgPSB0aGlzLm1heGltdW0oKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBwb3NpdGlvbjtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBBbmltYXRlcyB0aGUgc3RhZ2UuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBjb29yZGluYXRlIC0gVGhlIGNvb3JkaW5hdGUgaW4gcGl4ZWxzLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuYW5pbWF0ZSA9IGZ1bmN0aW9uKGNvb3JkaW5hdGUpIHtcclxuXHRcdHRoaXMudHJpZ2dlcigndHJhbnNsYXRlJyk7XHJcblx0XHR0aGlzLnN0YXRlLmluTW90aW9uID0gdGhpcy5zcGVlZCgpID4gMDtcclxuXHJcblx0XHRpZiAodGhpcy5zdXBwb3J0M2QpIHtcclxuXHRcdFx0dGhpcy4kc3RhZ2UuY3NzKHtcclxuXHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgnICsgY29vcmRpbmF0ZSArICdweCcgKyAnLDBweCwgMHB4KScsXHJcblx0XHRcdFx0dHJhbnNpdGlvbjogKHRoaXMuc3BlZWQoKSAvIDEwMDApICsgJ3MnXHJcblx0XHRcdH0pO1xyXG5cdFx0fSBlbHNlIGlmICh0aGlzLnN0YXRlLmlzVG91Y2gpIHtcclxuXHRcdFx0dGhpcy4kc3RhZ2UuY3NzKHtcclxuXHRcdFx0XHRsZWZ0OiBjb29yZGluYXRlICsgJ3B4J1xyXG5cdFx0XHR9KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHRoaXMuJHN0YWdlLmFuaW1hdGUoe1xyXG5cdFx0XHRcdGxlZnQ6IGNvb3JkaW5hdGVcclxuXHRcdFx0fSwgdGhpcy5zcGVlZCgpIC8gMTAwMCwgdGhpcy5zZXR0aW5ncy5mYWxsYmFja0Vhc2luZywgJC5wcm94eShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5zdGF0ZS5pbk1vdGlvbikge1xyXG5cdFx0XHRcdFx0dGhpcy50cmFuc2l0aW9uRW5kKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKSk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogU2V0cyB0aGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGN1cnJlbnQgaXRlbS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtwb3NpdGlvbl0gLSBUaGUgbmV3IGFic29sdXRlIHBvc2l0aW9uIG9yIG5vdGhpbmcgdG8gbGVhdmUgaXQgdW5jaGFuZ2VkLlxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBjdXJyZW50IGl0ZW0uXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5jdXJyZW50ID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLl9jdXJyZW50O1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0aGlzLl9pdGVtcy5sZW5ndGggPT09IDApIHtcclxuXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHJcblx0XHRwb3NpdGlvbiA9IHRoaXMubm9ybWFsaXplKHBvc2l0aW9uKTtcclxuXHJcblx0XHRpZiAodGhpcy5fY3VycmVudCAhPT0gcG9zaXRpb24pIHtcclxuXHRcdFx0dmFyIGV2ZW50ID0gdGhpcy50cmlnZ2VyKCdjaGFuZ2UnLCB7IHByb3BlcnR5OiB7IG5hbWU6ICdwb3NpdGlvbicsIHZhbHVlOiBwb3NpdGlvbiB9IH0pO1xyXG5cclxuXHRcdFx0aWYgKGV2ZW50LmRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUoZXZlbnQuZGF0YSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHRoaXMuX2N1cnJlbnQgPSBwb3NpdGlvbjtcclxuXHJcblx0XHRcdHRoaXMuaW52YWxpZGF0ZSgncG9zaXRpb24nKTtcclxuXHJcblx0XHRcdHRoaXMudHJpZ2dlcignY2hhbmdlZCcsIHsgcHJvcGVydHk6IHsgbmFtZTogJ3Bvc2l0aW9uJywgdmFsdWU6IHRoaXMuX2N1cnJlbnQgfSB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5fY3VycmVudDtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBJbnZhbGlkYXRlcyB0aGUgZ2l2ZW4gcGFydCBvZiB0aGUgdXBkYXRlIHJvdXRpbmUuXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IHBhcnQgLSBUaGUgcGFydCB0byBpbnZhbGlkYXRlLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuaW52YWxpZGF0ZSA9IGZ1bmN0aW9uKHBhcnQpIHtcclxuXHRcdHRoaXMuX2ludmFsaWRhdGVkW3BhcnRdID0gdHJ1ZTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFJlc2V0cyB0aGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGN1cnJlbnQgaXRlbS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSBuZXcgaXRlbS5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24pO1xyXG5cclxuXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLl9zcGVlZCA9IDA7XHJcblx0XHR0aGlzLl9jdXJyZW50ID0gcG9zaXRpb247XHJcblxyXG5cdFx0dGhpcy5zdXBwcmVzcyhbICd0cmFuc2xhdGUnLCAndHJhbnNsYXRlZCcgXSk7XHJcblxyXG5cdFx0dGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXMocG9zaXRpb24pKTtcclxuXHJcblx0XHR0aGlzLnJlbGVhc2UoWyAndHJhbnNsYXRlJywgJ3RyYW5zbGF0ZWQnIF0pO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIE5vcm1hbGl6ZXMgYW4gYWJzb2x1dGUgb3IgYSByZWxhdGl2ZSBwb3NpdGlvbiBmb3IgYW4gaXRlbS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIGFic29sdXRlIG9yIHJlbGF0aXZlIHBvc2l0aW9uIHRvIG5vcm1hbGl6ZS5cclxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFtyZWxhdGl2ZT1mYWxzZV0gLSBXaGV0aGVyIHRoZSBnaXZlbiBwb3NpdGlvbiBpcyByZWxhdGl2ZSBvciBub3QuXHJcblx0ICogQHJldHVybnMge051bWJlcn0gLSBUaGUgbm9ybWFsaXplZCBwb3NpdGlvbi5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKHBvc2l0aW9uLCByZWxhdGl2ZSkge1xyXG5cdFx0dmFyIG4gPSAocmVsYXRpdmUgPyB0aGlzLl9pdGVtcy5sZW5ndGggOiB0aGlzLl9pdGVtcy5sZW5ndGggKyB0aGlzLl9jbG9uZXMubGVuZ3RoKTtcclxuXHJcblx0XHRpZiAoISQuaXNOdW1lcmljKHBvc2l0aW9uKSB8fCBuIDwgMSkge1xyXG5cdFx0XHRyZXR1cm4gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0aGlzLl9jbG9uZXMubGVuZ3RoKSB7XHJcblx0XHRcdHBvc2l0aW9uID0gKChwb3NpdGlvbiAlIG4pICsgbikgJSBuO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cG9zaXRpb24gPSBNYXRoLm1heCh0aGlzLm1pbmltdW0ocmVsYXRpdmUpLCBNYXRoLm1pbih0aGlzLm1heGltdW0ocmVsYXRpdmUpLCBwb3NpdGlvbikpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBwb3NpdGlvbjtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDb252ZXJ0cyBhbiBhYnNvbHV0ZSBwb3NpdGlvbiBmb3IgYW4gaXRlbSBpbnRvIGEgcmVsYXRpdmUgcG9zaXRpb24uXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBwb3NpdGlvbiAtIFRoZSBhYnNvbHV0ZSBwb3NpdGlvbiB0byBjb252ZXJ0LlxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9IC0gVGhlIGNvbnZlcnRlZCBwb3NpdGlvbi5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLnJlbGF0aXZlID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24pO1xyXG5cdFx0cG9zaXRpb24gPSBwb3NpdGlvbiAtIHRoaXMuX2Nsb25lcy5sZW5ndGggLyAyO1xyXG5cdFx0cmV0dXJuIHRoaXMubm9ybWFsaXplKHBvc2l0aW9uLCB0cnVlKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIHRoZSBtYXhpbXVtIHBvc2l0aW9uIGZvciBhbiBpdGVtLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFtyZWxhdGl2ZT1mYWxzZV0gLSBXaGV0aGVyIHRvIHJldHVybiBhbiBhYnNvbHV0ZSBwb3NpdGlvbiBvciBhIHJlbGF0aXZlIHBvc2l0aW9uLlxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9XHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5tYXhpbXVtID0gZnVuY3Rpb24ocmVsYXRpdmUpIHtcclxuXHRcdHZhciBtYXhpbXVtLCB3aWR0aCwgaSA9IDAsIGNvb3JkaW5hdGUsXHJcblx0XHRcdHNldHRpbmdzID0gdGhpcy5zZXR0aW5ncztcclxuXHJcblx0XHRpZiAocmVsYXRpdmUpIHtcclxuXHRcdFx0cmV0dXJuIHRoaXMuX2l0ZW1zLmxlbmd0aCAtIDE7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCFzZXR0aW5ncy5sb29wICYmIHNldHRpbmdzLmNlbnRlcikge1xyXG5cdFx0XHRtYXhpbXVtID0gdGhpcy5faXRlbXMubGVuZ3RoIC0gMTtcclxuXHRcdH0gZWxzZSBpZiAoIXNldHRpbmdzLmxvb3AgJiYgIXNldHRpbmdzLmNlbnRlcikge1xyXG5cdFx0XHRtYXhpbXVtID0gdGhpcy5faXRlbXMubGVuZ3RoIC0gc2V0dGluZ3MuaXRlbXM7XHJcblx0XHR9IGVsc2UgaWYgKHNldHRpbmdzLmxvb3AgfHwgc2V0dGluZ3MuY2VudGVyKSB7XHJcblx0XHRcdG1heGltdW0gPSB0aGlzLl9pdGVtcy5sZW5ndGggKyBzZXR0aW5ncy5pdGVtcztcclxuXHRcdH0gZWxzZSBpZiAoc2V0dGluZ3MuYXV0b1dpZHRoIHx8IHNldHRpbmdzLm1lcmdlKSB7XHJcblx0XHRcdHJldmVydCA9IHNldHRpbmdzLnJ0bCA/IDEgOiAtMTtcclxuXHRcdFx0d2lkdGggPSB0aGlzLiRzdGFnZS53aWR0aCgpIC0gdGhpcy4kZWxlbWVudC53aWR0aCgpO1xyXG5cdFx0XHR3aGlsZSAoY29vcmRpbmF0ZSA9IHRoaXMuY29vcmRpbmF0ZXMoaSkpIHtcclxuXHRcdFx0XHRpZiAoY29vcmRpbmF0ZSAqIHJldmVydCA+PSB3aWR0aCkge1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdG1heGltdW0gPSArK2k7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHRocm93ICdDYW4gbm90IGRldGVjdCBtYXhpbXVtIGFic29sdXRlIHBvc2l0aW9uLidcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbWF4aW11bTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIHRoZSBtaW5pbXVtIHBvc2l0aW9uIGZvciBhbiBpdGVtLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFtyZWxhdGl2ZT1mYWxzZV0gLSBXaGV0aGVyIHRvIHJldHVybiBhbiBhYnNvbHV0ZSBwb3NpdGlvbiBvciBhIHJlbGF0aXZlIHBvc2l0aW9uLlxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9XHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5taW5pbXVtID0gZnVuY3Rpb24ocmVsYXRpdmUpIHtcclxuXHRcdGlmIChyZWxhdGl2ZSkge1xyXG5cdFx0XHRyZXR1cm4gMDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5fY2xvbmVzLmxlbmd0aCAvIDI7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogR2V0cyBhbiBpdGVtIGF0IHRoZSBzcGVjaWZpZWQgcmVsYXRpdmUgcG9zaXRpb24uXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRoZSBpdGVtLlxyXG5cdCAqIEByZXR1cm4ge2pRdWVyeXxBcnJheS48alF1ZXJ5Pn0gLSBUaGUgaXRlbSBhdCB0aGUgZ2l2ZW4gcG9zaXRpb24gb3IgYWxsIGl0ZW1zIGlmIG5vIHBvc2l0aW9uIHdhcyBnaXZlbi5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLml0ZW1zID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLl9pdGVtcy5zbGljZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24sIHRydWUpO1xyXG5cdFx0cmV0dXJuIHRoaXMuX2l0ZW1zW3Bvc2l0aW9uXTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIGFuIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCByZWxhdGl2ZSBwb3NpdGlvbi5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtwb3NpdGlvbl0gLSBUaGUgcmVsYXRpdmUgcG9zaXRpb24gb2YgdGhlIGl0ZW0uXHJcblx0ICogQHJldHVybiB7alF1ZXJ5fEFycmF5LjxqUXVlcnk+fSAtIFRoZSBpdGVtIGF0IHRoZSBnaXZlbiBwb3NpdGlvbiBvciBhbGwgaXRlbXMgaWYgbm8gcG9zaXRpb24gd2FzIGdpdmVuLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUubWVyZ2VycyA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XHJcblx0XHRpZiAocG9zaXRpb24gPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5fbWVyZ2Vycy5zbGljZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24sIHRydWUpO1xyXG5cdFx0cmV0dXJuIHRoaXMuX21lcmdlcnNbcG9zaXRpb25dO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEdldHMgdGhlIGFic29sdXRlIHBvc2l0aW9ucyBvZiBjbG9uZXMgZm9yIGFuIGl0ZW0uXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRoZSBpdGVtLlxyXG5cdCAqIEByZXR1cm5zIHtBcnJheS48TnVtYmVyPn0gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb25zIG9mIGNsb25lcyBmb3IgdGhlIGl0ZW0gb3IgYWxsIGlmIG5vIHBvc2l0aW9uIHdhcyBnaXZlbi5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLmNsb25lcyA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XHJcblx0XHR2YXIgb2RkID0gdGhpcy5fY2xvbmVzLmxlbmd0aCAvIDIsXHJcblx0XHRcdGV2ZW4gPSBvZGQgKyB0aGlzLl9pdGVtcy5sZW5ndGgsXHJcblx0XHRcdG1hcCA9IGZ1bmN0aW9uKGluZGV4KSB7IHJldHVybiBpbmRleCAlIDIgPT09IDAgPyBldmVuICsgaW5kZXggLyAyIDogb2RkIC0gKGluZGV4ICsgMSkgLyAyIH07XHJcblxyXG5cdFx0aWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0cmV0dXJuICQubWFwKHRoaXMuX2Nsb25lcywgZnVuY3Rpb24odiwgaSkgeyByZXR1cm4gbWFwKGkpIH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiAkLm1hcCh0aGlzLl9jbG9uZXMsIGZ1bmN0aW9uKHYsIGkpIHsgcmV0dXJuIHYgPT09IHBvc2l0aW9uID8gbWFwKGkpIDogbnVsbCB9KTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTZXRzIHRoZSBjdXJyZW50IGFuaW1hdGlvbiBzcGVlZC5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgYW5pbWF0aW9uIHNwZWVkIGluIG1pbGxpc2Vjb25kcyBvciBub3RoaW5nIHRvIGxlYXZlIGl0IHVuY2hhbmdlZC5cclxuXHQgKiBAcmV0dXJucyB7TnVtYmVyfSAtIFRoZSBjdXJyZW50IGFuaW1hdGlvbiBzcGVlZCBpbiBtaWxsaXNlY29uZHMuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5zcGVlZCA9IGZ1bmN0aW9uKHNwZWVkKSB7XHJcblx0XHRpZiAoc3BlZWQgIT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHR0aGlzLl9zcGVlZCA9IHNwZWVkO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLl9zcGVlZDtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIHRoZSBjb29yZGluYXRlIG9mIGFuIGl0ZW0uXHJcblx0ICogQHRvZG8gVGhlIG5hbWUgb2YgdGhpcyBtZXRob2QgaXMgbWlzc2xlYW5kaW5nLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGl0ZW0gd2l0aGluIGBtaW5pbXVtKClgIGFuZCBgbWF4aW11bSgpYC5cclxuXHQgKiBAcmV0dXJucyB7TnVtYmVyfEFycmF5LjxOdW1iZXI+fSAtIFRoZSBjb29yZGluYXRlIG9mIHRoZSBpdGVtIGluIHBpeGVsIG9yIGFsbCBjb29yZGluYXRlcy5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLmNvb3JkaW5hdGVzID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdHZhciBjb29yZGluYXRlID0gbnVsbDtcclxuXHJcblx0XHRpZiAocG9zaXRpb24gPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRyZXR1cm4gJC5tYXAodGhpcy5fY29vcmRpbmF0ZXMsICQucHJveHkoZnVuY3Rpb24oY29vcmRpbmF0ZSwgaW5kZXgpIHtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5jb29yZGluYXRlcyhpbmRleCk7XHJcblx0XHRcdH0sIHRoaXMpKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5zZXR0aW5ncy5jZW50ZXIpIHtcclxuXHRcdFx0Y29vcmRpbmF0ZSA9IHRoaXMuX2Nvb3JkaW5hdGVzW3Bvc2l0aW9uXTtcclxuXHRcdFx0Y29vcmRpbmF0ZSArPSAodGhpcy53aWR0aCgpIC0gY29vcmRpbmF0ZSArICh0aGlzLl9jb29yZGluYXRlc1twb3NpdGlvbiAtIDFdIHx8IDApKSAvIDIgKiAodGhpcy5zZXR0aW5ncy5ydGwgPyAtMSA6IDEpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Y29vcmRpbmF0ZSA9IHRoaXMuX2Nvb3JkaW5hdGVzW3Bvc2l0aW9uIC0gMV0gfHwgMDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gY29vcmRpbmF0ZTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBDYWxjdWxhdGVzIHRoZSBzcGVlZCBmb3IgYSB0cmFuc2xhdGlvbi5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IGZyb20gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIHN0YXJ0IGl0ZW0uXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IHRvIC0gVGhlIGFic29sdXRlIHBvc2l0aW9uIG9mIHRoZSB0YXJnZXQgaXRlbS5cclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW2ZhY3Rvcj11bmRlZmluZWRdIC0gVGhlIHRpbWUgZmFjdG9yIGluIG1pbGxpc2Vjb25kcy5cclxuXHQgKiBAcmV0dXJucyB7TnVtYmVyfSAtIFRoZSB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuZHVyYXRpb24gPSBmdW5jdGlvbihmcm9tLCB0bywgZmFjdG9yKSB7XHJcblx0XHRyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5hYnModG8gLSBmcm9tKSwgMSksIDYpICogTWF0aC5hYnMoKGZhY3RvciB8fCB0aGlzLnNldHRpbmdzLnNtYXJ0U3BlZWQpKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTbGlkZXMgdG8gdGhlIHNwZWNpZmllZCBpdGVtLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgcG9zaXRpb24gb2YgdGhlIGl0ZW0uXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUudG8gPSBmdW5jdGlvbihwb3NpdGlvbiwgc3BlZWQpIHtcclxuXHRcdGlmICh0aGlzLnNldHRpbmdzLmxvb3ApIHtcclxuXHRcdFx0dmFyIGRpc3RhbmNlID0gcG9zaXRpb24gLSB0aGlzLnJlbGF0aXZlKHRoaXMuY3VycmVudCgpKSxcclxuXHRcdFx0XHRyZXZlcnQgPSB0aGlzLmN1cnJlbnQoKSxcclxuXHRcdFx0XHRiZWZvcmUgPSB0aGlzLmN1cnJlbnQoKSxcclxuXHRcdFx0XHRhZnRlciA9IHRoaXMuY3VycmVudCgpICsgZGlzdGFuY2UsXHJcblx0XHRcdFx0ZGlyZWN0aW9uID0gYmVmb3JlIC0gYWZ0ZXIgPCAwID8gdHJ1ZSA6IGZhbHNlLFxyXG5cdFx0XHRcdGl0ZW1zID0gdGhpcy5fY2xvbmVzLmxlbmd0aCArIHRoaXMuX2l0ZW1zLmxlbmd0aDtcclxuXHJcblx0XHRcdGlmIChhZnRlciA8IHRoaXMuc2V0dGluZ3MuaXRlbXMgJiYgZGlyZWN0aW9uID09PSBmYWxzZSkge1xyXG5cdFx0XHRcdHJldmVydCA9IGJlZm9yZSArIHRoaXMuX2l0ZW1zLmxlbmd0aDtcclxuXHRcdFx0XHR0aGlzLnJlc2V0KHJldmVydCk7XHJcblx0XHRcdH0gZWxzZSBpZiAoYWZ0ZXIgPj0gaXRlbXMgLSB0aGlzLnNldHRpbmdzLml0ZW1zICYmIGRpcmVjdGlvbiA9PT0gdHJ1ZSkge1xyXG5cdFx0XHRcdHJldmVydCA9IGJlZm9yZSAtIHRoaXMuX2l0ZW1zLmxlbmd0aDtcclxuXHRcdFx0XHR0aGlzLnJlc2V0KHJldmVydCk7XHJcblx0XHRcdH1cclxuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCh0aGlzLmUuX2dvVG9Mb29wKTtcclxuXHRcdFx0dGhpcy5lLl9nb1RvTG9vcCA9IHdpbmRvdy5zZXRUaW1lb3V0KCQucHJveHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dGhpcy5zcGVlZCh0aGlzLmR1cmF0aW9uKHRoaXMuY3VycmVudCgpLCByZXZlcnQgKyBkaXN0YW5jZSwgc3BlZWQpKTtcclxuXHRcdFx0XHR0aGlzLmN1cnJlbnQocmV2ZXJ0ICsgZGlzdGFuY2UpO1xyXG5cdFx0XHRcdHRoaXMudXBkYXRlKCk7XHJcblx0XHRcdH0sIHRoaXMpLCAzMCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLnNwZWVkKHRoaXMuZHVyYXRpb24odGhpcy5jdXJyZW50KCksIHBvc2l0aW9uLCBzcGVlZCkpO1xyXG5cdFx0XHR0aGlzLmN1cnJlbnQocG9zaXRpb24pO1xyXG5cdFx0XHR0aGlzLnVwZGF0ZSgpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNsaWRlcyB0byB0aGUgbmV4dCBpdGVtLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NwZWVkXSAtIFRoZSB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgdGhlIHRyYW5zaXRpb24uXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24oc3BlZWQpIHtcclxuXHRcdHNwZWVkID0gc3BlZWQgfHwgZmFsc2U7XHJcblx0XHR0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpICsgMSwgc3BlZWQpO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNsaWRlcyB0byB0aGUgcHJldmlvdXMgaXRlbS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uKHNwZWVkKSB7XHJcblx0XHRzcGVlZCA9IHNwZWVkIHx8IGZhbHNlO1xyXG5cdFx0dGhpcy50byh0aGlzLnJlbGF0aXZlKHRoaXMuY3VycmVudCgpKSAtIDEsIHNwZWVkKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBIYW5kbGVzIHRoZSBlbmQgb2YgYW4gYW5pbWF0aW9uLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcGFyYW0ge0V2ZW50fSBldmVudCAtIFRoZSBldmVudCBhcmd1bWVudHMuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS50cmFuc2l0aW9uRW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcclxuXHJcblx0XHQvLyBpZiBjc3MyIGFuaW1hdGlvbiB0aGVuIGV2ZW50IG9iamVjdCBpcyB1bmRlZmluZWRcclxuXHRcdGlmIChldmVudCAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuXHRcdFx0Ly8gQ2F0Y2ggb25seSBvd2wtc3RhZ2UgdHJhbnNpdGlvbkVuZCBldmVudFxyXG5cdFx0XHRpZiAoKGV2ZW50LnRhcmdldCB8fCBldmVudC5zcmNFbGVtZW50IHx8IGV2ZW50Lm9yaWdpbmFsVGFyZ2V0KSAhPT0gdGhpcy4kc3RhZ2UuZ2V0KDApKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5zdGF0ZS5pbk1vdGlvbiA9IGZhbHNlO1xyXG5cdFx0dGhpcy50cmlnZ2VyKCd0cmFuc2xhdGVkJyk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogR2V0cyB2aWV3cG9ydCB3aWR0aC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHJldHVybiB7TnVtYmVyfSAtIFRoZSB3aWR0aCBpbiBwaXhlbC5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLnZpZXdwb3J0ID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgd2lkdGg7XHJcblx0XHRpZiAodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVCYXNlRWxlbWVudCAhPT0gd2luZG93KSB7XHJcblx0XHRcdHdpZHRoID0gJCh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50KS53aWR0aCgpO1xyXG5cdFx0fSBlbHNlIGlmICh3aW5kb3cuaW5uZXJXaWR0aCkge1xyXG5cdFx0XHR3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG5cdFx0fSBlbHNlIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKSB7XHJcblx0XHRcdHdpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhyb3cgJ0NhbiBub3QgZGV0ZWN0IHZpZXdwb3J0IHdpZHRoLic7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gd2lkdGg7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogUmVwbGFjZXMgdGhlIGN1cnJlbnQgY29udGVudC5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtIVE1MRWxlbWVudHxqUXVlcnl8U3RyaW5nfSBjb250ZW50IC0gVGhlIG5ldyBjb250ZW50LlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUucmVwbGFjZSA9IGZ1bmN0aW9uKGNvbnRlbnQpIHtcclxuXHRcdHRoaXMuJHN0YWdlLmVtcHR5KCk7XHJcblx0XHR0aGlzLl9pdGVtcyA9IFtdO1xyXG5cclxuXHRcdGlmIChjb250ZW50KSB7XHJcblx0XHRcdGNvbnRlbnQgPSAoY29udGVudCBpbnN0YW5jZW9mIGpRdWVyeSkgPyBjb250ZW50IDogJChjb250ZW50KTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IpIHtcclxuXHRcdFx0Y29udGVudCA9IGNvbnRlbnQuZmluZCgnLicgKyB0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3Rvcik7XHJcblx0XHR9XHJcblxyXG5cdFx0Y29udGVudC5maWx0ZXIoZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLm5vZGVUeXBlID09PSAxO1xyXG5cdFx0fSkuZWFjaCgkLnByb3h5KGZ1bmN0aW9uKGluZGV4LCBpdGVtKSB7XHJcblx0XHRcdGl0ZW0gPSB0aGlzLnByZXBhcmUoaXRlbSk7XHJcblx0XHRcdHRoaXMuJHN0YWdlLmFwcGVuZChpdGVtKTtcclxuXHRcdFx0dGhpcy5faXRlbXMucHVzaChpdGVtKTtcclxuXHRcdFx0dGhpcy5fbWVyZ2Vycy5wdXNoKGl0ZW0uZmluZCgnW2RhdGEtbWVyZ2VdJykuYW5kU2VsZignW2RhdGEtbWVyZ2VdJykuYXR0cignZGF0YS1tZXJnZScpICogMSB8fCAxKTtcclxuXHRcdH0sIHRoaXMpKTtcclxuXHJcblx0XHR0aGlzLnJlc2V0KCQuaXNOdW1lcmljKHRoaXMuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbikgPyB0aGlzLnNldHRpbmdzLnN0YXJ0UG9zaXRpb24gOiAwKTtcclxuXHJcblx0XHR0aGlzLmludmFsaWRhdGUoJ2l0ZW1zJyk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQWRkcyBhbiBpdGVtLlxyXG5cdCAqIEB0b2RvIFVzZSBgaXRlbWAgaW5zdGVhZCBvZiBgY29udGVudGAgZm9yIHRoZSBldmVudCBhcmd1bWVudHMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8alF1ZXJ5fFN0cmluZ30gY29udGVudCAtIFRoZSBpdGVtIGNvbnRlbnQgdG8gYWRkLlxyXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zaXRpb25dIC0gVGhlIHJlbGF0aXZlIHBvc2l0aW9uIGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbSBvdGhlcndpc2UgdGhlIGl0ZW0gd2lsbCBiZSBhZGRlZCB0byB0aGUgZW5kLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24oY29udGVudCwgcG9zaXRpb24pIHtcclxuXHRcdHBvc2l0aW9uID0gcG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IHRoaXMuX2l0ZW1zLmxlbmd0aCA6IHRoaXMubm9ybWFsaXplKHBvc2l0aW9uLCB0cnVlKTtcclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ2FkZCcsIHsgY29udGVudDogY29udGVudCwgcG9zaXRpb246IHBvc2l0aW9uIH0pO1xyXG5cclxuXHRcdGlmICh0aGlzLl9pdGVtcy5sZW5ndGggPT09IDAgfHwgcG9zaXRpb24gPT09IHRoaXMuX2l0ZW1zLmxlbmd0aCkge1xyXG5cdFx0XHR0aGlzLiRzdGFnZS5hcHBlbmQoY29udGVudCk7XHJcblx0XHRcdHRoaXMuX2l0ZW1zLnB1c2goY29udGVudCk7XHJcblx0XHRcdHRoaXMuX21lcmdlcnMucHVzaChjb250ZW50LmZpbmQoJ1tkYXRhLW1lcmdlXScpLmFuZFNlbGYoJ1tkYXRhLW1lcmdlXScpLmF0dHIoJ2RhdGEtbWVyZ2UnKSAqIDEgfHwgMSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLl9pdGVtc1twb3NpdGlvbl0uYmVmb3JlKGNvbnRlbnQpO1xyXG5cdFx0XHR0aGlzLl9pdGVtcy5zcGxpY2UocG9zaXRpb24sIDAsIGNvbnRlbnQpO1xyXG5cdFx0XHR0aGlzLl9tZXJnZXJzLnNwbGljZShwb3NpdGlvbiwgMCwgY29udGVudC5maW5kKCdbZGF0YS1tZXJnZV0nKS5hbmRTZWxmKCdbZGF0YS1tZXJnZV0nKS5hdHRyKCdkYXRhLW1lcmdlJykgKiAxIHx8IDEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuaW52YWxpZGF0ZSgnaXRlbXMnKTtcclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ2FkZGVkJywgeyBjb250ZW50OiBjb250ZW50LCBwb3NpdGlvbjogcG9zaXRpb24gfSk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogUmVtb3ZlcyBhbiBpdGVtIGJ5IGl0cyBwb3NpdGlvbi5cclxuXHQgKiBAdG9kbyBVc2UgYGl0ZW1gIGluc3RlYWQgb2YgYGNvbnRlbnRgIGZvciB0aGUgZXZlbnQgYXJndW1lbnRzLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgcmVsYXRpdmUgcG9zaXRpb24gb2YgdGhlIGl0ZW0gdG8gcmVtb3ZlLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdHBvc2l0aW9uID0gdGhpcy5ub3JtYWxpemUocG9zaXRpb24sIHRydWUpO1xyXG5cclxuXHRcdGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLnRyaWdnZXIoJ3JlbW92ZScsIHsgY29udGVudDogdGhpcy5faXRlbXNbcG9zaXRpb25dLCBwb3NpdGlvbjogcG9zaXRpb24gfSk7XHJcblxyXG5cdFx0dGhpcy5faXRlbXNbcG9zaXRpb25dLnJlbW92ZSgpO1xyXG5cdFx0dGhpcy5faXRlbXMuc3BsaWNlKHBvc2l0aW9uLCAxKTtcclxuXHRcdHRoaXMuX21lcmdlcnMuc3BsaWNlKHBvc2l0aW9uLCAxKTtcclxuXHJcblx0XHR0aGlzLmludmFsaWRhdGUoJ2l0ZW1zJyk7XHJcblxyXG5cdFx0dGhpcy50cmlnZ2VyKCdyZW1vdmVkJywgeyBjb250ZW50OiBudWxsLCBwb3NpdGlvbjogcG9zaXRpb24gfSk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQWRkcyB0cmlnZ2VyYWJsZSBldmVudHMuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUuYWRkVHJpZ2dlcmFibGVFdmVudHMgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBoYW5kbGVyID0gJC5wcm94eShmdW5jdGlvbihjYWxsYmFjaywgZXZlbnQpIHtcclxuXHRcdFx0cmV0dXJuICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmIChlLnJlbGF0ZWRUYXJnZXQgIT09IHRoaXMpIHtcclxuXHRcdFx0XHRcdHRoaXMuc3VwcHJlc3MoWyBldmVudCBdKTtcclxuXHRcdFx0XHRcdGNhbGxiYWNrLmFwcGx5KHRoaXMsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XHJcblx0XHRcdFx0XHR0aGlzLnJlbGVhc2UoWyBldmVudCBdKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpO1xyXG5cdFx0fSwgdGhpcyk7XHJcblxyXG5cdFx0JC5lYWNoKHtcclxuXHRcdFx0J25leHQnOiB0aGlzLm5leHQsXHJcblx0XHRcdCdwcmV2JzogdGhpcy5wcmV2LFxyXG5cdFx0XHQndG8nOiB0aGlzLnRvLFxyXG5cdFx0XHQnZGVzdHJveSc6IHRoaXMuZGVzdHJveSxcclxuXHRcdFx0J3JlZnJlc2gnOiB0aGlzLnJlZnJlc2gsXHJcblx0XHRcdCdyZXBsYWNlJzogdGhpcy5yZXBsYWNlLFxyXG5cdFx0XHQnYWRkJzogdGhpcy5hZGQsXHJcblx0XHRcdCdyZW1vdmUnOiB0aGlzLnJlbW92ZVxyXG5cdFx0fSwgJC5wcm94eShmdW5jdGlvbihldmVudCwgY2FsbGJhY2spIHtcclxuXHRcdFx0dGhpcy4kZWxlbWVudC5vbihldmVudCArICcub3dsLmNhcm91c2VsJywgaGFuZGxlcihjYWxsYmFjaywgZXZlbnQgKyAnLm93bC5jYXJvdXNlbCcpKTtcclxuXHRcdH0sIHRoaXMpKTtcclxuXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogV2F0Y2hlcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgY2Fyb3VzZWwgZWxlbWVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS53YXRjaFZpc2liaWxpdHkgPSBmdW5jdGlvbigpIHtcclxuXHJcblx0XHQvLyB0ZXN0IG9uIHplcHRvXHJcblx0XHRpZiAoIWlzRWxWaXNpYmxlKHRoaXMuJGVsZW1lbnQuZ2V0KDApKSkge1xyXG5cdFx0XHR0aGlzLiRlbGVtZW50LmFkZENsYXNzKCdvd2wtaGlkZGVuJyk7XHJcblx0XHRcdHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuZS5fY2hlY2tWaXNpYmlsZSk7XHJcblx0XHRcdHRoaXMuZS5fY2hlY2tWaXNpYmlsZSA9IHdpbmRvdy5zZXRJbnRlcnZhbCgkLnByb3h5KGNoZWNrVmlzaWJsZSwgdGhpcyksIDUwMCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gaXNFbFZpc2libGUoZWwpIHtcclxuXHRcdFx0cmV0dXJuIGVsLm9mZnNldFdpZHRoID4gMCAmJiBlbC5vZmZzZXRIZWlnaHQgPiAwO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGNoZWNrVmlzaWJsZSgpIHtcclxuXHRcdFx0aWYgKGlzRWxWaXNpYmxlKHRoaXMuJGVsZW1lbnQuZ2V0KDApKSkge1xyXG5cdFx0XHRcdHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ293bC1oaWRkZW4nKTtcclxuXHRcdFx0XHR0aGlzLnJlZnJlc2goKTtcclxuXHRcdFx0XHR3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmUuX2NoZWNrVmlzaWJpbGUpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogUHJlbG9hZHMgaW1hZ2VzIHdpdGggYXV0byB3aWR0aC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHRvZG8gU3RpbGwgdG8gdGVzdFxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUucHJlbG9hZEF1dG9XaWR0aEltYWdlcyA9IGZ1bmN0aW9uKGltZ3MpIHtcclxuXHRcdHZhciBsb2FkZWQsIHRoYXQsICRlbCwgaW1nO1xyXG5cclxuXHRcdGxvYWRlZCA9IDA7XHJcblx0XHR0aGF0ID0gdGhpcztcclxuXHRcdGltZ3MuZWFjaChmdW5jdGlvbihpLCBlbCkge1xyXG5cdFx0XHQkZWwgPSAkKGVsKTtcclxuXHRcdFx0aW1nID0gbmV3IEltYWdlKCk7XHJcblxyXG5cdFx0XHRpbWcub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0bG9hZGVkKys7XHJcblx0XHRcdFx0JGVsLmF0dHIoJ3NyYycsIGltZy5zcmMpO1xyXG5cdFx0XHRcdCRlbC5jc3MoJ29wYWNpdHknLCAxKTtcclxuXHRcdFx0XHRpZiAobG9hZGVkID49IGltZ3MubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHR0aGF0LnN0YXRlLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcblx0XHRcdFx0XHR0aGF0LmluaXRpYWxpemUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRpbWcuc3JjID0gJGVsLmF0dHIoJ3NyYycpIHx8ICRlbC5hdHRyKCdkYXRhLXNyYycpIHx8ICRlbC5hdHRyKCdkYXRhLXNyYy1yZXRpbmEnKTtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIERlc3Ryb3lzIHRoZSBjYXJvdXNlbC5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0aWYgKHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3ModGhpcy5zZXR0aW5ncy50aGVtZUNsYXNzKSkge1xyXG5cdFx0XHR0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MudGhlbWVDbGFzcyk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZSAhPT0gZmFsc2UpIHtcclxuXHRcdFx0JCh3aW5kb3cpLm9mZigncmVzaXplLm93bC5jYXJvdXNlbCcpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh0aGlzLnRyYW5zaXRpb25FbmRWZW5kb3IpIHtcclxuXHRcdFx0dGhpcy5vZmYodGhpcy4kc3RhZ2UuZ2V0KDApLCB0aGlzLnRyYW5zaXRpb25FbmRWZW5kb3IsIHRoaXMuZS5fdHJhbnNpdGlvbkVuZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Zm9yICggdmFyIGkgaW4gdGhpcy5fcGx1Z2lucykge1xyXG5cdFx0XHR0aGlzLl9wbHVnaW5zW2ldLmRlc3Ryb3koKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5zZXR0aW5ncy5tb3VzZURyYWcgfHwgdGhpcy5zZXR0aW5ncy50b3VjaERyYWcpIHtcclxuXHRcdFx0dGhpcy4kc3RhZ2Uub2ZmKCdtb3VzZWRvd24gdG91Y2hzdGFydCB0b3VjaGNhbmNlbCcpO1xyXG5cdFx0XHQkKGRvY3VtZW50KS5vZmYoJy5vd2wuZHJhZ0V2ZW50cycpO1xyXG5cdFx0XHR0aGlzLiRzdGFnZS5nZXQoMCkub25zZWxlY3RzdGFydCA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRcdHRoaXMuJHN0YWdlLm9mZignZHJhZ3N0YXJ0JywgZnVuY3Rpb24oKSB7IHJldHVybiBmYWxzZSB9KTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyByZW1vdmUgZXZlbnQgaGFuZGxlcnMgaW4gdGhlIFwiLm93bC5jYXJvdXNlbFwiIG5hbWVzcGFjZVxyXG5cdFx0dGhpcy4kZWxlbWVudC5vZmYoJy5vd2wnKTtcclxuXHJcblx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbignLmNsb25lZCcpLnJlbW92ZSgpO1xyXG5cdFx0dGhpcy5lID0gbnVsbDtcclxuXHRcdHRoaXMuJGVsZW1lbnQucmVtb3ZlRGF0YSgnb3dsQ2Fyb3VzZWwnKTtcclxuXHJcblx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNvbnRlbnRzKCkudW53cmFwKCk7XHJcblx0XHR0aGlzLiRzdGFnZS5jaGlsZHJlbigpLnVud3JhcCgpO1xyXG5cdFx0dGhpcy4kc3RhZ2UudW53cmFwKCk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogT3BlcmF0b3JzIHRvIGNhbGN1bGF0ZSByaWdodC10by1sZWZ0IGFuZCBsZWZ0LXRvLXJpZ2h0LlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW2FdIC0gVGhlIGxlZnQgc2lkZSBvcGVyYW5kLlxyXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBbb10gLSBUaGUgb3BlcmF0b3IuXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtiXSAtIFRoZSByaWdodCBzaWRlIG9wZXJhbmQuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5vcCA9IGZ1bmN0aW9uKGEsIG8sIGIpIHtcclxuXHRcdHZhciBydGwgPSB0aGlzLnNldHRpbmdzLnJ0bDtcclxuXHRcdHN3aXRjaCAobykge1xyXG5cdFx0XHRjYXNlICc8JzpcclxuXHRcdFx0XHRyZXR1cm4gcnRsID8gYSA+IGIgOiBhIDwgYjtcclxuXHRcdFx0Y2FzZSAnPic6XHJcblx0XHRcdFx0cmV0dXJuIHJ0bCA/IGEgPCBiIDogYSA+IGI7XHJcblx0XHRcdGNhc2UgJz49JzpcclxuXHRcdFx0XHRyZXR1cm4gcnRsID8gYSA8PSBiIDogYSA+PSBiO1xyXG5cdFx0XHRjYXNlICc8PSc6XHJcblx0XHRcdFx0cmV0dXJuIHJ0bCA/IGEgPj0gYiA6IGEgPD0gYjtcclxuXHRcdFx0ZGVmYXVsdDpcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBBdHRhY2hlcyB0byBhbiBpbnRlcm5hbCBldmVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCAtIFRoZSBldmVudCBzb3VyY2UuXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50IC0gVGhlIGV2ZW50IG5hbWUuXHJcblx0ICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgLSBUaGUgZXZlbnQgaGFuZGxlciB0byBhdHRhY2guXHJcblx0ICogQHBhcmFtIHtCb29sZWFufSBjYXB0dXJlIC0gV2V0aGVyIHRoZSBldmVudCBzaG91bGQgYmUgaGFuZGxlZCBhdCB0aGUgY2FwdHVyaW5nIHBoYXNlIG9yIG5vdC5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLm9uID0gZnVuY3Rpb24oZWxlbWVudCwgZXZlbnQsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XHJcblx0XHRpZiAoZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKSB7XHJcblx0XHRcdGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGNhcHR1cmUpO1xyXG5cdFx0fSBlbHNlIGlmIChlbGVtZW50LmF0dGFjaEV2ZW50KSB7XHJcblx0XHRcdGVsZW1lbnQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogRGV0YWNoZXMgZnJvbSBhbiBpbnRlcm5hbCBldmVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCAtIFRoZSBldmVudCBzb3VyY2UuXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50IC0gVGhlIGV2ZW50IG5hbWUuXHJcblx0ICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgLSBUaGUgYXR0YWNoZWQgZXZlbnQgaGFuZGxlciB0byBkZXRhY2guXHJcblx0ICogQHBhcmFtIHtCb29sZWFufSBjYXB0dXJlIC0gV2V0aGVyIHRoZSBhdHRhY2hlZCBldmVudCBoYW5kbGVyIHdhcyByZWdpc3RlcmVkIGFzIGEgY2FwdHVyaW5nIGxpc3RlbmVyIG9yIG5vdC5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uKGVsZW1lbnQsIGV2ZW50LCBsaXN0ZW5lciwgY2FwdHVyZSkge1xyXG5cdFx0aWYgKGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xyXG5cdFx0XHRlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBjYXB0dXJlKTtcclxuXHRcdH0gZWxzZSBpZiAoZWxlbWVudC5kZXRhY2hFdmVudCkge1xyXG5cdFx0XHRlbGVtZW50LmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRyaWdnZXJzIGFuIHB1YmxpYyBldmVudC5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgLSBUaGUgZXZlbnQgbmFtZS5cclxuXHQgKiBAcGFyYW0geyp9IFtkYXRhPW51bGxdIC0gVGhlIGV2ZW50IGRhdGEuXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IFtuYW1lc3BhY2U9Lm93bC5jYXJvdXNlbF0gLSBUaGUgZXZlbnQgbmFtZXNwYWNlLlxyXG5cdCAqIEByZXR1cm5zIHtFdmVudH0gLSBUaGUgZXZlbnQgYXJndW1lbnRzLlxyXG5cdCAqL1xyXG5cdE93bC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKG5hbWUsIGRhdGEsIG5hbWVzcGFjZSkge1xyXG5cdFx0dmFyIHN0YXR1cyA9IHtcclxuXHRcdFx0aXRlbTogeyBjb3VudDogdGhpcy5faXRlbXMubGVuZ3RoLCBpbmRleDogdGhpcy5jdXJyZW50KCkgfVxyXG5cdFx0fSwgaGFuZGxlciA9ICQuY2FtZWxDYXNlKFxyXG5cdFx0XHQkLmdyZXAoWyAnb24nLCBuYW1lLCBuYW1lc3BhY2UgXSwgZnVuY3Rpb24odikgeyByZXR1cm4gdiB9KVxyXG5cdFx0XHRcdC5qb2luKCctJykudG9Mb3dlckNhc2UoKVxyXG5cdFx0KSwgZXZlbnQgPSAkLkV2ZW50KFxyXG5cdFx0XHRbIG5hbWUsICdvd2wnLCBuYW1lc3BhY2UgfHwgJ2Nhcm91c2VsJyBdLmpvaW4oJy4nKS50b0xvd2VyQ2FzZSgpLFxyXG5cdFx0XHQkLmV4dGVuZCh7IHJlbGF0ZWRUYXJnZXQ6IHRoaXMgfSwgc3RhdHVzLCBkYXRhKVxyXG5cdFx0KTtcclxuXHJcblx0XHRpZiAoIXRoaXMuX3N1cHJlc3NbbmFtZV0pIHtcclxuXHRcdFx0JC5lYWNoKHRoaXMuX3BsdWdpbnMsIGZ1bmN0aW9uKG5hbWUsIHBsdWdpbikge1xyXG5cdFx0XHRcdGlmIChwbHVnaW4ub25UcmlnZ2VyKSB7XHJcblx0XHRcdFx0XHRwbHVnaW4ub25UcmlnZ2VyKGV2ZW50KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0dGhpcy4kZWxlbWVudC50cmlnZ2VyKGV2ZW50KTtcclxuXHJcblx0XHRcdGlmICh0aGlzLnNldHRpbmdzICYmIHR5cGVvZiB0aGlzLnNldHRpbmdzW2hhbmRsZXJdID09PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdFx0dGhpcy5zZXR0aW5nc1toYW5kbGVyXS5hcHBseSh0aGlzLCBldmVudCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gZXZlbnQ7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogU3VwcHJlc3NlcyBldmVudHMuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEBwYXJhbSB7QXJyYXkuPFN0cmluZz59IGV2ZW50cyAtIFRoZSBldmVudHMgdG8gc3VwcHJlc3MuXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5zdXBwcmVzcyA9IGZ1bmN0aW9uKGV2ZW50cykge1xyXG5cdFx0JC5lYWNoKGV2ZW50cywgJC5wcm94eShmdW5jdGlvbihpbmRleCwgZXZlbnQpIHtcclxuXHRcdFx0dGhpcy5fc3VwcmVzc1tldmVudF0gPSB0cnVlO1xyXG5cdFx0fSwgdGhpcykpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogUmVsZWFzZXMgc3VwcHJlc3NlZCBldmVudHMuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEBwYXJhbSB7QXJyYXkuPFN0cmluZz59IGV2ZW50cyAtIFRoZSBldmVudHMgdG8gcmVsZWFzZS5cclxuXHQgKi9cclxuXHRPd2wucHJvdG90eXBlLnJlbGVhc2UgPSBmdW5jdGlvbihldmVudHMpIHtcclxuXHRcdCQuZWFjaChldmVudHMsICQucHJveHkoZnVuY3Rpb24oaW5kZXgsIGV2ZW50KSB7XHJcblx0XHRcdGRlbGV0ZSB0aGlzLl9zdXByZXNzW2V2ZW50XTtcclxuXHRcdH0sIHRoaXMpKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyB0aGUgYXZhaWxhYmlsaXR5IG9mIHNvbWUgYnJvd3NlciBmZWF0dXJlcy5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICovXHJcblx0T3dsLnByb3RvdHlwZS5icm93c2VyU3VwcG9ydCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5zdXBwb3J0M2QgPSBpc1BlcnNwZWN0aXZlKCk7XHJcblxyXG5cdFx0aWYgKHRoaXMuc3VwcG9ydDNkKSB7XHJcblx0XHRcdHRoaXMudHJhbnNmb3JtVmVuZG9yID0gaXNUcmFuc2Zvcm0oKTtcclxuXHJcblx0XHRcdC8vIHRha2UgdHJhbnNpdGlvbmVuZCBldmVudCBuYW1lIGJ5IGRldGVjdGluZyB0cmFuc2l0aW9uXHJcblx0XHRcdHZhciBlbmRWZW5kb3JzID0gWyAndHJhbnNpdGlvbmVuZCcsICd3ZWJraXRUcmFuc2l0aW9uRW5kJywgJ3RyYW5zaXRpb25lbmQnLCAnb1RyYW5zaXRpb25FbmQnIF07XHJcblx0XHRcdHRoaXMudHJhbnNpdGlvbkVuZFZlbmRvciA9IGVuZFZlbmRvcnNbaXNUcmFuc2l0aW9uKCldO1xyXG5cclxuXHRcdFx0Ly8gdGFrZSB2ZW5kb3IgbmFtZSBmcm9tIHRyYW5zZm9ybSBuYW1lXHJcblx0XHRcdHRoaXMudmVuZG9yTmFtZSA9IHRoaXMudHJhbnNmb3JtVmVuZG9yLnJlcGxhY2UoL1RyYW5zZm9ybS9pLCAnJyk7XHJcblx0XHRcdHRoaXMudmVuZG9yTmFtZSA9IHRoaXMudmVuZG9yTmFtZSAhPT0gJycgPyAnLScgKyB0aGlzLnZlbmRvck5hbWUudG9Mb3dlckNhc2UoKSArICctJyA6ICcnO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuc3RhdGUub3JpZW50YXRpb24gPSB3aW5kb3cub3JpZW50YXRpb247XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogR2V0IHRvdWNoL2RyYWcgY29vcmRpbmF0cy5cclxuXHQgKiBAcHJpdmF0ZVxyXG5cdCAqIEBwYXJhbSB7ZXZlbnR9IC0gbW91c2Vkb3duL3RvdWNoc3RhcnQgZXZlbnRcclxuXHQgKiBAcmV0dXJucyB7b2JqZWN0fSAtIENvbnRhaW5zIFggYW5kIFkgb2YgY3VycmVudCBtb3VzZS90b3VjaCBwb3NpdGlvblxyXG5cdCAqL1xyXG5cclxuXHRmdW5jdGlvbiBnZXRUb3VjaGVzKGV2ZW50KSB7XHJcblx0XHRpZiAoZXZlbnQudG91Y2hlcyAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0eDogZXZlbnQudG91Y2hlc1swXS5wYWdlWCxcclxuXHRcdFx0XHR5OiBldmVudC50b3VjaGVzWzBdLnBhZ2VZXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGV2ZW50LnRvdWNoZXMgPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRpZiAoZXZlbnQucGFnZVggIT09IHVuZGVmaW5lZCkge1xyXG5cdFx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0XHR4OiBldmVudC5wYWdlWCxcclxuXHRcdFx0XHRcdHk6IGV2ZW50LnBhZ2VZXHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdGlmIChldmVudC5wYWdlWCA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0XHR4OiBldmVudC5jbGllbnRYLFxyXG5cdFx0XHRcdFx0eTogZXZlbnQuY2xpZW50WVxyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyBmb3IgQ1NTIHN1cHBvcnQuXHJcblx0ICogQHByaXZhdGVcclxuXHQgKiBAcGFyYW0ge0FycmF5fSBhcnJheSAtIFRoZSBDU1MgcHJvcGVydGllcyB0byBjaGVjayBmb3IuXHJcblx0ICogQHJldHVybnMge0FycmF5fSAtIENvbnRhaW5zIHRoZSBzdXBwb3J0ZWQgQ1NTIHByb3BlcnR5IG5hbWUgYW5kIGl0cyBpbmRleCBvciBgZmFsc2VgLlxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGlzU3R5bGVTdXBwb3J0ZWQoYXJyYXkpIHtcclxuXHRcdHZhciBwLCBzLCBmYWtlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksIGxpc3QgPSBhcnJheTtcclxuXHRcdGZvciAocCBpbiBsaXN0KSB7XHJcblx0XHRcdHMgPSBsaXN0W3BdO1xyXG5cdFx0XHRpZiAodHlwZW9mIGZha2Uuc3R5bGVbc10gIT09ICd1bmRlZmluZWQnKSB7XHJcblx0XHRcdFx0ZmFrZSA9IG51bGw7XHJcblx0XHRcdFx0cmV0dXJuIFsgcywgcCBdO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gWyBmYWxzZSBdO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQ2hlY2tzIGZvciBDU1MgdHJhbnNpdGlvbiBzdXBwb3J0LlxyXG5cdCAqIEBwcml2YXRlXHJcblx0ICogQHRvZG8gUmVhbHkgYmFkIGRlc2lnblxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9XHJcblx0ICovXHJcblx0ZnVuY3Rpb24gaXNUcmFuc2l0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGlzU3R5bGVTdXBwb3J0ZWQoWyAndHJhbnNpdGlvbicsICdXZWJraXRUcmFuc2l0aW9uJywgJ01velRyYW5zaXRpb24nLCAnT1RyYW5zaXRpb24nIF0pWzFdO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQ2hlY2tzIGZvciBDU1MgdHJhbnNmb3JtIHN1cHBvcnQuXHJcblx0ICogQHByaXZhdGVcclxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgc3VwcG9ydGVkIHByb3BlcnR5IG5hbWUgb3IgZmFsc2UuXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gaXNUcmFuc2Zvcm0oKSB7XHJcblx0XHRyZXR1cm4gaXNTdHlsZVN1cHBvcnRlZChbICd0cmFuc2Zvcm0nLCAnV2Via2l0VHJhbnNmb3JtJywgJ01velRyYW5zZm9ybScsICdPVHJhbnNmb3JtJywgJ21zVHJhbnNmb3JtJyBdKVswXTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyBmb3IgQ1NTIHBlcnNwZWN0aXZlIHN1cHBvcnQuXHJcblx0ICogQHByaXZhdGVcclxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgc3VwcG9ydGVkIHByb3BlcnR5IG5hbWUgb3IgZmFsc2UuXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gaXNQZXJzcGVjdGl2ZSgpIHtcclxuXHRcdHJldHVybiBpc1N0eWxlU3VwcG9ydGVkKFsgJ3BlcnNwZWN0aXZlJywgJ3dlYmtpdFBlcnNwZWN0aXZlJywgJ01velBlcnNwZWN0aXZlJywgJ09QZXJzcGVjdGl2ZScsICdNc1BlcnNwZWN0aXZlJyBdKVswXTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoZWNrcyB3ZXRoZXIgdG91Y2ggaXMgc3VwcG9ydGVkIG9yIG5vdC5cclxuXHQgKiBAcHJpdmF0ZVxyXG5cdCAqIEByZXR1cm5zIHtCb29sZWFufVxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGlzVG91Y2hTdXBwb3J0KCkge1xyXG5cdFx0cmV0dXJuICdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyB8fCAhIShuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBDaGVja3Mgd2V0aGVyIHRvdWNoIGlzIHN1cHBvcnRlZCBvciBub3QgZm9yIElFLlxyXG5cdCAqIEBwcml2YXRlXHJcblx0ICogQHJldHVybnMge0Jvb2xlYW59XHJcblx0ICovXHJcblx0ZnVuY3Rpb24gaXNUb3VjaFN1cHBvcnRJRSgpIHtcclxuXHRcdHJldHVybiB3aW5kb3cubmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQ7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBUaGUgalF1ZXJ5IFBsdWdpbiBmb3IgdGhlIE93bCBDYXJvdXNlbFxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHQkLmZuLm93bENhcm91c2VsID0gZnVuY3Rpb24ob3B0aW9ucykge1xyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0aWYgKCEkKHRoaXMpLmRhdGEoJ293bENhcm91c2VsJykpIHtcclxuXHRcdFx0XHQkKHRoaXMpLmRhdGEoJ293bENhcm91c2VsJywgbmV3IE93bCh0aGlzLCBvcHRpb25zKSk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRoZSBjb25zdHJ1Y3RvciBmb3IgdGhlIGpRdWVyeSBQbHVnaW5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0JC5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3RvciA9IE93bDtcclxuXHJcbn0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuXHJcbi8qKlxyXG4gKiBMYXp5IFBsdWdpblxyXG4gKiBAdmVyc2lvbiAyLjAuMFxyXG4gKiBAYXV0aG9yIEJhcnRvc3ogV29qY2llY2hvd3NraVxyXG4gKiBAbGljZW5zZSBUaGUgTUlUIExpY2Vuc2UgKE1JVClcclxuICovXHJcbjsoZnVuY3Rpb24oJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XHJcblxyXG5cdC8qKlxyXG5cdCAqIENyZWF0ZXMgdGhlIGxhenkgcGx1Z2luLlxyXG5cdCAqIEBjbGFzcyBUaGUgTGF6eSBQbHVnaW5cclxuXHQgKiBAcGFyYW0ge093bH0gY2Fyb3VzZWwgLSBUaGUgT3dsIENhcm91c2VsXHJcblx0ICovXHJcblx0dmFyIExhenkgPSBmdW5jdGlvbihjYXJvdXNlbCkge1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogUmVmZXJlbmNlIHRvIHRoZSBjb3JlLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge093bH1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQWxyZWFkeSBsb2FkZWQgaXRlbXMuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7QXJyYXkuPGpRdWVyeT59XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2xvYWRlZCA9IFtdO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogRXZlbnQgaGFuZGxlcnMuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7T2JqZWN0fVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl9oYW5kbGVycyA9IHtcclxuXHRcdFx0J2luaXRpYWxpemVkLm93bC5jYXJvdXNlbCBjaGFuZ2Uub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0aWYgKCFlLm5hbWVzcGFjZSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKCF0aGlzLl9jb3JlLnNldHRpbmdzIHx8ICF0aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkKSB7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAoKGUucHJvcGVydHkgJiYgZS5wcm9wZXJ0eS5uYW1lID09ICdwb3NpdGlvbicpIHx8IGUudHlwZSA9PSAnaW5pdGlhbGl6ZWQnKSB7XHJcblx0XHRcdFx0XHR2YXIgc2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzLFxyXG5cdFx0XHRcdFx0XHRuID0gKHNldHRpbmdzLmNlbnRlciAmJiBNYXRoLmNlaWwoc2V0dGluZ3MuaXRlbXMgLyAyKSB8fCBzZXR0aW5ncy5pdGVtcyksXHJcblx0XHRcdFx0XHRcdGkgPSAoKHNldHRpbmdzLmNlbnRlciAmJiBuICogLTEpIHx8IDApLFxyXG5cdFx0XHRcdFx0XHRwb3NpdGlvbiA9ICgoZS5wcm9wZXJ0eSAmJiBlLnByb3BlcnR5LnZhbHVlKSB8fCB0aGlzLl9jb3JlLmN1cnJlbnQoKSkgKyBpLFxyXG5cdFx0XHRcdFx0XHRjbG9uZXMgPSB0aGlzLl9jb3JlLmNsb25lcygpLmxlbmd0aCxcclxuXHRcdFx0XHRcdFx0bG9hZCA9ICQucHJveHkoZnVuY3Rpb24oaSwgdikgeyB0aGlzLmxvYWQodikgfSwgdGhpcyk7XHJcblxyXG5cdFx0XHRcdFx0d2hpbGUgKGkrKyA8IG4pIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5sb2FkKGNsb25lcyAvIDIgKyB0aGlzLl9jb3JlLnJlbGF0aXZlKHBvc2l0aW9uKSk7XHJcblx0XHRcdFx0XHRcdGNsb25lcyAmJiAkLmVhY2godGhpcy5fY29yZS5jbG9uZXModGhpcy5fY29yZS5yZWxhdGl2ZShwb3NpdGlvbisrKSksIGxvYWQpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgdGhpcylcclxuXHRcdH07XHJcblxyXG5cdFx0Ly8gc2V0IHRoZSBkZWZhdWx0IG9wdGlvbnNcclxuXHRcdHRoaXMuX2NvcmUub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBMYXp5LkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpO1xyXG5cclxuXHRcdC8vIHJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJcclxuXHRcdHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogRGVmYXVsdCBvcHRpb25zLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRMYXp5LkRlZmF1bHRzID0ge1xyXG5cdFx0bGF6eUxvYWQ6IGZhbHNlXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBMb2FkcyBhbGwgcmVzb3VyY2VzIG9mIGFuIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBwb3NpdGlvbi5cclxuXHQgKiBAcGFyYW0ge051bWJlcn0gcG9zaXRpb24gLSBUaGUgYWJzb2x1dGUgcG9zaXRpb24gb2YgdGhlIGl0ZW0uXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdExhenkucHJvdG90eXBlLmxvYWQgPSBmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0dmFyICRpdGVtID0gdGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcShwb3NpdGlvbiksXHJcblx0XHRcdCRlbGVtZW50cyA9ICRpdGVtICYmICRpdGVtLmZpbmQoJy5vd2wtbGF6eScpO1xyXG5cclxuXHRcdGlmICghJGVsZW1lbnRzIHx8ICQuaW5BcnJheSgkaXRlbS5nZXQoMCksIHRoaXMuX2xvYWRlZCkgPiAtMSkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0JGVsZW1lbnRzLmVhY2goJC5wcm94eShmdW5jdGlvbihpbmRleCwgZWxlbWVudCkge1xyXG5cdFx0XHR2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpLCBpbWFnZSxcclxuXHRcdFx0XHR1cmwgPSAod2luZG93LmRldmljZVBpeGVsUmF0aW8gPiAxICYmICRlbGVtZW50LmF0dHIoJ2RhdGEtc3JjLXJldGluYScpKSB8fCAkZWxlbWVudC5hdHRyKCdkYXRhLXNyYycpO1xyXG5cclxuXHRcdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdsb2FkJywgeyBlbGVtZW50OiAkZWxlbWVudCwgdXJsOiB1cmwgfSwgJ2xhenknKTtcclxuXHJcblx0XHRcdGlmICgkZWxlbWVudC5pcygnaW1nJykpIHtcclxuXHRcdFx0XHQkZWxlbWVudC5vbmUoJ2xvYWQub3dsLmxhenknLCAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdvcGFjaXR5JywgMSk7XHJcblx0XHRcdFx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ2xvYWRlZCcsIHsgZWxlbWVudDogJGVsZW1lbnQsIHVybDogdXJsIH0sICdsYXp5Jyk7XHJcblx0XHRcdFx0fSwgdGhpcykpLmF0dHIoJ3NyYycsIHVybCk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0aW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuXHRcdFx0XHRpbWFnZS5vbmxvYWQgPSAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0JGVsZW1lbnQuY3NzKHtcclxuXHRcdFx0XHRcdFx0J2JhY2tncm91bmQtaW1hZ2UnOiAndXJsKCcgKyB1cmwgKyAnKScsXHJcblx0XHRcdFx0XHRcdCdvcGFjaXR5JzogJzEnXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdHRoaXMuX2NvcmUudHJpZ2dlcignbG9hZGVkJywgeyBlbGVtZW50OiAkZWxlbWVudCwgdXJsOiB1cmwgfSwgJ2xhenknKTtcclxuXHRcdFx0XHR9LCB0aGlzKTtcclxuXHRcdFx0XHRpbWFnZS5zcmMgPSB1cmw7XHJcblx0XHRcdH1cclxuXHRcdH0sIHRoaXMpKTtcclxuXHJcblx0XHR0aGlzLl9sb2FkZWQucHVzaCgkaXRlbS5nZXQoMCkpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogRGVzdHJveXMgdGhlIHBsdWdpbi5cclxuXHQgKiBAcHVibGljXHJcblx0ICovXHJcblx0TGF6eS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGhhbmRsZXIsIHByb3BlcnR5O1xyXG5cclxuXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLmhhbmRsZXJzKSB7XHJcblx0XHRcdHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuaGFuZGxlcnNbaGFuZGxlcl0pO1xyXG5cdFx0fVxyXG5cdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xyXG5cdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5MYXp5ID0gTGF6eTtcclxuXHJcbn0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuXHJcbi8qKlxyXG4gKiBBdXRvSGVpZ2h0IFBsdWdpblxyXG4gKiBAdmVyc2lvbiAyLjAuMFxyXG4gKiBAYXV0aG9yIEJhcnRvc3ogV29qY2llY2hvd3NraVxyXG4gKiBAbGljZW5zZSBUaGUgTUlUIExpY2Vuc2UgKE1JVClcclxuICovXHJcbjsoZnVuY3Rpb24oJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XHJcblxyXG5cdC8qKlxyXG5cdCAqIENyZWF0ZXMgdGhlIGF1dG8gaGVpZ2h0IHBsdWdpbi5cclxuXHQgKiBAY2xhc3MgVGhlIEF1dG8gSGVpZ2h0IFBsdWdpblxyXG5cdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWxcclxuXHQgKi9cclxuXHR2YXIgQXV0b0hlaWdodCA9IGZ1bmN0aW9uKGNhcm91c2VsKSB7XHJcblx0XHQvKipcclxuXHRcdCAqIFJlZmVyZW5jZSB0byB0aGUgY29yZS5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPd2x9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2NvcmUgPSBjYXJvdXNlbDtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEFsbCBldmVudCBoYW5kbGVycy5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPYmplY3R9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xyXG5cdFx0XHQnaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0KSB7XHJcblx0XHRcdFx0XHR0aGlzLnVwZGF0ZSgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmICh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQgJiYgZS5wcm9wZXJ0eS5uYW1lID09ICdwb3NpdGlvbicpe1xyXG5cdFx0XHRcdFx0dGhpcy51cGRhdGUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQnbG9hZGVkLm93bC5sYXp5JzogJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodCAmJiBlLmVsZW1lbnQuY2xvc2VzdCgnLicgKyB0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1DbGFzcylcclxuXHRcdFx0XHRcdD09PSB0aGlzLl9jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMuX2NvcmUuY3VycmVudCgpKSkge1xyXG5cdFx0XHRcdFx0dGhpcy51cGRhdGUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpXHJcblx0XHR9O1xyXG5cclxuXHRcdC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcclxuXHRcdHRoaXMuX2NvcmUub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBBdXRvSGVpZ2h0LkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpO1xyXG5cclxuXHRcdC8vIHJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJzXHJcblx0XHR0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdEF1dG9IZWlnaHQuRGVmYXVsdHMgPSB7XHJcblx0XHRhdXRvSGVpZ2h0OiBmYWxzZSxcclxuXHRcdGF1dG9IZWlnaHRDbGFzczogJ293bC1oZWlnaHQnXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogVXBkYXRlcyB0aGUgdmlldy5cclxuXHQgKi9cclxuXHRBdXRvSGVpZ2h0LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHRoaXMuX2NvcmUuJHN0YWdlLnBhcmVudCgpXHJcblx0XHRcdC5oZWlnaHQodGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLl9jb3JlLmN1cnJlbnQoKSkuaGVpZ2h0KCkpXHJcblx0XHRcdC5hZGRDbGFzcyh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHRDbGFzcyk7XHJcblx0fTtcclxuXHJcblx0QXV0b0hlaWdodC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGhhbmRsZXIsIHByb3BlcnR5O1xyXG5cclxuXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihoYW5kbGVyLCB0aGlzLl9oYW5kbGVyc1toYW5kbGVyXSk7XHJcblx0XHR9XHJcblx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XHJcblx0XHRcdHR5cGVvZiB0aGlzW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nICYmICh0aGlzW3Byb3BlcnR5XSA9IG51bGwpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvSGVpZ2h0ID0gQXV0b0hlaWdodDtcclxuXHJcbn0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuXHJcbi8qKlxyXG4gKiBWaWRlbyBQbHVnaW5cclxuICogQHZlcnNpb24gMi4wLjBcclxuICogQGF1dGhvciBCYXJ0b3N6IFdvamNpZWNob3dza2lcclxuICogQGxpY2Vuc2UgVGhlIE1JVCBMaWNlbnNlIChNSVQpXHJcbiAqL1xyXG47KGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xyXG5cclxuXHQvKipcclxuXHQgKiBDcmVhdGVzIHRoZSB2aWRlbyBwbHVnaW4uXHJcblx0ICogQGNsYXNzIFRoZSBWaWRlbyBQbHVnaW5cclxuXHQgKiBAcGFyYW0ge093bH0gY2Fyb3VzZWwgLSBUaGUgT3dsIENhcm91c2VsXHJcblx0ICovXHJcblx0dmFyIFZpZGVvID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcclxuXHRcdC8qKlxyXG5cdFx0ICogUmVmZXJlbmNlIHRvIHRoZSBjb3JlLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge093bH1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQ2FjaGUgYWxsIHZpZGVvIFVSTHMuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7T2JqZWN0fVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl92aWRlb3MgPSB7fTtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEN1cnJlbnQgcGxheWluZyBpdGVtLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge2pRdWVyeX1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fcGxheWluZyA9IG51bGw7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBXaGV0aGVyIHRoaXMgaXMgaW4gZnVsbHNjcmVlbiBvciBub3QuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7Qm9vbGVhbn1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fZnVsbHNjcmVlbiA9IGZhbHNlO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQWxsIGV2ZW50IGhhbmRsZXJzLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge09iamVjdH1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5faGFuZGxlcnMgPSB7XHJcblx0XHRcdCdyZXNpemUub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMuX2NvcmUuc2V0dGluZ3MudmlkZW8gJiYgIXRoaXMuaXNJbkZ1bGxTY3JlZW4oKSkge1xyXG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdyZWZyZXNoLm93bC5jYXJvdXNlbCBjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmICh0aGlzLl9wbGF5aW5nKSB7XHJcblx0XHRcdFx0XHR0aGlzLnN0b3AoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQncHJlcGFyZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0dmFyICRlbGVtZW50ID0gJChlLmNvbnRlbnQpLmZpbmQoJy5vd2wtdmlkZW8nKTtcclxuXHRcdFx0XHRpZiAoJGVsZW1lbnQubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHQkZWxlbWVudC5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG5cdFx0XHRcdFx0dGhpcy5mZXRjaCgkZWxlbWVudCwgJChlLmNvbnRlbnQpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpXHJcblx0XHR9O1xyXG5cclxuXHRcdC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcclxuXHRcdHRoaXMuX2NvcmUub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBWaWRlby5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKTtcclxuXHJcblx0XHQvLyByZWdpc3RlciBldmVudCBoYW5kbGVyc1xyXG5cdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XHJcblxyXG5cdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vbignY2xpY2sub3dsLnZpZGVvJywgJy5vd2wtdmlkZW8tcGxheS1pY29uJywgJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdHRoaXMucGxheShlKTtcclxuXHRcdH0sIHRoaXMpKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdFZpZGVvLkRlZmF1bHRzID0ge1xyXG5cdFx0dmlkZW86IGZhbHNlLFxyXG5cdFx0dmlkZW9IZWlnaHQ6IGZhbHNlLFxyXG5cdFx0dmlkZW9XaWR0aDogZmFsc2VcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIHRoZSB2aWRlbyBJRCBhbmQgdGhlIHR5cGUgKFlvdVR1YmUvVmltZW8gb25seSkuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEBwYXJhbSB7alF1ZXJ5fSB0YXJnZXQgLSBUaGUgdGFyZ2V0IGNvbnRhaW5pbmcgdGhlIHZpZGVvIGRhdGEuXHJcblx0ICogQHBhcmFtIHtqUXVlcnl9IGl0ZW0gLSBUaGUgaXRlbSBjb250YWluaW5nIHRoZSB2aWRlby5cclxuXHQgKi9cclxuXHRWaWRlby5wcm90b3R5cGUuZmV0Y2ggPSBmdW5jdGlvbih0YXJnZXQsIGl0ZW0pIHtcclxuXHJcblx0XHR2YXIgdHlwZSA9IHRhcmdldC5hdHRyKCdkYXRhLXZpbWVvLWlkJykgPyAndmltZW8nIDogJ3lvdXR1YmUnLFxyXG5cdFx0XHRpZCA9IHRhcmdldC5hdHRyKCdkYXRhLXZpbWVvLWlkJykgfHwgdGFyZ2V0LmF0dHIoJ2RhdGEteW91dHViZS1pZCcpLFxyXG5cdFx0XHR3aWR0aCA9IHRhcmdldC5hdHRyKCdkYXRhLXdpZHRoJykgfHwgdGhpcy5fY29yZS5zZXR0aW5ncy52aWRlb1dpZHRoLFxyXG5cdFx0XHRoZWlnaHQgPSB0YXJnZXQuYXR0cignZGF0YS1oZWlnaHQnKSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvSGVpZ2h0LFxyXG5cdFx0XHR1cmwgPSB0YXJnZXQuYXR0cignaHJlZicpO1xyXG5cclxuXHRcdGlmICh1cmwpIHtcclxuXHRcdFx0aWQgPSB1cmwubWF0Y2goLyhodHRwOnxodHRwczp8KVxcL1xcLyhwbGF5ZXIufHd3dy4pPyh2aW1lb1xcLmNvbXx5b3V0dShiZVxcLmNvbXxcXC5iZXxiZVxcLmdvb2dsZWFwaXNcXC5jb20pKVxcLyh2aWRlb1xcL3xlbWJlZFxcL3x3YXRjaFxcP3Y9fHZcXC8pPyhbQS1aYS16MC05Ll8lLV0qKShcXCZcXFMrKT8vKTtcclxuXHJcblx0XHRcdGlmIChpZFszXS5pbmRleE9mKCd5b3V0dScpID4gLTEpIHtcclxuXHRcdFx0XHR0eXBlID0gJ3lvdXR1YmUnO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGlkWzNdLmluZGV4T2YoJ3ZpbWVvJykgPiAtMSkge1xyXG5cdFx0XHRcdHR5cGUgPSAndmltZW8nO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcignVmlkZW8gVVJMIG5vdCBzdXBwb3J0ZWQuJyk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWQgPSBpZFs2XTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyB2aWRlbyBVUkwuJyk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5fdmlkZW9zW3VybF0gPSB7XHJcblx0XHRcdHR5cGU6IHR5cGUsXHJcblx0XHRcdGlkOiBpZCxcclxuXHRcdFx0d2lkdGg6IHdpZHRoLFxyXG5cdFx0XHRoZWlnaHQ6IGhlaWdodFxyXG5cdFx0fTtcclxuXHJcblx0XHRpdGVtLmF0dHIoJ2RhdGEtdmlkZW8nLCB1cmwpO1xyXG5cclxuXHRcdHRoaXMudGh1bWJuYWlsKHRhcmdldCwgdGhpcy5fdmlkZW9zW3VybF0pO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIENyZWF0ZXMgdmlkZW8gdGh1bWJuYWlsLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcGFyYW0ge2pRdWVyeX0gdGFyZ2V0IC0gVGhlIHRhcmdldCBjb250YWluaW5nIHRoZSB2aWRlbyBkYXRhLlxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBpbmZvIC0gVGhlIHZpZGVvIGluZm8gb2JqZWN0LlxyXG5cdCAqIEBzZWUgYGZldGNoYFxyXG5cdCAqL1xyXG5cdFZpZGVvLnByb3RvdHlwZS50aHVtYm5haWwgPSBmdW5jdGlvbih0YXJnZXQsIHZpZGVvKSB7XHJcblxyXG5cdFx0dmFyIHRuTGluayxcclxuXHRcdFx0aWNvbixcclxuXHRcdFx0cGF0aCxcclxuXHRcdFx0ZGltZW5zaW9ucyA9IHZpZGVvLndpZHRoICYmIHZpZGVvLmhlaWdodCA/ICdzdHlsZT1cIndpZHRoOicgKyB2aWRlby53aWR0aCArICdweDtoZWlnaHQ6JyArIHZpZGVvLmhlaWdodCArICdweDtcIicgOiAnJyxcclxuXHRcdFx0Y3VzdG9tVG4gPSB0YXJnZXQuZmluZCgnaW1nJyksXHJcblx0XHRcdHNyY1R5cGUgPSAnc3JjJyxcclxuXHRcdFx0bGF6eUNsYXNzID0gJycsXHJcblx0XHRcdHNldHRpbmdzID0gdGhpcy5fY29yZS5zZXR0aW5ncyxcclxuXHRcdFx0Y3JlYXRlID0gZnVuY3Rpb24ocGF0aCkge1xyXG5cdFx0XHRcdGljb24gPSAnPGRpdiBjbGFzcz1cIm93bC12aWRlby1wbGF5LWljb25cIj48L2Rpdj4nO1xyXG5cclxuXHRcdFx0XHRpZiAoc2V0dGluZ3MubGF6eUxvYWQpIHtcclxuXHRcdFx0XHRcdHRuTGluayA9ICc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLXRuICcgKyBsYXp5Q2xhc3MgKyAnXCIgJyArIHNyY1R5cGUgKyAnPVwiJyArIHBhdGggKyAnXCI+PC9kaXY+JztcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dG5MaW5rID0gJzxkaXYgY2xhc3M9XCJvd2wtdmlkZW8tdG5cIiBzdHlsZT1cIm9wYWNpdHk6MTtiYWNrZ3JvdW5kLWltYWdlOnVybCgnICsgcGF0aCArICcpXCI+PC9kaXY+JztcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dGFyZ2V0LmFmdGVyKHRuTGluayk7XHJcblx0XHRcdFx0dGFyZ2V0LmFmdGVyKGljb24pO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdC8vIHdyYXAgdmlkZW8gY29udGVudCBpbnRvIG93bC12aWRlby13cmFwcGVyIGRpdlxyXG5cdFx0dGFyZ2V0LndyYXAoJzxkaXYgY2xhc3M9XCJvd2wtdmlkZW8td3JhcHBlclwiJyArIGRpbWVuc2lvbnMgKyAnPjwvZGl2PicpO1xyXG5cclxuXHRcdGlmICh0aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkKSB7XHJcblx0XHRcdHNyY1R5cGUgPSAnZGF0YS1zcmMnO1xyXG5cdFx0XHRsYXp5Q2xhc3MgPSAnb3dsLWxhenknO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGN1c3RvbSB0aHVtYm5haWxcclxuXHRcdGlmIChjdXN0b21Ubi5sZW5ndGgpIHtcclxuXHRcdFx0Y3JlYXRlKGN1c3RvbVRuLmF0dHIoc3JjVHlwZSkpO1xyXG5cdFx0XHRjdXN0b21Ubi5yZW1vdmUoKTtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICh2aWRlby50eXBlID09PSAneW91dHViZScpIHtcclxuXHRcdFx0cGF0aCA9IFwiaHR0cDovL2ltZy55b3V0dWJlLmNvbS92aS9cIiArIHZpZGVvLmlkICsgXCIvaHFkZWZhdWx0LmpwZ1wiO1xyXG5cdFx0XHRjcmVhdGUocGF0aCk7XHJcblx0XHR9IGVsc2UgaWYgKHZpZGVvLnR5cGUgPT09ICd2aW1lbycpIHtcclxuXHRcdFx0JC5hamF4KHtcclxuXHRcdFx0XHR0eXBlOiAnR0VUJyxcclxuXHRcdFx0XHR1cmw6ICdodHRwOi8vdmltZW8uY29tL2FwaS92Mi92aWRlby8nICsgdmlkZW8uaWQgKyAnLmpzb24nLFxyXG5cdFx0XHRcdGpzb25wOiAnY2FsbGJhY2snLFxyXG5cdFx0XHRcdGRhdGFUeXBlOiAnanNvbnAnLFxyXG5cdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0XHRcdHBhdGggPSBkYXRhWzBdLnRodW1ibmFpbF9sYXJnZTtcclxuXHRcdFx0XHRcdGNyZWF0ZShwYXRoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIFN0b3BzIHRoZSBjdXJyZW50IHZpZGVvLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRWaWRlby5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdzdG9wJywgbnVsbCwgJ3ZpZGVvJyk7XHJcblx0XHR0aGlzLl9wbGF5aW5nLmZpbmQoJy5vd2wtdmlkZW8tZnJhbWUnKS5yZW1vdmUoKTtcclxuXHRcdHRoaXMuX3BsYXlpbmcucmVtb3ZlQ2xhc3MoJ293bC12aWRlby1wbGF5aW5nJyk7XHJcblx0XHR0aGlzLl9wbGF5aW5nID0gbnVsbDtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTdGFydHMgdGhlIGN1cnJlbnQgdmlkZW8uXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2IC0gVGhlIGV2ZW50IGFyZ3VtZW50cy5cclxuXHQgKi9cclxuXHRWaWRlby5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uKGV2KSB7XHJcblx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ3BsYXknLCBudWxsLCAndmlkZW8nKTtcclxuXHJcblx0XHRpZiAodGhpcy5fcGxheWluZykge1xyXG5cdFx0XHR0aGlzLnN0b3AoKTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgdGFyZ2V0ID0gJChldi50YXJnZXQgfHwgZXYuc3JjRWxlbWVudCksXHJcblx0XHRcdGl0ZW0gPSB0YXJnZXQuY2xvc2VzdCgnLicgKyB0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1DbGFzcyksXHJcblx0XHRcdHZpZGVvID0gdGhpcy5fdmlkZW9zW2l0ZW0uYXR0cignZGF0YS12aWRlbycpXSxcclxuXHRcdFx0d2lkdGggPSB2aWRlby53aWR0aCB8fCAnMTAwJScsXHJcblx0XHRcdGhlaWdodCA9IHZpZGVvLmhlaWdodCB8fCB0aGlzLl9jb3JlLiRzdGFnZS5oZWlnaHQoKSxcclxuXHRcdFx0aHRtbCwgd3JhcDtcclxuXHJcblx0XHRpZiAodmlkZW8udHlwZSA9PT0gJ3lvdXR1YmUnKSB7XHJcblx0XHRcdGh0bWwgPSAnPGlmcmFtZSB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgaGVpZ2h0ICsgJ1wiIHNyYz1cImh0dHA6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJ1xyXG5cdFx0XHRcdCsgdmlkZW8uaWQgKyAnP2F1dG9wbGF5PTEmdj0nICsgdmlkZW8uaWQgKyAnXCIgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPic7XHJcblx0XHR9IGVsc2UgaWYgKHZpZGVvLnR5cGUgPT09ICd2aW1lbycpIHtcclxuXHRcdFx0aHRtbCA9ICc8aWZyYW1lIHNyYz1cImh0dHA6Ly9wbGF5ZXIudmltZW8uY29tL3ZpZGVvLycgKyB2aWRlby5pZCArICc/YXV0b3BsYXk9MVwiIHdpZHRoPVwiJyArIHdpZHRoXHJcblx0XHRcdFx0KyAnXCIgaGVpZ2h0PVwiJyArIGhlaWdodFxyXG5cdFx0XHRcdCsgJ1wiIGZyYW1lYm9yZGVyPVwiMFwiIHdlYmtpdGFsbG93ZnVsbHNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPic7XHJcblx0XHR9XHJcblxyXG5cdFx0aXRlbS5hZGRDbGFzcygnb3dsLXZpZGVvLXBsYXlpbmcnKTtcclxuXHRcdHRoaXMuX3BsYXlpbmcgPSBpdGVtO1xyXG5cclxuXHRcdHdyYXAgPSAkKCc8ZGl2IHN0eWxlPVwiaGVpZ2h0OicgKyBoZWlnaHQgKyAncHg7IHdpZHRoOicgKyB3aWR0aCArICdweFwiIGNsYXNzPVwib3dsLXZpZGVvLWZyYW1lXCI+J1xyXG5cdFx0XHQrIGh0bWwgKyAnPC9kaXY+Jyk7XHJcblx0XHR0YXJnZXQuYWZ0ZXIod3JhcCk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQ2hlY2tzIHdoZXRoZXIgYW4gdmlkZW8gaXMgY3VycmVudGx5IGluIGZ1bGwgc2NyZWVuIG1vZGUgb3Igbm90LlxyXG5cdCAqIEB0b2RvIEJhZCBzdHlsZSBiZWNhdXNlIGxvb2tzIGxpa2UgYSByZWFkb25seSBtZXRob2QgYnV0IGNoYW5nZXMgbWVtYmVycy5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHJldHVybnMge0Jvb2xlYW59XHJcblx0ICovXHJcblx0VmlkZW8ucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0Ly8gaWYgVmltZW8gRnVsbHNjcmVlbiBtb2RlXHJcblx0XHR2YXIgZWxlbWVudCA9IGRvY3VtZW50LmZ1bGxzY3JlZW5FbGVtZW50IHx8IGRvY3VtZW50Lm1vekZ1bGxTY3JlZW5FbGVtZW50XHJcblx0XHRcdHx8IGRvY3VtZW50LndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50O1xyXG5cclxuXHRcdGlmIChlbGVtZW50ICYmICQoZWxlbWVudCkucGFyZW50KCkuaGFzQ2xhc3MoJ293bC12aWRlby1mcmFtZScpKSB7XHJcblx0XHRcdHRoaXMuX2NvcmUuc3BlZWQoMCk7XHJcblx0XHRcdHRoaXMuX2Z1bGxzY3JlZW4gPSB0cnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChlbGVtZW50ICYmIHRoaXMuX2Z1bGxzY3JlZW4gJiYgdGhpcy5fcGxheWluZykge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gY29tbWluZyBiYWNrIGZyb20gZnVsbHNjcmVlblxyXG5cdFx0aWYgKHRoaXMuX2Z1bGxzY3JlZW4pIHtcclxuXHRcdFx0dGhpcy5fZnVsbHNjcmVlbiA9IGZhbHNlO1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gY2hlY2sgZnVsbCBzY3JlZW4gbW9kZSBhbmQgd2luZG93IG9yaWVudGF0aW9uXHJcblx0XHRpZiAodGhpcy5fcGxheWluZykge1xyXG5cdFx0XHRpZiAodGhpcy5fY29yZS5zdGF0ZS5vcmllbnRhdGlvbiAhPT0gd2luZG93Lm9yaWVudGF0aW9uKSB7XHJcblx0XHRcdFx0dGhpcy5fY29yZS5zdGF0ZS5vcmllbnRhdGlvbiA9IHdpbmRvdy5vcmllbnRhdGlvbjtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxyXG5cdCAqL1xyXG5cdFZpZGVvLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaGFuZGxlciwgcHJvcGVydHk7XHJcblxyXG5cdFx0dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoJ2NsaWNrLm93bC52aWRlbycpO1xyXG5cclxuXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihoYW5kbGVyLCB0aGlzLl9oYW5kbGVyc1toYW5kbGVyXSk7XHJcblx0XHR9XHJcblx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XHJcblx0XHRcdHR5cGVvZiB0aGlzW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nICYmICh0aGlzW3Byb3BlcnR5XSA9IG51bGwpO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdCQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbyA9IFZpZGVvO1xyXG5cclxufSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xyXG5cclxuLyoqXHJcbiAqIEFuaW1hdGUgUGx1Z2luXHJcbiAqIEB2ZXJzaW9uIDIuMC4wXHJcbiAqIEBhdXRob3IgQmFydG9zeiBXb2pjaWVjaG93c2tpXHJcbiAqIEBsaWNlbnNlIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxyXG4gKi9cclxuOyhmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcclxuXHJcblx0LyoqXHJcblx0ICogQ3JlYXRlcyB0aGUgYW5pbWF0ZSBwbHVnaW4uXHJcblx0ICogQGNsYXNzIFRoZSBOYXZpZ2F0aW9uIFBsdWdpblxyXG5cdCAqIEBwYXJhbSB7T3dsfSBzY29wZSAtIFRoZSBPd2wgQ2Fyb3VzZWxcclxuXHQgKi9cclxuXHR2YXIgQW5pbWF0ZSA9IGZ1bmN0aW9uKHNjb3BlKSB7XHJcblx0XHR0aGlzLmNvcmUgPSBzY29wZTtcclxuXHRcdHRoaXMuY29yZS5vcHRpb25zID0gJC5leHRlbmQoe30sIEFuaW1hdGUuRGVmYXVsdHMsIHRoaXMuY29yZS5vcHRpb25zKTtcclxuXHRcdHRoaXMuc3dhcHBpbmcgPSB0cnVlO1xyXG5cdFx0dGhpcy5wcmV2aW91cyA9IHVuZGVmaW5lZDtcclxuXHRcdHRoaXMubmV4dCA9IHVuZGVmaW5lZDtcclxuXHJcblx0XHR0aGlzLmhhbmRsZXJzID0ge1xyXG5cdFx0XHQnY2hhbmdlLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmIChlLnByb3BlcnR5Lm5hbWUgPT0gJ3Bvc2l0aW9uJykge1xyXG5cdFx0XHRcdFx0dGhpcy5wcmV2aW91cyA9IHRoaXMuY29yZS5jdXJyZW50KCk7XHJcblx0XHRcdFx0XHR0aGlzLm5leHQgPSBlLnByb3BlcnR5LnZhbHVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdkcmFnLm93bC5jYXJvdXNlbCBkcmFnZ2VkLm93bC5jYXJvdXNlbCB0cmFuc2xhdGVkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdHRoaXMuc3dhcHBpbmcgPSBlLnR5cGUgPT0gJ3RyYW5zbGF0ZWQnO1xyXG5cdFx0XHR9LCB0aGlzKSxcclxuXHRcdFx0J3RyYW5zbGF0ZS5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5zd2FwcGluZyAmJiAodGhpcy5jb3JlLm9wdGlvbnMuYW5pbWF0ZU91dCB8fCB0aGlzLmNvcmUub3B0aW9ucy5hbmltYXRlSW4pKSB7XHJcblx0XHRcdFx0XHR0aGlzLnN3YXAoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpXHJcblx0XHR9O1xyXG5cclxuXHRcdHRoaXMuY29yZS4kZWxlbWVudC5vbih0aGlzLmhhbmRsZXJzKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdEFuaW1hdGUuRGVmYXVsdHMgPSB7XHJcblx0XHRhbmltYXRlT3V0OiBmYWxzZSxcclxuXHRcdGFuaW1hdGVJbjogZmFsc2VcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBUb2dnbGVzIHRoZSBhbmltYXRpb24gY2xhc3NlcyB3aGVuZXZlciBhbiB0cmFuc2xhdGlvbnMgc3RhcnRzLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcmV0dXJucyB7Qm9vbGVhbnx1bmRlZmluZWR9XHJcblx0ICovXHJcblx0QW5pbWF0ZS5wcm90b3R5cGUuc3dhcCA9IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdGlmICh0aGlzLmNvcmUuc2V0dGluZ3MuaXRlbXMgIT09IDEgfHwgIXRoaXMuY29yZS5zdXBwb3J0M2QpIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuY29yZS5zcGVlZCgwKTtcclxuXHJcblx0XHR2YXIgbGVmdCxcclxuXHRcdFx0Y2xlYXIgPSAkLnByb3h5KHRoaXMuY2xlYXIsIHRoaXMpLFxyXG5cdFx0XHRwcmV2aW91cyA9IHRoaXMuY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLnByZXZpb3VzKSxcclxuXHRcdFx0bmV4dCA9IHRoaXMuY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLm5leHQpLFxyXG5cdFx0XHRpbmNvbWluZyA9IHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlSW4sXHJcblx0XHRcdG91dGdvaW5nID0gdGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVPdXQ7XHJcblxyXG5cdFx0aWYgKHRoaXMuY29yZS5jdXJyZW50KCkgPT09IHRoaXMucHJldmlvdXMpIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChvdXRnb2luZykge1xyXG5cdFx0XHRsZWZ0ID0gdGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMucHJldmlvdXMpIC0gdGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMubmV4dCk7XHJcblx0XHRcdHByZXZpb3VzLmNzcyggeyAnbGVmdCc6IGxlZnQgKyAncHgnIH0gKVxyXG5cdFx0XHRcdC5hZGRDbGFzcygnYW5pbWF0ZWQgb3dsLWFuaW1hdGVkLW91dCcpXHJcblx0XHRcdFx0LmFkZENsYXNzKG91dGdvaW5nKVxyXG5cdFx0XHRcdC5vbmUoJ3dlYmtpdEFuaW1hdGlvbkVuZCBtb3pBbmltYXRpb25FbmQgTVNBbmltYXRpb25FbmQgb2FuaW1hdGlvbmVuZCBhbmltYXRpb25lbmQnLCBjbGVhcik7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGluY29taW5nKSB7XHJcblx0XHRcdG5leHQuYWRkQ2xhc3MoJ2FuaW1hdGVkIG93bC1hbmltYXRlZC1pbicpXHJcblx0XHRcdFx0LmFkZENsYXNzKGluY29taW5nKVxyXG5cdFx0XHRcdC5vbmUoJ3dlYmtpdEFuaW1hdGlvbkVuZCBtb3pBbmltYXRpb25FbmQgTVNBbmltYXRpb25FbmQgb2FuaW1hdGlvbmVuZCBhbmltYXRpb25lbmQnLCBjbGVhcik7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0QW5pbWF0ZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbihlKSB7XHJcblx0XHQkKGUudGFyZ2V0KS5jc3MoIHsgJ2xlZnQnOiAnJyB9IClcclxuXHRcdFx0LnJlbW92ZUNsYXNzKCdhbmltYXRlZCBvd2wtYW5pbWF0ZWQtb3V0IG93bC1hbmltYXRlZC1pbicpXHJcblx0XHRcdC5yZW1vdmVDbGFzcyh0aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZUluKVxyXG5cdFx0XHQucmVtb3ZlQ2xhc3ModGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVPdXQpO1xyXG5cdFx0dGhpcy5jb3JlLnRyYW5zaXRpb25FbmQoKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIERlc3Ryb3lzIHRoZSBwbHVnaW4uXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdEFuaW1hdGUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBoYW5kbGVyLCBwcm9wZXJ0eTtcclxuXHJcblx0XHRmb3IgKGhhbmRsZXIgaW4gdGhpcy5oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLmNvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuaGFuZGxlcnNbaGFuZGxlcl0pO1xyXG5cdFx0fVxyXG5cdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xyXG5cdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQkLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuQW5pbWF0ZSA9IEFuaW1hdGU7XHJcblxyXG59KSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XHJcblxyXG4vKipcclxuICogQXV0b3BsYXkgUGx1Z2luXHJcbiAqIEB2ZXJzaW9uIDIuMC4wXHJcbiAqIEBhdXRob3IgQmFydG9zeiBXb2pjaWVjaG93c2tpXHJcbiAqIEBsaWNlbnNlIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxyXG4gKi9cclxuOyhmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcclxuXHJcblx0LyoqXHJcblx0ICogQ3JlYXRlcyB0aGUgYXV0b3BsYXkgcGx1Z2luLlxyXG5cdCAqIEBjbGFzcyBUaGUgQXV0b3BsYXkgUGx1Z2luXHJcblx0ICogQHBhcmFtIHtPd2x9IHNjb3BlIC0gVGhlIE93bCBDYXJvdXNlbFxyXG5cdCAqL1xyXG5cdHZhciBBdXRvcGxheSA9IGZ1bmN0aW9uKHNjb3BlKSB7XHJcblx0XHR0aGlzLmNvcmUgPSBzY29wZTtcclxuXHRcdHRoaXMuY29yZS5vcHRpb25zID0gJC5leHRlbmQoe30sIEF1dG9wbGF5LkRlZmF1bHRzLCB0aGlzLmNvcmUub3B0aW9ucyk7XHJcblxyXG5cdFx0dGhpcy5oYW5kbGVycyA9IHtcclxuXHRcdFx0J3RyYW5zbGF0ZWQub3dsLmNhcm91c2VsIHJlZnJlc2hlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHRoaXMuYXV0b3BsYXkoKTtcclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdwbGF5Lm93bC5hdXRvcGxheSc6ICQucHJveHkoZnVuY3Rpb24oZSwgdCwgcykge1xyXG5cdFx0XHRcdHRoaXMucGxheSh0LCBzKTtcclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdzdG9wLm93bC5hdXRvcGxheSc6ICQucHJveHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dGhpcy5zdG9wKCk7XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQnbW91c2VvdmVyLm93bC5hdXRvcGxheSc6ICQucHJveHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMuY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UpIHtcclxuXHRcdFx0XHRcdHRoaXMucGF1c2UoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQnbW91c2VsZWF2ZS5vd2wuYXV0b3BsYXknOiAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICh0aGlzLmNvcmUuc2V0dGluZ3MuYXV0b3BsYXlIb3ZlclBhdXNlKSB7XHJcblx0XHRcdFx0XHR0aGlzLmF1dG9wbGF5KCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKVxyXG5cdFx0fTtcclxuXHJcblx0XHR0aGlzLmNvcmUuJGVsZW1lbnQub24odGhpcy5oYW5kbGVycyk7XHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogRGVmYXVsdCBvcHRpb25zLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRBdXRvcGxheS5EZWZhdWx0cyA9IHtcclxuXHRcdGF1dG9wbGF5OiBmYWxzZSxcclxuXHRcdGF1dG9wbGF5VGltZW91dDogNTAwMCxcclxuXHRcdGF1dG9wbGF5SG92ZXJQYXVzZTogZmFsc2UsXHJcblx0XHRhdXRvcGxheVNwZWVkOiBmYWxzZVxyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAdG9kbyBNdXN0IGJlIGRvY3VtZW50ZWQuXHJcblx0ICovXHJcblx0QXV0b3BsYXkucHJvdG90eXBlLmF1dG9wbGF5ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRpZiAodGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5ICYmICF0aGlzLmNvcmUuc3RhdGUudmlkZW9QbGF5KSB7XHJcblx0XHRcdHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xyXG5cclxuXHRcdFx0dGhpcy5pbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbCgkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHRoaXMucGxheSgpO1xyXG5cdFx0XHR9LCB0aGlzKSwgdGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5VGltZW91dCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTdGFydHMgdGhlIGF1dG9wbGF5LlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3RpbWVvdXRdIC0gLi4uXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSAuLi5cclxuXHQgKiBAcmV0dXJucyB7Qm9vbGVhbnx1bmRlZmluZWR9IC0gLi4uXHJcblx0ICogQHRvZG8gTXVzdCBiZSBkb2N1bWVudGVkLlxyXG5cdCAqL1xyXG5cdEF1dG9wbGF5LnByb3RvdHlwZS5wbGF5ID0gZnVuY3Rpb24odGltZW91dCwgc3BlZWQpIHtcclxuXHRcdC8vIGlmIHRhYiBpcyBpbmFjdGl2ZSAtIGRvZXNudCB3b3JrIGluIDxJRTEwXHJcblx0XHRpZiAoZG9jdW1lbnQuaGlkZGVuID09PSB0cnVlKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5jb3JlLnN0YXRlLmlzVG91Y2ggfHwgdGhpcy5jb3JlLnN0YXRlLmlzU2Nyb2xsaW5nXHJcblx0XHRcdHx8IHRoaXMuY29yZS5zdGF0ZS5pc1N3aXBpbmcgfHwgdGhpcy5jb3JlLnN0YXRlLmluTW90aW9uKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5ID09PSBmYWxzZSkge1xyXG5cdFx0XHR3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuY29yZS5uZXh0KHRoaXMuY29yZS5zZXR0aW5ncy5hdXRvcGxheVNwZWVkKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBTdG9wcyB0aGUgYXV0b3BsYXkuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdEF1dG9wbGF5LnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24oKSB7XHJcblx0XHR3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBQYXVzZXMgdGhlIGF1dG9wbGF5LlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRBdXRvcGxheS5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbigpIHtcclxuXHRcdHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xyXG5cdH07XHJcblxyXG5cdC8qKlxyXG5cdCAqIERlc3Ryb3lzIHRoZSBwbHVnaW4uXHJcblx0ICovXHJcblx0QXV0b3BsYXkucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBoYW5kbGVyLCBwcm9wZXJ0eTtcclxuXHJcblx0XHR3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcclxuXHJcblx0XHRmb3IgKGhhbmRsZXIgaW4gdGhpcy5oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLmNvcmUuJGVsZW1lbnQub2ZmKGhhbmRsZXIsIHRoaXMuaGFuZGxlcnNbaGFuZGxlcl0pO1xyXG5cdFx0fVxyXG5cdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xyXG5cdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQkLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuYXV0b3BsYXkgPSBBdXRvcGxheTtcclxuXHJcbn0pKHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuXHJcbi8qKlxyXG4gKiBOYXZpZ2F0aW9uIFBsdWdpblxyXG4gKiBAdmVyc2lvbiAyLjAuMFxyXG4gKiBAYXV0aG9yIEFydHVzIEtvbGFub3dza2lcclxuICogQGxpY2Vuc2UgVGhlIE1JVCBMaWNlbnNlIChNSVQpXHJcbiAqL1xyXG47KGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0LyoqXHJcblx0ICogQ3JlYXRlcyB0aGUgbmF2aWdhdGlvbiBwbHVnaW4uXHJcblx0ICogQGNsYXNzIFRoZSBOYXZpZ2F0aW9uIFBsdWdpblxyXG5cdCAqIEBwYXJhbSB7T3dsfSBjYXJvdXNlbCAtIFRoZSBPd2wgQ2Fyb3VzZWwuXHJcblx0ICovXHJcblx0dmFyIE5hdmlnYXRpb24gPSBmdW5jdGlvbihjYXJvdXNlbCkge1xyXG5cdFx0LyoqXHJcblx0XHQgKiBSZWZlcmVuY2UgdG8gdGhlIGNvcmUuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7T3dsfVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl9jb3JlID0gY2Fyb3VzZWw7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgcGx1Z2luIGlzIGluaXRpYWxpemVkIG9yIG5vdC5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtCb29sZWFufVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogVGhlIGN1cnJlbnQgcGFnaW5nIGluZGV4ZXMuXHJcblx0XHQgKiBAcHJvdGVjdGVkXHJcblx0XHQgKiBAdHlwZSB7QXJyYXl9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX3BhZ2VzID0gW107XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBBbGwgRE9NIGVsZW1lbnRzIG9mIHRoZSB1c2VyIGludGVyZmFjZS5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPYmplY3R9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2NvbnRyb2xzID0ge307XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBNYXJrdXAgZm9yIGFuIGluZGljYXRvci5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtBcnJheS48U3RyaW5nPn1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fdGVtcGxhdGVzID0gW107XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBUaGUgY2Fyb3VzZWwgZWxlbWVudC5cclxuXHRcdCAqIEB0eXBlIHtqUXVlcnl9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuJGVsZW1lbnQgPSB0aGlzLl9jb3JlLiRlbGVtZW50O1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogT3ZlcnJpZGRlbiBtZXRob2RzIG9mIHRoZSBjYXJvdXNlbC5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPYmplY3R9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX292ZXJyaWRlcyA9IHtcclxuXHRcdFx0bmV4dDogdGhpcy5fY29yZS5uZXh0LFxyXG5cdFx0XHRwcmV2OiB0aGlzLl9jb3JlLnByZXYsXHJcblx0XHRcdHRvOiB0aGlzLl9jb3JlLnRvXHJcblx0XHR9O1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogQWxsIGV2ZW50IGhhbmRsZXJzLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge09iamVjdH1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5faGFuZGxlcnMgPSB7XHJcblx0XHRcdCdwcmVwYXJlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSkge1xyXG5cdFx0XHRcdFx0dGhpcy5fdGVtcGxhdGVzLnB1c2goJChlLmNvbnRlbnQpLmZpbmQoJ1tkYXRhLWRvdF0nKS5hbmRTZWxmKCdbZGF0YS1kb3RdJykuYXR0cignZGF0YS1kb3QnKSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKSxcclxuXHRcdFx0J2FkZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSkge1xyXG5cdFx0XHRcdFx0dGhpcy5fdGVtcGxhdGVzLnNwbGljZShlLnBvc2l0aW9uLCAwLCAkKGUuY29udGVudCkuZmluZCgnW2RhdGEtZG90XScpLmFuZFNlbGYoJ1tkYXRhLWRvdF0nKS5hdHRyKCdkYXRhLWRvdCcpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQncmVtb3ZlLm93bC5jYXJvdXNlbCBwcmVwYXJlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSkge1xyXG5cdFx0XHRcdFx0dGhpcy5fdGVtcGxhdGVzLnNwbGljZShlLnBvc2l0aW9uLCAxKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQnY2hhbmdlLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmIChlLnByb3BlcnR5Lm5hbWUgPT0gJ3Bvc2l0aW9uJykge1xyXG5cdFx0XHRcdFx0aWYgKCF0aGlzLl9jb3JlLnN0YXRlLnJldmVydCAmJiAhdGhpcy5fY29yZS5zZXR0aW5ncy5sb29wICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MubmF2UmV3aW5kKSB7XHJcblx0XHRcdFx0XHRcdHZhciBjdXJyZW50ID0gdGhpcy5fY29yZS5jdXJyZW50KCksXHJcblx0XHRcdFx0XHRcdFx0bWF4aW11bSA9IHRoaXMuX2NvcmUubWF4aW11bSgpLFxyXG5cdFx0XHRcdFx0XHRcdG1pbmltdW0gPSB0aGlzLl9jb3JlLm1pbmltdW0oKTtcclxuXHRcdFx0XHRcdFx0ZS5kYXRhID0gZS5wcm9wZXJ0eS52YWx1ZSA+IG1heGltdW1cclxuXHRcdFx0XHRcdFx0XHQ/IGN1cnJlbnQgPj0gbWF4aW11bSA/IG1pbmltdW0gOiBtYXhpbXVtXHJcblx0XHRcdFx0XHRcdFx0OiBlLnByb3BlcnR5LnZhbHVlIDwgbWluaW11bSA/IG1heGltdW0gOiBlLnByb3BlcnR5LnZhbHVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgdGhpcyksXHJcblx0XHRcdCdjaGFuZ2VkLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmIChlLnByb3BlcnR5Lm5hbWUgPT0gJ3Bvc2l0aW9uJykge1xyXG5cdFx0XHRcdFx0dGhpcy5kcmF3KCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKSxcclxuXHRcdFx0J3JlZnJlc2hlZC5vd2wuY2Fyb3VzZWwnOiAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICghdGhpcy5faW5pdGlhbGl6ZWQpIHtcclxuXHRcdFx0XHRcdHRoaXMuaW5pdGlhbGl6ZSgpO1xyXG5cdFx0XHRcdFx0dGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR0aGlzLl9jb3JlLnRyaWdnZXIoJ3JlZnJlc2gnLCBudWxsLCAnbmF2aWdhdGlvbicpO1xyXG5cdFx0XHRcdHRoaXMudXBkYXRlKCk7XHJcblx0XHRcdFx0dGhpcy5kcmF3KCk7XHJcblx0XHRcdFx0dGhpcy5fY29yZS50cmlnZ2VyKCdyZWZyZXNoZWQnLCBudWxsLCAnbmF2aWdhdGlvbicpO1xyXG5cdFx0XHR9LCB0aGlzKVxyXG5cdFx0fTtcclxuXHJcblx0XHQvLyBzZXQgZGVmYXVsdCBvcHRpb25zXHJcblx0XHR0aGlzLl9jb3JlLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgTmF2aWdhdGlvbi5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKTtcclxuXHJcblx0XHQvLyByZWdpc3RlciBldmVudCBoYW5kbGVyc1xyXG5cdFx0dGhpcy4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqIEB0b2RvIFJlbmFtZSBgc2xpZGVCeWAgdG8gYG5hdkJ5YFxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24uRGVmYXVsdHMgPSB7XHJcblx0XHRuYXY6IGZhbHNlLFxyXG5cdFx0bmF2UmV3aW5kOiB0cnVlLFxyXG5cdFx0bmF2VGV4dDogWyAncHJldicsICduZXh0JyBdLFxyXG5cdFx0bmF2U3BlZWQ6IGZhbHNlLFxyXG5cdFx0bmF2RWxlbWVudDogJ2RpdicsXHJcblx0XHRuYXZDb250YWluZXI6IGZhbHNlLFxyXG5cdFx0bmF2Q29udGFpbmVyQ2xhc3M6ICdvd2wtbmF2JyxcclxuXHRcdG5hdkNsYXNzOiBbICdvd2wtcHJldicsICdvd2wtbmV4dCcgXSxcclxuXHRcdHNsaWRlQnk6IDEsXHJcblx0XHRkb3RDbGFzczogJ293bC1kb3QnLFxyXG5cdFx0ZG90c0NsYXNzOiAnb3dsLWRvdHMnLFxyXG5cdFx0ZG90czogdHJ1ZSxcclxuXHRcdGRvdHNFYWNoOiBmYWxzZSxcclxuXHRcdGRvdERhdGE6IGZhbHNlLFxyXG5cdFx0ZG90c1NwZWVkOiBmYWxzZSxcclxuXHRcdGRvdHNDb250YWluZXI6IGZhbHNlLFxyXG5cdFx0Y29udHJvbHNDbGFzczogJ293bC1jb250cm9scydcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEluaXRpYWxpemVzIHRoZSBsYXlvdXQgb2YgdGhlIHBsdWdpbiBhbmQgZXh0ZW5kcyB0aGUgY2Fyb3VzZWwuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24ucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciAkY29udGFpbmVyLCBvdmVycmlkZSxcclxuXHRcdFx0b3B0aW9ucyA9IHRoaXMuX2NvcmUuc2V0dGluZ3M7XHJcblxyXG5cdFx0Ly8gY3JlYXRlIHRoZSBpbmRpY2F0b3IgdGVtcGxhdGVcclxuXHRcdGlmICghb3B0aW9ucy5kb3RzRGF0YSkge1xyXG5cdFx0XHR0aGlzLl90ZW1wbGF0ZXMgPSBbICQoJzxkaXY+JylcclxuXHRcdFx0XHQuYWRkQ2xhc3Mob3B0aW9ucy5kb3RDbGFzcylcclxuXHRcdFx0XHQuYXBwZW5kKCQoJzxzcGFuPicpKVxyXG5cdFx0XHRcdC5wcm9wKCdvdXRlckhUTUwnKSBdO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGNyZWF0ZSBjb250cm9scyBjb250YWluZXIgaWYgbmVlZGVkXHJcblx0XHRpZiAoIW9wdGlvbnMubmF2Q29udGFpbmVyIHx8ICFvcHRpb25zLmRvdHNDb250YWluZXIpIHtcclxuXHRcdFx0dGhpcy5fY29udHJvbHMuJGNvbnRhaW5lciA9ICQoJzxkaXY+JylcclxuXHRcdFx0XHQuYWRkQ2xhc3Mob3B0aW9ucy5jb250cm9sc0NsYXNzKVxyXG5cdFx0XHRcdC5hcHBlbmRUbyh0aGlzLiRlbGVtZW50KTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBjcmVhdGUgRE9NIHN0cnVjdHVyZSBmb3IgYWJzb2x1dGUgbmF2aWdhdGlvblxyXG5cdFx0dGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMgPSBvcHRpb25zLmRvdHNDb250YWluZXIgPyAkKG9wdGlvbnMuZG90c0NvbnRhaW5lcilcclxuXHRcdFx0OiAkKCc8ZGl2PicpLmhpZGUoKS5hZGRDbGFzcyhvcHRpb25zLmRvdHNDbGFzcykuYXBwZW5kVG8odGhpcy5fY29udHJvbHMuJGNvbnRhaW5lcik7XHJcblxyXG5cdFx0dGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMub24oJ2NsaWNrJywgJ2RpdicsICQucHJveHkoZnVuY3Rpb24oZSkge1xyXG5cdFx0XHR2YXIgaW5kZXggPSAkKGUudGFyZ2V0KS5wYXJlbnQoKS5pcyh0aGlzLl9jb250cm9scy4kaW5kaWNhdG9ycylcclxuXHRcdFx0XHQ/ICQoZS50YXJnZXQpLmluZGV4KCkgOiAkKGUudGFyZ2V0KS5wYXJlbnQoKS5pbmRleCgpO1xyXG5cclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0dGhpcy50byhpbmRleCwgb3B0aW9ucy5kb3RzU3BlZWQpO1xyXG5cdFx0fSwgdGhpcykpO1xyXG5cclxuXHRcdC8vIGNyZWF0ZSBET00gc3RydWN0dXJlIGZvciByZWxhdGl2ZSBuYXZpZ2F0aW9uXHJcblx0XHQkY29udGFpbmVyID0gb3B0aW9ucy5uYXZDb250YWluZXIgPyAkKG9wdGlvbnMubmF2Q29udGFpbmVyKVxyXG5cdFx0XHQ6ICQoJzxkaXY+JykuYWRkQ2xhc3Mob3B0aW9ucy5uYXZDb250YWluZXJDbGFzcykucHJlcGVuZFRvKHRoaXMuX2NvbnRyb2xzLiRjb250YWluZXIpO1xyXG5cclxuXHRcdHRoaXMuX2NvbnRyb2xzLiRuZXh0ID0gJCgnPCcgKyBvcHRpb25zLm5hdkVsZW1lbnQgKyAnPicpO1xyXG5cdFx0dGhpcy5fY29udHJvbHMuJHByZXZpb3VzID0gdGhpcy5fY29udHJvbHMuJG5leHQuY2xvbmUoKTtcclxuXHJcblx0XHR0aGlzLl9jb250cm9scy4kcHJldmlvdXNcclxuXHRcdFx0LmFkZENsYXNzKG9wdGlvbnMubmF2Q2xhc3NbMF0pXHJcblx0XHRcdC5odG1sKG9wdGlvbnMubmF2VGV4dFswXSlcclxuXHRcdFx0LmhpZGUoKVxyXG5cdFx0XHQucHJlcGVuZFRvKCRjb250YWluZXIpXHJcblx0XHRcdC5vbignY2xpY2snLCAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHR0aGlzLnByZXYob3B0aW9ucy5uYXZTcGVlZCk7XHJcblx0XHRcdH0sIHRoaXMpKTtcclxuXHRcdHRoaXMuX2NvbnRyb2xzLiRuZXh0XHJcblx0XHRcdC5hZGRDbGFzcyhvcHRpb25zLm5hdkNsYXNzWzFdKVxyXG5cdFx0XHQuaHRtbChvcHRpb25zLm5hdlRleHRbMV0pXHJcblx0XHRcdC5oaWRlKClcclxuXHRcdFx0LmFwcGVuZFRvKCRjb250YWluZXIpXHJcblx0XHRcdC5vbignY2xpY2snLCAkLnByb3h5KGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHR0aGlzLm5leHQob3B0aW9ucy5uYXZTcGVlZCk7XHJcblx0XHRcdH0sIHRoaXMpKTtcclxuXHJcblx0XHQvLyBvdmVycmlkZSBwdWJsaWMgbWV0aG9kcyBvZiB0aGUgY2Fyb3VzZWxcclxuXHRcdGZvciAob3ZlcnJpZGUgaW4gdGhpcy5fb3ZlcnJpZGVzKSB7XHJcblx0XHRcdHRoaXMuX2NvcmVbb3ZlcnJpZGVdID0gJC5wcm94eSh0aGlzW292ZXJyaWRlXSwgdGhpcyk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKi9cclxuXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaGFuZGxlciwgY29udHJvbCwgcHJvcGVydHksIG92ZXJyaWRlO1xyXG5cclxuXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLiRlbGVtZW50Lm9mZihoYW5kbGVyLCB0aGlzLl9oYW5kbGVyc1toYW5kbGVyXSk7XHJcblx0XHR9XHJcblx0XHRmb3IgKGNvbnRyb2wgaW4gdGhpcy5fY29udHJvbHMpIHtcclxuXHRcdFx0dGhpcy5fY29udHJvbHNbY29udHJvbF0ucmVtb3ZlKCk7XHJcblx0XHR9XHJcblx0XHRmb3IgKG92ZXJyaWRlIGluIHRoaXMub3ZlcmlkZXMpIHtcclxuXHRcdFx0dGhpcy5fY29yZVtvdmVycmlkZV0gPSB0aGlzLl9vdmVycmlkZXNbb3ZlcnJpZGVdO1xyXG5cdFx0fVxyXG5cdFx0Zm9yIChwcm9wZXJ0eSBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkge1xyXG5cdFx0XHR0eXBlb2YgdGhpc1twcm9wZXJ0eV0gIT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1twcm9wZXJ0eV0gPSBudWxsKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFVwZGF0ZXMgdGhlIGludGVybmFsIHN0YXRlLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKi9cclxuXHROYXZpZ2F0aW9uLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBpLCBqLCBrLFxyXG5cdFx0XHRvcHRpb25zID0gdGhpcy5fY29yZS5zZXR0aW5ncyxcclxuXHRcdFx0bG93ZXIgPSB0aGlzLl9jb3JlLmNsb25lcygpLmxlbmd0aCAvIDIsXHJcblx0XHRcdHVwcGVyID0gbG93ZXIgKyB0aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoLFxyXG5cdFx0XHRzaXplID0gb3B0aW9ucy5jZW50ZXIgfHwgb3B0aW9ucy5hdXRvV2lkdGggfHwgb3B0aW9ucy5kb3REYXRhXHJcblx0XHRcdFx0PyAxIDogb3B0aW9ucy5kb3RzRWFjaCB8fCBvcHRpb25zLml0ZW1zO1xyXG5cclxuXHRcdGlmIChvcHRpb25zLnNsaWRlQnkgIT09ICdwYWdlJykge1xyXG5cdFx0XHRvcHRpb25zLnNsaWRlQnkgPSBNYXRoLm1pbihvcHRpb25zLnNsaWRlQnksIG9wdGlvbnMuaXRlbXMpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChvcHRpb25zLmRvdHMgfHwgb3B0aW9ucy5zbGlkZUJ5ID09ICdwYWdlJykge1xyXG5cdFx0XHR0aGlzLl9wYWdlcyA9IFtdO1xyXG5cclxuXHRcdFx0Zm9yIChpID0gbG93ZXIsIGogPSAwLCBrID0gMDsgaSA8IHVwcGVyOyBpKyspIHtcclxuXHRcdFx0XHRpZiAoaiA+PSBzaXplIHx8IGogPT09IDApIHtcclxuXHRcdFx0XHRcdHRoaXMuX3BhZ2VzLnB1c2goe1xyXG5cdFx0XHRcdFx0XHRzdGFydDogaSAtIGxvd2VyLFxyXG5cdFx0XHRcdFx0XHRlbmQ6IGkgLSBsb3dlciArIHNpemUgLSAxXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGogPSAwLCArK2s7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGogKz0gdGhpcy5fY29yZS5tZXJnZXJzKHRoaXMuX2NvcmUucmVsYXRpdmUoaSkpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEcmF3cyB0aGUgdXNlciBpbnRlcmZhY2UuXHJcblx0ICogQHRvZG8gVGhlIG9wdGlvbiBgZG90RGF0YWAgd29udCB3b3JrLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKi9cclxuXHROYXZpZ2F0aW9uLnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgZGlmZmVyZW5jZSwgaSwgaHRtbCA9ICcnLFxyXG5cdFx0XHRvcHRpb25zID0gdGhpcy5fY29yZS5zZXR0aW5ncyxcclxuXHRcdFx0JGl0ZW1zID0gdGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKSxcclxuXHRcdFx0aW5kZXggPSB0aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKTtcclxuXHJcblx0XHRpZiAob3B0aW9ucy5uYXYgJiYgIW9wdGlvbnMubG9vcCAmJiAhb3B0aW9ucy5uYXZSZXdpbmQpIHtcclxuXHRcdFx0dGhpcy5fY29udHJvbHMuJHByZXZpb3VzLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcsIGluZGV4IDw9IDApO1xyXG5cdFx0XHR0aGlzLl9jb250cm9scy4kbmV4dC50b2dnbGVDbGFzcygnZGlzYWJsZWQnLCBpbmRleCA+PSB0aGlzLl9jb3JlLm1heGltdW0oKSk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5fY29udHJvbHMuJHByZXZpb3VzLnRvZ2dsZShvcHRpb25zLm5hdik7XHJcblx0XHR0aGlzLl9jb250cm9scy4kbmV4dC50b2dnbGUob3B0aW9ucy5uYXYpO1xyXG5cclxuXHRcdGlmIChvcHRpb25zLmRvdHMpIHtcclxuXHRcdFx0ZGlmZmVyZW5jZSA9IHRoaXMuX3BhZ2VzLmxlbmd0aCAtIHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkubGVuZ3RoO1xyXG5cclxuXHRcdFx0aWYgKG9wdGlvbnMuZG90RGF0YSAmJiBkaWZmZXJlbmNlICE9PSAwKSB7XHJcblx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRcdGh0bWwgKz0gdGhpcy5fdGVtcGxhdGVzW3RoaXMuX2NvcmUucmVsYXRpdmUoaSldO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR0aGlzLl9jb250cm9scy4kaW5kaWNhdG9ycy5odG1sKGh0bWwpO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGRpZmZlcmVuY2UgPiAwKSB7XHJcblx0XHRcdFx0aHRtbCA9IG5ldyBBcnJheShkaWZmZXJlbmNlICsgMSkuam9pbih0aGlzLl90ZW1wbGF0ZXNbMF0pO1xyXG5cdFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmFwcGVuZChodG1sKTtcclxuXHRcdFx0fSBlbHNlIGlmIChkaWZmZXJlbmNlIDwgMCkge1xyXG5cdFx0XHRcdHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkuc2xpY2UoZGlmZmVyZW5jZSkucmVtb3ZlKCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmZpbmQoJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcblx0XHRcdHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkuZXEoJC5pbkFycmF5KHRoaXMuY3VycmVudCgpLCB0aGlzLl9wYWdlcykpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLl9jb250cm9scy4kaW5kaWNhdG9ycy50b2dnbGUob3B0aW9ucy5kb3RzKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEV4dGVuZHMgZXZlbnQgZGF0YS5cclxuXHQgKiBAcHJvdGVjdGVkXHJcblx0ICogQHBhcmFtIHtFdmVudH0gZXZlbnQgLSBUaGUgZXZlbnQgb2JqZWN0IHdoaWNoIGdldHMgdGhyb3duLlxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24ucHJvdG90eXBlLm9uVHJpZ2dlciA9IGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHR2YXIgc2V0dGluZ3MgPSB0aGlzLl9jb3JlLnNldHRpbmdzO1xyXG5cclxuXHRcdGV2ZW50LnBhZ2UgPSB7XHJcblx0XHRcdGluZGV4OiAkLmluQXJyYXkodGhpcy5jdXJyZW50KCksIHRoaXMuX3BhZ2VzKSxcclxuXHRcdFx0Y291bnQ6IHRoaXMuX3BhZ2VzLmxlbmd0aCxcclxuXHRcdFx0c2l6ZTogc2V0dGluZ3MgJiYgKHNldHRpbmdzLmNlbnRlciB8fCBzZXR0aW5ncy5hdXRvV2lkdGggfHwgc2V0dGluZ3MuZG90RGF0YVxyXG5cdFx0XHRcdD8gMSA6IHNldHRpbmdzLmRvdHNFYWNoIHx8IHNldHRpbmdzLml0ZW1zKVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEdldHMgdGhlIGN1cnJlbnQgcGFnZSBwb3NpdGlvbiBvZiB0aGUgY2Fyb3VzZWwuXHJcblx0ICogQHByb3RlY3RlZFxyXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9XHJcblx0ICovXHJcblx0TmF2aWdhdGlvbi5wcm90b3R5cGUuY3VycmVudCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGluZGV4ID0gdGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSk7XHJcblx0XHRyZXR1cm4gJC5ncmVwKHRoaXMuX3BhZ2VzLCBmdW5jdGlvbihvKSB7XHJcblx0XHRcdHJldHVybiBvLnN0YXJ0IDw9IGluZGV4ICYmIG8uZW5kID49IGluZGV4O1xyXG5cdFx0fSkucG9wKCk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBHZXRzIHRoZSBjdXJyZW50IHN1Y2Nlc29yL3ByZWRlY2Vzc29yIHBvc2l0aW9uLlxyXG5cdCAqIEBwcm90ZWN0ZWRcclxuXHQgKiBAcmV0dXJucyB7TnVtYmVyfVxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24ucHJvdG90eXBlLmdldFBvc2l0aW9uID0gZnVuY3Rpb24oc3VjY2Vzc29yKSB7XHJcblx0XHR2YXIgcG9zaXRpb24sIGxlbmd0aCxcclxuXHRcdFx0b3B0aW9ucyA9IHRoaXMuX2NvcmUuc2V0dGluZ3M7XHJcblxyXG5cdFx0aWYgKG9wdGlvbnMuc2xpZGVCeSA9PSAncGFnZScpIHtcclxuXHRcdFx0cG9zaXRpb24gPSAkLmluQXJyYXkodGhpcy5jdXJyZW50KCksIHRoaXMuX3BhZ2VzKTtcclxuXHRcdFx0bGVuZ3RoID0gdGhpcy5fcGFnZXMubGVuZ3RoO1xyXG5cdFx0XHRzdWNjZXNzb3IgPyArK3Bvc2l0aW9uIDogLS1wb3NpdGlvbjtcclxuXHRcdFx0cG9zaXRpb24gPSB0aGlzLl9wYWdlc1soKHBvc2l0aW9uICUgbGVuZ3RoKSArIGxlbmd0aCkgJSBsZW5ndGhdLnN0YXJ0O1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cG9zaXRpb24gPSB0aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKTtcclxuXHRcdFx0bGVuZ3RoID0gdGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aDtcclxuXHRcdFx0c3VjY2Vzc29yID8gcG9zaXRpb24gKz0gb3B0aW9ucy5zbGlkZUJ5IDogcG9zaXRpb24gLT0gb3B0aW9ucy5zbGlkZUJ5O1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHBvc2l0aW9uO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogU2xpZGVzIHRvIHRoZSBuZXh0IGl0ZW0gb3IgcGFnZS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZD1mYWxzZV0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24ucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbihzcGVlZCkge1xyXG5cdFx0JC5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHRoaXMuZ2V0UG9zaXRpb24odHJ1ZSksIHNwZWVkKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNsaWRlcyB0byB0aGUgcHJldmlvdXMgaXRlbSBvciBwYWdlLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NwZWVkPWZhbHNlXSAtIFRoZSB0aW1lIGluIG1pbGxpc2Vjb25kcyBmb3IgdGhlIHRyYW5zaXRpb24uXHJcblx0ICovXHJcblx0TmF2aWdhdGlvbi5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uKHNwZWVkKSB7XHJcblx0XHQkLnByb3h5KHRoaXMuX292ZXJyaWRlcy50bywgdGhpcy5fY29yZSkodGhpcy5nZXRQb3NpdGlvbihmYWxzZSksIHNwZWVkKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNsaWRlcyB0byB0aGUgc3BlY2lmaWVkIGl0ZW0gb3IgcGFnZS5cclxuXHQgKiBAcHVibGljXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IHBvc2l0aW9uIC0gVGhlIHBvc2l0aW9uIG9mIHRoZSBpdGVtIG9yIHBhZ2UuXHJcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFtzcGVlZF0gLSBUaGUgdGltZSBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZSB0cmFuc2l0aW9uLlxyXG5cdCAqIEBwYXJhbSB7Qm9vbGVhbn0gW3N0YW5kYXJkPWZhbHNlXSAtIFdoZXRoZXIgdG8gdXNlIHRoZSBzdGFuZGFyZCBiZWhhdmlvdXIgb3Igbm90LlxyXG5cdCAqL1xyXG5cdE5hdmlnYXRpb24ucHJvdG90eXBlLnRvID0gZnVuY3Rpb24ocG9zaXRpb24sIHNwZWVkLCBzdGFuZGFyZCkge1xyXG5cdFx0dmFyIGxlbmd0aDtcclxuXHJcblx0XHRpZiAoIXN0YW5kYXJkKSB7XHJcblx0XHRcdGxlbmd0aCA9IHRoaXMuX3BhZ2VzLmxlbmd0aDtcclxuXHRcdFx0JC5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHRoaXMuX3BhZ2VzWygocG9zaXRpb24gJSBsZW5ndGgpICsgbGVuZ3RoKSAlIGxlbmd0aF0uc3RhcnQsIHNwZWVkKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdCQucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLCB0aGlzLl9jb3JlKShwb3NpdGlvbiwgc3BlZWQpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0JC5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLk5hdmlnYXRpb24gPSBOYXZpZ2F0aW9uO1xyXG5cclxufSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xyXG5cclxuLyoqXHJcbiAqIEhhc2ggUGx1Z2luXHJcbiAqIEB2ZXJzaW9uIDIuMC4wXHJcbiAqIEBhdXRob3IgQXJ0dXMgS29sYW5vd3NraVxyXG4gKiBAbGljZW5zZSBUaGUgTUlUIExpY2Vuc2UgKE1JVClcclxuICovXHJcbjsoZnVuY3Rpb24oJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuXHQvKipcclxuXHQgKiBDcmVhdGVzIHRoZSBoYXNoIHBsdWdpbi5cclxuXHQgKiBAY2xhc3MgVGhlIEhhc2ggUGx1Z2luXHJcblx0ICogQHBhcmFtIHtPd2x9IGNhcm91c2VsIC0gVGhlIE93bCBDYXJvdXNlbFxyXG5cdCAqL1xyXG5cdHZhciBIYXNoID0gZnVuY3Rpb24oY2Fyb3VzZWwpIHtcclxuXHRcdC8qKlxyXG5cdFx0ICogUmVmZXJlbmNlIHRvIHRoZSBjb3JlLlxyXG5cdFx0ICogQHByb3RlY3RlZFxyXG5cdFx0ICogQHR5cGUge093bH1cclxuXHRcdCAqL1xyXG5cdFx0dGhpcy5fY29yZSA9IGNhcm91c2VsO1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogSGFzaCB0YWJsZSBmb3IgdGhlIGhhc2hlcy5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPYmplY3R9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2hhc2hlcyA9IHt9O1xyXG5cclxuXHRcdC8qKlxyXG5cdFx0ICogVGhlIGNhcm91c2VsIGVsZW1lbnQuXHJcblx0XHQgKiBAdHlwZSB7alF1ZXJ5fVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLiRlbGVtZW50ID0gdGhpcy5fY29yZS4kZWxlbWVudDtcclxuXHJcblx0XHQvKipcclxuXHRcdCAqIEFsbCBldmVudCBoYW5kbGVycy5cclxuXHRcdCAqIEBwcm90ZWN0ZWRcclxuXHRcdCAqIEB0eXBlIHtPYmplY3R9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xyXG5cdFx0XHQnaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5fY29yZS5zZXR0aW5ncy5zdGFydFBvc2l0aW9uID09ICdVUkxIYXNoJykge1xyXG5cdFx0XHRcdFx0JCh3aW5kb3cpLnRyaWdnZXIoJ2hhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb24nKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpLFxyXG5cdFx0XHQncHJlcGFyZWQub3dsLmNhcm91c2VsJzogJC5wcm94eShmdW5jdGlvbihlKSB7XHJcblx0XHRcdFx0dmFyIGhhc2ggPSAkKGUuY29udGVudCkuZmluZCgnW2RhdGEtaGFzaF0nKS5hbmRTZWxmKCdbZGF0YS1oYXNoXScpLmF0dHIoJ2RhdGEtaGFzaCcpO1xyXG5cdFx0XHRcdHRoaXMuX2hhc2hlc1toYXNoXSA9IGUuY29udGVudDtcclxuXHRcdFx0fSwgdGhpcylcclxuXHRcdH07XHJcblxyXG5cdFx0Ly8gc2V0IGRlZmF1bHQgb3B0aW9uc1xyXG5cdFx0dGhpcy5fY29yZS5vcHRpb25zID0gJC5leHRlbmQoe30sIEhhc2guRGVmYXVsdHMsIHRoaXMuX2NvcmUub3B0aW9ucyk7XHJcblxyXG5cdFx0Ly8gcmVnaXN0ZXIgdGhlIGV2ZW50IGhhbmRsZXJzXHJcblx0XHR0aGlzLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKTtcclxuXHJcblx0XHQvLyByZWdpc3RlciBldmVudCBsaXN0ZW5lciBmb3IgaGFzaCBuYXZpZ2F0aW9uXHJcblx0XHQkKHdpbmRvdykub24oJ2hhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb24nLCAkLnByb3h5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKSxcclxuXHRcdFx0XHRpdGVtcyA9IHRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCksXHJcblx0XHRcdFx0cG9zaXRpb24gPSB0aGlzLl9oYXNoZXNbaGFzaF0gJiYgaXRlbXMuaW5kZXgodGhpcy5faGFzaGVzW2hhc2hdKSB8fCAwO1xyXG5cclxuXHRcdFx0aWYgKCFoYXNoKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR0aGlzLl9jb3JlLnRvKHBvc2l0aW9uLCBmYWxzZSwgdHJ1ZSk7XHJcblx0XHR9LCB0aGlzKSk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEZWZhdWx0IG9wdGlvbnMuXHJcblx0ICogQHB1YmxpY1xyXG5cdCAqL1xyXG5cdEhhc2guRGVmYXVsdHMgPSB7XHJcblx0XHRVUkxoYXNoTGlzdGVuZXI6IGZhbHNlXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEZXN0cm95cyB0aGUgcGx1Z2luLlxyXG5cdCAqIEBwdWJsaWNcclxuXHQgKi9cclxuXHRIYXNoLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaGFuZGxlciwgcHJvcGVydHk7XHJcblxyXG5cdFx0JCh3aW5kb3cpLm9mZignaGFzaGNoYW5nZS5vd2wubmF2aWdhdGlvbicpO1xyXG5cclxuXHRcdGZvciAoaGFuZGxlciBpbiB0aGlzLl9oYW5kbGVycykge1xyXG5cdFx0XHR0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihoYW5kbGVyLCB0aGlzLl9oYW5kbGVyc1toYW5kbGVyXSk7XHJcblx0XHR9XHJcblx0XHRmb3IgKHByb3BlcnR5IGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSB7XHJcblx0XHRcdHR5cGVvZiB0aGlzW3Byb3BlcnR5XSAhPSAnZnVuY3Rpb24nICYmICh0aGlzW3Byb3BlcnR5XSA9IG51bGwpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0JC5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLkhhc2ggPSBIYXNoO1xyXG5cclxufSkod2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xyXG4iXX0=
