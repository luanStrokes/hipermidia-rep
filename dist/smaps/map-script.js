function GmapInit(){Gmap=$(".map-canvas"),Gmap.each(function(){var e=$(this),a="",t="",o=12,l=!1,i=!0,n=!0,p=google.maps.MapTypeId.ROADMAP,s="",r="",d=e.data("lat"),m=e.data("lng"),y=e.data("zoom"),c=e.data("type"),g=e.data("scrollwheel"),v=e.data("zoomcontrol"),f=e.data("hue"),T=e.data("title"),u=e.data("content");void 0!==y&&!1!==y&&(o=parseFloat(y)),void 0!==d&&!1!==d&&(a=parseFloat(d)),void 0!==m&&!1!==m&&(t=parseFloat(m)),null!=g&&(l=g),null!=v&&(i=v),void 0!==c&&!1!==c&&("satellite"==c?p=google.maps.MapTypeId.SATELLITE:"hybrid"==c?p=google.maps.MapTypeId.HYBRID:"terrain"==c&&(p=google.maps.MapTypeId.TERRAIN)),void 0!==T&&!1!==T&&(s=T),navigator.userAgent.match(/iPad|iPhone|Android/i)&&(n=!1);var h={zoom:o,scrollwheel:l,zoomControl:i,draggable:n,center:new google.maps.LatLng(a,t),mapTypeId:p},w=new google.maps.Map(e[0],h);void 0!==u&&!1!==u&&(r='<div class="map-data"><h6>'+s+'</h6><div class="map-content">'+u+"</div></div>");var I=new google.maps.InfoWindow({content:r}),b=new google.maps.Marker({position:new google.maps.LatLng(a,t),map:w,icon:"images/icons/map-marker.png",title:s});if(void 0!==u&&!1!==u&&google.maps.event.addListener(b,"click",function(){I.open(w,b)}),void 0!==f&&!1!==f){w.setOptions({styles:[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f0ede5"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#93c2ff"},{visibility:"on"}]}]})}})}function MapLoadScript(){var e=document.createElement("script");e.type="text/javascript",GmapInit(),document.body.appendChild(e)}window.onload=MapLoadScript;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC1zY3JpcHQuanMiXSwibmFtZXMiOlsiR21hcEluaXQiLCJHbWFwIiwiJCIsImVhY2giLCIkdGhpcyIsInRoaXMiLCJsYXQiLCJsbmciLCJ6b29tIiwic2Nyb2xsd2hlZWwiLCJ6b29tY29udHJvbCIsImRyYWdnYWJsZSIsIm1hcFR5cGUiLCJnb29nbGUiLCJtYXBzIiwiTWFwVHlwZUlkIiwiUk9BRE1BUCIsInRpdGxlIiwiY29udGVudFN0cmluZyIsImRhdGFMYXQiLCJkYXRhIiwiZGF0YUxuZyIsImRhdGFab29tIiwiZGF0YVR5cGUiLCJkYXRhU2Nyb2xsd2hlZWwiLCJkYXRhWm9vbWNvbnRyb2wiLCJkYXRhSHVlIiwiZGF0YVRpdGxlIiwiZGF0YUNvbnRlbnQiLCJ1bmRlZmluZWQiLCJwYXJzZUZsb2F0IiwiU0FURUxMSVRFIiwiSFlCUklEIiwiVEVSUkFJTiIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm1hdGNoIiwibWFwT3B0aW9ucyIsInpvb21Db250cm9sIiwiY2VudGVyIiwiTGF0TG5nIiwibWFwVHlwZUlkIiwibWFwIiwiTWFwIiwiaW5mb3dpbmRvdyIsIkluZm9XaW5kb3ciLCJjb250ZW50IiwibWFya2VyIiwiTWFya2VyIiwicG9zaXRpb24iLCJpY29uIiwiZXZlbnQiLCJhZGRMaXN0ZW5lciIsIm9wZW4iLCJzZXRPcHRpb25zIiwic3R5bGVzIiwiZmVhdHVyZVR5cGUiLCJlbGVtZW50VHlwZSIsInN0eWxlcnMiLCJjb2xvciIsInZpc2liaWxpdHkiLCJzYXR1cmF0aW9uIiwibGlnaHRuZXNzIiwiTWFwTG9hZFNjcmlwdCIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ3aW5kb3ciLCJvbmxvYWQiXSwibWFwcGluZ3MiOiJBQUtBLFNBQVNBLFdBQ05DLEtBQU9DLEVBQUUsZUFDVEQsS0FBS0UsS0FBSyxXQUNYLElBQUlDLEVBQWtCRixFQUFFRyxNQUN2QkMsRUFB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VyxDQUNQLENBQ0lDLE1BQVMsV0FFYixDQUNJQyxXQUFjLGNBVTlCLFNBQVNHLGdCQUNSLElBQUlDLEVBQVNDLFNBQVNDLGNBQWMsVUFDcENGLEVBQU9HLEtBQU8sa0JBQ2RuRSxXQUNBaUUsU0FBU0csS0FBS0MsWUFBWUwsR0EvSzNCTSxPQUFPQyxPQUFTUiIsImZpbGUiOiJtYXAtc2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkdvb2dsZSBNYXBcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cdFxyXG53aW5kb3cub25sb2FkID0gTWFwTG9hZFNjcmlwdDtcclxuZnVuY3Rpb24gR21hcEluaXQoKSB7XHJcblx0ICBHbWFwID0gJCgnLm1hcC1jYW52YXMnKTtcclxuXHQgIEdtYXAuZWFjaChmdW5jdGlvbigpIHtcclxuXHRcdHZhciAkdGhpcyAgICAgICAgICAgPSAkKHRoaXMpLFxyXG5cdFx0XHRsYXQgICAgICAgICAgICAgPSAnJyxcclxuXHRcdFx0bG5nICAgICAgICAgICAgID0gJycsXHJcblx0XHRcdHpvb20gICAgICAgICAgICA9IDEyLFxyXG5cdFx0XHRzY3JvbGx3aGVlbCAgICAgPSBmYWxzZSxcclxuXHRcdFx0em9vbWNvbnRyb2wgXHQ9IHRydWUsXHJcblx0XHRcdGRyYWdnYWJsZSAgICAgICA9IHRydWUsXHJcblx0XHRcdG1hcFR5cGUgICAgICAgICA9IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxyXG5cdFx0XHR0aXRsZSAgICAgICAgICAgPSAnJyxcclxuXHRcdFx0Y29udGVudFN0cmluZyAgID0gJycsXHJcblx0XHRcdGRhdGFMYXQgICAgICAgICA9ICR0aGlzLmRhdGEoJ2xhdCcpLFxyXG5cdFx0XHRkYXRhTG5nICAgICAgICAgPSAkdGhpcy5kYXRhKCdsbmcnKSxcclxuXHRcdFx0ZGF0YVpvb20gICAgICAgID0gJHRoaXMuZGF0YSgnem9vbScpLFxyXG5cdFx0XHRkYXRhVHlwZSAgICAgICAgPSAkdGhpcy5kYXRhKCd0eXBlJyksXHJcblx0XHRcdGRhdGFTY3JvbGx3aGVlbCA9ICR0aGlzLmRhdGEoJ3Njcm9sbHdoZWVsJyksXHJcblx0XHRcdGRhdGFab29tY29udHJvbCA9ICR0aGlzLmRhdGEoJ3pvb21jb250cm9sJyksXHJcblx0XHRcdGRhdGFIdWUgICAgICAgICA9ICR0aGlzLmRhdGEoJ2h1ZScpLFxyXG5cdFx0XHRkYXRhVGl0bGUgICAgICAgPSAkdGhpcy5kYXRhKCd0aXRsZScpLFxyXG5cdFx0XHRkYXRhQ29udGVudCAgICAgPSAkdGhpcy5kYXRhKCdjb250ZW50Jyk7XHJcblx0XHRcdFxyXG5cdFx0aWYoIGRhdGFab29tICE9PSB1bmRlZmluZWQgJiYgZGF0YVpvb20gIT09IGZhbHNlICkge1xyXG5cdFx0XHR6b29tID0gcGFyc2VGbG9hdChkYXRhWm9vbSk7XHJcblx0XHR9XHJcblx0XHRpZiggZGF0YUxhdCAhPT0gdW5kZWZpbmVkICYmIGRhdGFMYXQgIT09IGZhbHNlICkge1xyXG5cdFx0XHRsYXQgPSBwYXJzZUZsb2F0KGRhdGFMYXQpO1xyXG5cdFx0fVxyXG5cdFx0aWYoIGRhdGFMbmcgIT09IHVuZGVmaW5lZCAmJiBkYXRhTG5nICE9PSBmYWxzZSApIHtcclxuXHRcdFx0bG5nID0gcGFyc2VGbG9hdChkYXRhTG5nKTtcclxuXHRcdH1cclxuXHRcdGlmKCBkYXRhU2Nyb2xsd2hlZWwgIT09IHVuZGVmaW5lZCAmJiBkYXRhU2Nyb2xsd2hlZWwgIT09IG51bGwgKSB7XHJcblx0XHRcdHNjcm9sbHdoZWVsID0gZGF0YVNjcm9sbHdoZWVsO1xyXG5cdFx0fVxyXG5cdFx0aWYoIGRhdGFab29tY29udHJvbCAhPT0gdW5kZWZpbmVkICYmIGRhdGFab29tY29udHJvbCAhPT0gbnVsbCApIHtcclxuXHRcdFx0em9vbWNvbnRyb2wgPSBkYXRhWm9vbWNvbnRyb2w7XHJcblx0XHR9XHJcblx0XHRpZiggZGF0YVR5cGUgIT09IHVuZGVmaW5lZCAmJiBkYXRhVHlwZSAhPT0gZmFsc2UgKSB7XHJcblx0XHRcdGlmKCBkYXRhVHlwZSA9PSAnc2F0ZWxsaXRlJyApIHtcclxuXHRcdFx0XHRtYXBUeXBlID0gZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlNBVEVMTElURTtcclxuXHRcdFx0fSBlbHNlIGlmKCBkYXRhVHlwZSA9PSAnaHlicmlkJyApIHtcclxuXHRcdFx0XHRtYXBUeXBlID0gZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLkhZQlJJRDtcclxuXHRcdFx0fSBlbHNlIGlmKCBkYXRhVHlwZSA9PSAndGVycmFpbicgKSB7XHJcblx0XHRcdFx0bWFwVHlwZSA9IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5URVJSQUlOO1xyXG5cdFx0XHR9XHRcdCAgXHRcclxuXHRcdH1cclxuXHRcdGlmKCBkYXRhVGl0bGUgIT09IHVuZGVmaW5lZCAmJiBkYXRhVGl0bGUgIT09IGZhbHNlICkge1xyXG5cdFx0XHR0aXRsZSA9IGRhdGFUaXRsZTtcclxuXHRcdH1cclxuXHRcdGlmKCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUGFkfGlQaG9uZXxBbmRyb2lkL2kpICkge1xyXG5cdFx0XHRkcmFnZ2FibGUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0dmFyIG1hcE9wdGlvbnMgPSB7XHJcblx0XHQgIHpvb20gICAgICAgIDogem9vbSxcclxuXHRcdCAgc2Nyb2xsd2hlZWwgOiBzY3JvbGx3aGVlbCxcclxuXHRcdCAgem9vbUNvbnRyb2wgOiB6b29tY29udHJvbCxcclxuXHRcdCAgZHJhZ2dhYmxlICAgOiBkcmFnZ2FibGUsXHJcblx0XHQgIGNlbnRlciAgICAgIDogbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhsYXQsIGxuZyksXHJcblx0XHQgIG1hcFR5cGVJZCAgIDogbWFwVHlwZVxyXG5cdFx0fTtcdFx0XHJcblx0XHR2YXIgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcCgkdGhpc1swXSwgbWFwT3B0aW9ucyk7XHJcblx0XHRcclxuXHRcdHZhciBpbWFnZSA9ICdpbWFnZXMvaWNvbnMvbWFwLW1hcmtlci5wbmcnO1xyXG5cdFx0aWYoIGRhdGFDb250ZW50ICE9PSB1bmRlZmluZWQgJiYgZGF0YUNvbnRlbnQgIT09IGZhbHNlICkge1xyXG5cdFx0XHRjb250ZW50U3RyaW5nID0gJzxkaXYgY2xhc3M9XCJtYXAtZGF0YVwiPicgKyAnPGg2PicgKyB0aXRsZSArICc8L2g2PicgKyAnPGRpdiBjbGFzcz1cIm1hcC1jb250ZW50XCI+JyArIGRhdGFDb250ZW50ICsgJzwvZGl2PicgKyAnPC9kaXY+JztcclxuXHRcdH1cclxuXHRcdHZhciBpbmZvd2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coe1xyXG5cdFx0XHRjb250ZW50OiBjb250ZW50U3RyaW5nXHJcblx0XHR9KTtcclxuXHRcdFxyXG5cdFx0dmFyIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG5cdFx0ICBwb3NpdGlvbiA6IG5ldyBnb29nbGUubWFwcy5MYXRMbmcobGF0LCBsbmcpLFxyXG5cdFx0ICBtYXAgICAgICA6IG1hcCxcclxuXHRcdCAgaWNvbiAgICAgOiBpbWFnZSxcclxuXHRcdCAgdGl0bGUgICAgOiB0aXRsZVxyXG5cdFx0fSk7XHJcblx0XHRpZiggZGF0YUNvbnRlbnQgIT09IHVuZGVmaW5lZCAmJiBkYXRhQ29udGVudCAhPT0gZmFsc2UgKSB7XHJcblx0XHRcdGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKG1hcmtlciwgJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aW5mb3dpbmRvdy5vcGVuKG1hcCxtYXJrZXIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0aWYoIGRhdGFIdWUgIT09IHVuZGVmaW5lZCAmJiBkYXRhSHVlICE9PSBmYWxzZSApIHtcclxuXHRcdCAgdmFyIHN0eWxlcyA9IFtcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwiYWRtaW5pc3RyYXRpdmVcIixcclxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwibGFiZWxzLnRleHQuZmlsbFwiLFxyXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiY29sb3JcIjogXCIjNDQ0NDQ0XCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcImxhbmRzY2FwZVwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcImNvbG9yXCI6IFwiI2YwZWRlNVwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJwb2lcIixcclxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwiYWxsXCIsXHJcbiAgICAgICAgXCJzdHlsZXJzXCI6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmlsaXR5XCI6IFwib2ZmXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWRcIixcclxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwiYWxsXCIsXHJcbiAgICAgICAgXCJzdHlsZXJzXCI6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJzYXR1cmF0aW9uXCI6IC0xMDBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJsaWdodG5lc3NcIjogNDVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWQuaGlnaHdheVwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInZpc2liaWxpdHlcIjogXCJzaW1wbGlmaWVkXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWQuYXJ0ZXJpYWxcIixcclxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwibGFiZWxzLmljb25cIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInZpc2liaWxpdHlcIjogXCJvZmZcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwidHJhbnNpdFwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInZpc2liaWxpdHlcIjogXCJvZmZcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwid2F0ZXJcIixcclxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwiYWxsXCIsXHJcbiAgICAgICAgXCJzdHlsZXJzXCI6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJjb2xvclwiOiBcIiM5M2MyZmZcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInZpc2liaWxpdHlcIjogXCJvblwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9XHJcbl07XHJcblx0XHQgIG1hcC5zZXRPcHRpb25zKHtzdHlsZXM6IHN0eWxlc30pO1xyXG5cdFx0fVxyXG5cdCB9KTtcclxufVxyXG5cdFxyXG5mdW5jdGlvbiBNYXBMb2FkU2NyaXB0KCkge1xyXG5cdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuXHRzY3JpcHQudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xyXG5cdEdtYXBJbml0KCk7XHJcblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG59XHJcblxyXG4iXX0=
